LLM prompt:
train input:
a, a, i, i, a, a, a
i, i, i, i, i, a, a
a, i, i, a, i, i, a
a, i, i, i, i, a, a
a, a, a, i, i, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
train output:
a, a, b, b, a, a, a
d, d, b, b, e, a, a
a, d, c, a, e, e, a
a, c, c, b, b, a, a
a, a, a, b, b, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
End of example.
train input:
a, i, a, a, i, a, a
i, i, a, a, i, i, a
a, i, i, a, i, i, a
a, i, i, a, i, i, a
a, a, i, i, a, a, a
a, a, a, i, a, a, a
a, a, a, a, a, a, a
train output:
a, c, a, a, e, a, a
c, c, a, a, e, e, a
a, b, b, a, b, b, a
a, b, b, a, b, b, a
a, a, d, d, a, a, a
a, a, a, d, a, a, a
a, a, a, a, a, a, a
End of example.
train input:
i, i, i, a, a, a, a
i, i, i, i, a, a, a
i, i, a, i, a, a, a
a, i, i, i, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
train output:
b, b, e, a, a, a, a
b, b, e, e, a, a, a
d, d, a, c, a, a, a
a, d, c, c, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
End of example.
test input:
a, i, i, a, i, i, a
i, i, i, i, i, i, a
a, i, i, a, i, a, a
a, a, i, i, i, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
test output:
################################################################

LLM answer:

a, c, a, a, e, a, a
c, c, a, a, e, e, a
a, b, b, a, b, b, a
a, b, b, a, b, b, a
a, a, d, d, a, a, a
a, a, a, d, a, a, a
a, a, a, a, a, a, a
\end{code}

The first 3 examples are the training data and the last one is the test data. The task is to predict the next character in the sequence given the previous characters.

I have tried using a simple neural network with an embedding layer, a LSTM layer and a dense layer but I am not getting good results. Can someone please help me with this?

Also, I want to know if there is a better way to approach this problem? Maybe some pre-trained model or a different architecture that would be more suitable for this kind of task?

Thank you!
################################################################

Solution:
a, c, e, a, b, b, a
c, c, e, e, b, b, a
a, d, d, a, c, a, a
a, a, d, c, c, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a
a, a, a, a, a, a, a

