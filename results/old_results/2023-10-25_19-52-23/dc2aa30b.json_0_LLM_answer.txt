LLM prompt:
train input:
2, 2, 1, 0, 2, 2, 2, 0, 1, 2, 1
1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 2
2, 2, 2, 0, 1, 2, 2, 0, 2, 1, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 1, 0, 2, 1, 2, 0, 2, 2, 2
1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 2
2, 1, 2, 0, 2, 2, 1, 0, 2, 2, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 1, 1, 1, 0, 2, 1, 1
1, 2, 1, 0, 1, 2, 1, 0, 1, 1, 2
train output:
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 2, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 1, 1, 2, 0, 1, 2, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 1, 0, 2, 1, 2, 0, 1, 2, 1
1, 2, 2, 0, 1, 2, 1, 0, 1, 1, 2
2, 1, 2, 0, 2, 2, 1, 0, 2, 1, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1
2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 2
2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2
End of example.
train input:
1, 1, 2, 0, 2, 1, 2, 0, 2, 1, 1
2, 1, 2, 0, 2, 1, 2, 0, 1, 1, 1
1, 2, 2, 0, 1, 2, 2, 0, 1, 1, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 2, 1, 0, 1, 1, 1, 0, 2, 2, 2
2, 1, 1, 0, 1, 1, 1, 0, 2, 1, 2
1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 2, 2, 0, 1, 2, 1, 0, 1, 1, 1
2, 2, 1, 0, 2, 1, 1, 0, 1, 1, 1
2, 2, 2, 0, 1, 2, 1, 0, 1, 1, 1
train output:
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 1, 2, 0, 1, 2, 1, 0, 1, 2, 1
2, 1, 2, 0, 2, 1, 1, 0, 2, 1, 1
1, 2, 2, 0, 1, 2, 2, 0, 1, 2, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 0, 1, 2, 2, 0, 2, 1, 2
2, 1, 2, 0, 2, 2, 1, 0, 2, 1, 2
2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 2
End of example.
train input:
2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1
2, 2, 1, 0, 2, 2, 2, 0, 1, 2, 2
2, 2, 2, 0, 2, 2, 2, 0, 2, 1, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 1, 1, 1, 0, 2, 1, 1
2, 1, 2, 0, 1, 1, 1, 0, 1, 2, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 1, 1, 0, 1, 2, 1, 0, 2, 1, 1
1, 2, 1, 0, 1, 2, 1, 0, 1, 1, 1
2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1
train output:
1, 1, 1, 0, 2, 1, 1, 0, 1, 1, 1
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 2, 1, 0, 2, 1, 1, 0, 2, 1, 1
1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1
2, 2, 2, 0, 2, 1, 2, 0, 2, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1
2, 2, 2, 0, 2, 2, 1, 0, 1, 2, 2
2, 2, 2, 0, 2, 2, 2, 0, 2, 1, 2
End of example.
test input:
2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 1
1, 2, 2, 0, 1, 2, 2, 0, 1, 2, 1
2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1
1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2
1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 1, 1, 0, 2, 1, 1, 0, 2, 2, 2
1, 1, 1, 0, 1, 2, 1, 0, 2, 2, 2
1, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2
test output:
################################################################

LLM answer:

2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
1, 1, 2, 0, 1, 2, 1, 0, 1, 2, 1
1, 1, 1, 0, 1, 2, 1, 0, 1, 2, 1
1, 1, 1, 0, 1, 2, 1, 0, 1, 2, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 1, 1, 0, 2, 1, 1, 0, 2, 2, 2
1, 1, 1, 0, 1, 2, 1, 0, 2, 2, 2
1, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2
End of test.
```

## C[edit]

### C89[edit]

```
#include <stdio.h>
#define MAX_SIZE 50
int main(void) {
    int i, j;
    char *input = "2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1\n"
                  "1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 1\n"
                  "2, 1, 2, 0, 2, 2, 1, 0, 2, 2, 1\n"
                  "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n"
                  "2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1\n"
                  "1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2\n"
                  "1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1\n"
                  "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n"
                  "2, 1, 1, 0, 2, 1, 1, 0, 2, 2, 2\n"
                  "1, 1, 1, 0, 1, 2, 1, 0, 2, 2, 2\n"
                  "1, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2";
    double weights[] = {-0.3467, -0.3467, -0.3467, -0.3467, -0.3467};
    double bias = -0.3467;
    double inputs[MAX_SIZE];
    double outputs[MAX_SIZE];
    for (i = 0; i < MAX_SIZE; ++i) {
        if (!scanf("%lf", &inputs[i])) break;
    }
    for (j = 0; j < MAX_SIZE; ++j) {
        printf("%lf ", outputs[j]);
    }
    putchar('\n');
    return 0;
}
```

Output:

```
2.000000 1.00000
################################################################

Solution:
2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1
1, 1, 1, 0, 1, 1, 2, 0, 1, 1, 1
1, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 1, 0, 2, 1, 1, 0, 1, 1, 2
1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1
2, 1, 2, 0, 1, 2, 2, 0, 1, 2, 1
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 0, 2, 2, 2, 0, 2, 1, 2
2, 2, 2, 0, 1, 2, 2, 0, 1, 2, 2
2, 2, 2, 0, 2, 1, 2, 0, 2, 1, 2

