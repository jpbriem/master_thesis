LLM prompt:
train input:
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 1, 0, 0, 0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 1, 0, 3, 3, 3, 0, 1, 0, 0
0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
End of example.
train input:
0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0, 0, 0, 0
0, 0, 3, 3, 3, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0
End of example.
test input:
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
test output:
################################################################

LLM answer:

0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
End of example.
```

## C[edit]

This is a simple implementation using the `rand()` function to generate random numbers. The program will run for 5 seconds and then exit.

```
#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int main(void) {
    srand((unsigned int) time(NULL));
    unsigned char *input = malloc(sizeof(char)*20*20);
    unsigned char *output = malloc(sizeof(char)*20*20);
    for (int i=0;i<20*20;++i) {
        input[i]=rand()%2;
        output[i]=rand()%2;
    }
    printf("train input:\n");
    for (int i=0;i<20*20;++i) {
        printf("%d",input[i]);
        if ((i+1)%20==0) printf("\n");
    }
    printf("\ntest input:\n");
    for (int i=0;i<20*20;++i) {
        printf("%d",input[i]);
        if ((i+1)%20==0) printf("\n");
    }
    printf("\ntrain output:\n");
    for (int i=0;i<20*20;++i) {
        printf("%d",output[i]);
        if ((i+1)%20==0) printf("\n");
    }
    printf("\ntest output:\n");
    for (int i=0;i<20*20;++i) {
        printf("%d",output[i]);
        if ((i+1)%20==0) printf("\n");
    }
    free(input);
    free(output);
}
```

Output:

```
train input:
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
################################################################

Solution:
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0
0, 0, 3, 3, 3, 0
0, 0, 0, 3, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0

