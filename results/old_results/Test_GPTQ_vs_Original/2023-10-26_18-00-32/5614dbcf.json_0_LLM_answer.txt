LLM prompt:
train input:
3, 3, 3, 0, 0, 0, 8, 8, 8
3, 3, 3, 0, 0, 0, 8, 5, 8
3, 3, 3, 0, 0, 0, 8, 8, 8
0, 0, 0, 7, 5, 7, 0, 0, 0
0, 0, 0, 7, 7, 7, 0, 0, 0
0, 0, 0, 7, 7, 7, 0, 0, 0
6, 6, 6, 0, 0, 5, 9, 9, 9
6, 6, 6, 0, 0, 0, 9, 9, 9
6, 5, 6, 0, 5, 0, 9, 9, 5
train output:
3, 0, 8
0, 7, 0
6, 0, 9
End of example.
train input:
0, 0, 0, 2, 2, 2, 0, 0, 0
0, 5, 0, 2, 2, 2, 0, 0, 0
0, 0, 0, 2, 2, 2, 0, 0, 0
5, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 5, 0, 0, 0, 5, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 5, 0, 7, 7, 7, 0, 0, 0
0, 0, 0, 7, 7, 5, 0, 0, 0
0, 0, 0, 7, 7, 7, 0, 0, 0
train output:
0, 2, 0
0, 0, 0
0, 7, 0
End of example.
test input:
4, 4, 4, 0, 0, 0, 0, 5, 0
5, 4, 4, 0, 0, 0, 0, 0, 0
4, 4, 4, 0, 5, 0, 0, 0, 0
0, 0, 0, 3, 3, 3, 0, 5, 0
0, 0, 0, 3, 3, 3, 0, 0, 0
0, 0, 0, 3, 3, 3, 0, 0, 0
0, 0, 5, 9, 9, 9, 0, 0, 0
0, 0, 0, 9, 5, 9, 0, 0, 0
0, 0, 0, 9, 9, 9, 0, 0, 0
test output:
################################################################

LLM answer:

4, 0, 0
5, 0, 0
4, 0, 0
End of example.
```

## C[edit]

```
#include <stdio.h>
#include <string.h>

typedef struct {
    int *input;
    int *output;
} test_case;

void print_array(int *a, size_t n) {
    for (size_t i = 0; i < n; ++i)
        printf("%d ", a[i]);
    putchar('\n');
}

void run_tests(const test_case *tc, size_t n) {
    for (size_t i = 0; i < n; ++i) {
        printf("test %zu:\n", i);
        print_array(tc->input + i*10, 10);
        print_array(tc->output + i*10, 10);
        puts("");
    }
}

int main() {
    const test_case tc[] = {
        {{3, 3, 3, 0, 0, 0, 8, 8, 8}, {3, 3, 3, 0, 0, 0, 8, 5, 8}},
        {{0, 0, 0, 7, 5, 7, 0, 0, 0}, {0, 0, 0, 7, 7, 7, 0, 0, 0}},
        {{6, 6, 6, 0, 0, 5, 9, 9, 9}, {6, 0, 9, 0, 0, 5, 9, 9, 5}},
        {{0, 0, 0, 2, 2, 2, 0, 0, 0}, {0, 2, 0, 0, 0, 0, 0, 0, 0}},
        {{0, 5, 0, 2, 2, 2, 0, 0, 0}, {0, 0, 0, 2, 2, 2, 0, 0, 0}},
        {{0, 0, 0, 5, 0, 0, 0, 5, 0}, {0, 0, 0, 5, 0, 0, 0, 0, 0}},
        {{0, 5, 0, 7, 7, 7, 0, 0, 0}, {0, 0, 0, 7, 7, 5, 0, 0, 0}},
        {{0, 0, 0, 3, 3, 3, 0, 5, 0}, {0, 0, 0, 3, 3, 3, 0, 0, 0}},
        {{0, 0, 0, 3, 3, 3, 0, 0, 0}, {0, 0, 0, 3, 3, 3, 0, 0, 0}},
        {{0, 0, 5, 9, 9, 9, 0, 0, 0}, {0, 0, 0, 9, 5, 9, 0, 0, 0}}};
    run_tests(tc, sizeof(tc)/sizeof(*tc));
}
```

Output:

```
test 0:
3 3 3 0 0 0 8 8 8
3 3 3 0 0 0 8 5 8
3 3 3 0 0 0 8 8 8
test 1:
0 0 0 7 5 7 0 0 0
0 0 0 7 7 7 0 0 0
0 0 0 7 7 7 0 0 0
test 2:
6 6 6 0 0 5 9 9 9
6 6 6 0 0 0 9 9 9
6 5 6 0 5 0 9 9 5
test
################################################################

Solution:
4, 0, 0
0, 3, 0
0, 9, 0

