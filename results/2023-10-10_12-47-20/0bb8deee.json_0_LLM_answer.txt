LLM prompt:
train input:
0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 3, 3
0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 3, 3, 0
0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 3, 0
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
0, 4, 0, 4, 0, 0, 0, 2, 0, 5, 5, 0, 0
0, 0, 4, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0
0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0
0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
train output:
1, 1, 0, 0, 3, 3
0, 1, 0, 3, 3, 0
0, 1, 1, 0, 3, 0
0, 4, 0, 5, 5, 0
4, 0, 4, 0, 5, 0
0, 4, 0, 0, 0, 5
End of example.
train input:
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 0, 3, 3, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0
0, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
5, 5, 5, 0, 1, 0, 0, 8, 0, 8, 0, 0, 0
0, 5, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0
0, 0, 0, 0, 1, 0, 0, 8, 0, 0, 0, 0, 0
train output:
0, 2, 2, 3, 0, 0
2, 2, 2, 0, 3, 3
0, 2, 0, 0, 3, 0
0, 0, 5, 8, 0, 8
5, 5, 5, 0, 8, 0
0, 5, 0, 8, 0, 0
End of example.
train input:
0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 1, 0
0, 0, 2, 2, 0, 0, 3, 0, 1, 0, 0, 0
0, 2, 0, 2, 0, 0, 3, 0, 0, 1, 0, 0
0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0
0, 0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 5
0, 0, 0, 0, 0, 0, 3, 0, 0, 5, 5, 5
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
4, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
4, 4, 4, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 4, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0
train output:
0, 2, 2, 0, 1, 1
2, 0, 2, 1, 0, 0
0, 2, 0, 0, 1, 0
4, 0, 0, 0, 5, 0
4, 4, 4, 5, 0, 5
0, 4, 0, 5, 5, 5
End of example.
test input:
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 3, 0
0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 3, 3, 0
0, 0, 2, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0
0, 2, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
0, 0, 6, 6, 0, 0, 1, 0, 0, 4, 0, 4, 0
0, 6, 0, 6, 0, 0, 1, 0, 0, 0, 4, 0, 0
0, 6, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
test output:
################################################################

LLM answer:

0, 2, 2, 3, 0, 0
2, 2, 2, 0, 3, 3
0, 2, 0, 0, 3, 0
0, 0, 5, 8, 0, 8
5, 5, 5, 0, 8, 0
0, 5, 0, 8, 0, 0
End of example.
\end{code}

This is an IPython notebook that contains a few examples of the MNIST dataset, which is a popular image classification benchmark. The notebook includes both training and test data, with inputs represented as binary vectors and outputs corresponding to the digit labels (0-9).

The first section of the code block loads the MNIST dataset using `import mnist` and then splits it into training and test sets using `train_data, test_data = mnist.load_data()`.

The second section defines two functions for converting between image and binary vector representations. `def image_to_binary(image):` takes in a 28x28 image and returns a 784-length binary vector representing the pixel values of the image. `def binary_to_image(vector):` does the opposite, taking a 784-length binary vector and returning a reconstructed 28x28 image.

The third section demonstrates how these functions can be used to convert between image and binary vector representations. It shows several examples of images being converted to binary vectors and back again, using the `image_to_binary()` and `binary_to_image()` functions.

Finally, the fourth section provides an interactive prompt inviting the user to try out the functions on their own image.
