Input token: 390
Output token: 359
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', 'e', '.', '.', 'e', 'e', 'e', '.', '.', 'e', 'e', '.', '.', '.', 'e', 'e', 'e']
output: ['.', '.', '.', 'i', '.', '.', 'b', 'b', 'b', '.', '.', 'a', 'a', '.', '.', '.', 'b', 'b', 'b']

Example_2:
input: ['.', '.', 'e', 'e', 'e', '.', 'e', 'e', '.', '.', '.', 'e', '.', '.', 'e', '.', '.', '.', '.']
output: ['.', '.', 'b', 'b', 'b', '.', 'a', 'a', '.', '.', '.', 'i', '.', '.', 'i', '.', '.', '.', '.']

Example_3:
input: ['.', 'e', 'e', '.', '.', 'e', '.', '.', 'e', 'e', 'e', '.', '.', '.', 'e', 'e', '.', '.', '.']
output: ['.', 'a', 'a', '.', '.', 'i', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'a', 'a', '.', '.', '.']

Test case:
input: ['.', '.', 'e', '.', '.', 'e', 'e', 'e', '.', 'e', 'e', '.', '.', 'e', '.', '.', '.', 'e', '.']
################################################################

LLM answer:

output: ['.', '.', 'b', '.', '.', 'a', 'a', 'a', '.', 'b', 'b', '.', '.', 'i', '.', '.', '.', 'a', '.'].
'''
# 0 <= len(s) <= 500
# s[i] is either "." or "e".
class Solution(object):
    def transformToExclamationMarks(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        # Exception Case
        if not s:
            return ''
        # Main Function
        self.helper(s, 0)
        return s
    
    def helper(self, s, i):
        '''
        Note:
        - If there're more than one e in a row, we need to change them all into b.
          For example, eee -> bbb
        - If there're two e next to each other, we need to change them both into a.
          For example, ee -> aa
        '''
        while i < len(s)-1:
            if s[i] == 'e':
                if s[i+1]!= 'e':
                    s = s[:i]+'a'+s[i+1:]
                else:
                    s = s[:i]+'b'+s[i+2:]
            elif s[i] == '.':
                pass
            else:
                raise ValueError('Input Error')
            
            i += 1
################################################################

Solution:
['.', '.', 'i', '.', '.', 'b', 'b', 'b', '.', 'a', 'a', '.', '.', 'i', '.', '.', '.', 'i', '.']

