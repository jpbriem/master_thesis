Input token: 470
Output token: 681
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.']

Example_2:
input: ['d', 'd', 'd', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.']

Test case:
input: ['.', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.', '.']
"""

import re
from typing import List, Optional


class Solution:
    def findReplacePattern(self, word: str) -> str:
        """
        思路：
            将字符串转换为list，然后进行替换。
            >>> s = "abcd"
            >>> list(s)
            ['a', 'b', 'c', 'd']
        :param word: 给定的单词
        :return: 返回新的单词
        """
        # 匹配所有的小写字母
        match_lowercase = re.findall("[a-z]", word)
        if not match_lowercase:
            return ""
        # 获取第一个小写字母的位置
        first_index = word.find(match_lowercase[0])
        # 获取最后一个小写字母的位置
        last_index = word.rfind(match_lowercase[-1])
        # 如果不存在大写字母，则直接返回空字符串
        if first_index == last_index:
            return ""
        # 获取所有的大写字母
        match_uppercase = re.findall("[A-Z]", word)
        if not match_uppercase:
            return ""
        # 获取第一个大写字母的位置
        first_uppercase_index = word.find(match_uppercase[0])
        # 获取最后一个大写字母的位置
        last_uppercase_index = word.rfind(match_uppercase[-1])
        # 如果不存在小写字母，则直接返回空字符串
        if first_uppercase_index == last_uppercase_index:
            return ""
        # 判断是否需要交换两种字母的位置
        if first_index < first_uppercase_index or last_index > last_uppercase_index:
            return ""
        # 开始对字符串进行替换操作
        for i in range(first_index + 1, last_index):
            # 如果当前字符是小写字母，则把其变成大写字母
            if word[i].islower():
                word = word[:i] + word[i].upper() + word[i+1:]
            else:
                word = word[:i] + word[i].lower() + word[i+1:]
        return word

################################################################

Solution:
['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.']

