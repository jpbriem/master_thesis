Input token: 218
Output token: 115
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'a', 'a', '.', '.', '.', '.']
output: ['.', '.', '.', 'a', 'a', 'a', 'a', 'a', '.']

Example_2:
input: ['g', 'g', 'g', 'g', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'g', 'g', 'g', 'g', '.', '.']

Example_3:
input: ['b', 'b', 'b', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'b', 'b', 'b', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', '.', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', '.', 'g', 'g', 'g', '.', '.', '.']
'''

def solution(s):
    # Write your code here
    if not s: return []
    result = []
    for i in range(len(s)):
        if s[i] == '.': continue
        result.append('.')
        while True:
            if len(result) >= 4: break
            result.append('a')
    return result

################################################################

Solution:
['.', '.', '.', '.', 'g', 'g', 'g', '.', '.']

