Input token: 301
Output token: 253
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', 'a', 'a', 'a', 'a']
output: ['.', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', 'g', 'g', 'g', 'g']

Example_2:
input: ['.', '.', '.', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.']

Example_3:
input: ['.', 'a', 'a', 'a', 'a', 'a', '.', '.', 'a', 'a', 'a', 'a', '.']
output: ['.', 'f', 'f', 'f', 'f', 'f', '.', '.', 'g', 'g', 'g', 'g', '.']

Test case:
input: ['.', '.', '.', 'a', 'a', '.', 'a', 'a', 'a', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', '.', 'f', 'f', '.', 'f', 'f', 'f', '.', '.', '.', '.']

Explanation:
The first 5 elements of the output correspond to the first 5 elements of the input, which is a sequence of 4 zeros followed by an element of value 1.
The last 7 elements of the output correspond to the last 7 elements of the input, which is a sequence of 6 zeros followed by an element of value 1.
In both cases, we replace each zero with f and each one with g.
*/
class Solution {
public:
    vector<int> replaceElements(vector<int>& arr) {
        int n = arr.size();
        for (int i=n-1;i>=0;--i){
            if (arr[i] == INT_MAX){
                arr[i] = -1;
            }else{
                arr[i] = max(arr[i], arr[i+1]);
            }
        }
        return arr;
    }
};
################################################################

Solution:
['.', '.', '.', 'g', 'g', '.', 'f', 'f', 'f', '.', '.', '.', '.']

