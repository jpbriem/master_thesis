Input token: 253
Output token: 147
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', 'b', 'b', 'b', 'b', 'b', '.', '.', 'c', '.']
output: ['.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'c', '.']

Example_2:
input: ['d', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', 'c']
output: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'c']

Example_3:
input: ['h', 'h', 'h', 'h', '.', '.', '.', '.', 'c', '.']
output: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'c', '.']

Test case:
input: ['f', 'f', 'f', 'f', '.', '.', '.', '.', 'c', '.']
################################################################

LLM answer:

output: ['f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'c', '.']
*/
public class Solution {
    public String[] replaceSpaces(String[] S, int length) {
        if (S == null || S.length == 0) return new String[0];
        for (int i = 0; i < S.length; i++) {
            if (S[i].contains(" ")) {
                S[i] = S[i].replaceAll(" ", "%20");
            }
        }
        return S;
    }
}
################################################################

Solution:
['f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'c', '.']

