Input token: 307
Output token: 179
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', 'c', 'c', 'c', 'c']
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', 'f', 'f', 'f', 'f']

Example_2:
input: ['.', '.', '.', 'c', 'c', '.', '.', '.', 'c', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'f', 'f', '.', '.', '.', 'h', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', 'c', 'c', 'c', 'c', '.', 'c', 'c', 'c', '.', '.', '.', '.']
output: ['.', '.', 'f', 'f', 'f', 'f', '.', 'h', 'h', 'h', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'c', 'c', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', 'f', 'f', '.', '.', '.', 'h', 'h', 'h', '.', '.', '.', '.']

Constraints:
0 <= s.length <= 5 * 10^4
s[i] is either '.' or lowercase English letter.
 */
public class ReplaceAllCaps {
    public String replace(String s) {
        StringBuilder sb = new StringBuilder();
        for (int i=0; i<s.length(); i++) {
            if (Character.isUpperCase(s.charAt(i))) {
                sb.append('f');
            } else {
                sb.append('h');
            }
        }
        return sb.toString();
    }
}
################################################################

Solution:
['.', '.', 'f', 'f', '.', '.', '.', 'h', 'h', 'h', '.', '.', '.', '.']

