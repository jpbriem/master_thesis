Input token: 445
Output token: 238
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'i', '.']
output: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'i', '.']

Example_2:
input: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', 'i']
output: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'i']

Example_3:
input: ['.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.']
output: ['.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'i', '.', '.']

Test case:
input: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.']
################################################################

LLM answer:

output: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'i', '.']
*/
public class Solution {
    public String[] replaceSpace(String[] strs) {
        if (strs == null || strs.length == 0) return new String[0];
        int len = strs.length;
        for (int i = 0; i < len; ++i) {
            char[] chars = strs[i].toCharArray();
            StringBuilder sb = new StringBuilder();
            for (char c : chars) {
                if (c!='') {
                    sb.append(c);
                } else {
                    sb.append("%20");
                }
            }
            strs[i] = sb.toString();
        }
        return strs;
    }
}
################################################################

Solution:
['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'i', '.']

