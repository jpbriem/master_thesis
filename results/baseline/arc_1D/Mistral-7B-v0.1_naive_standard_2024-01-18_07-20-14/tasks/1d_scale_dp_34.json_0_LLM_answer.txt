Input token: 321
Output token: 224
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', '.', '.', '.', 'f', 'f', 'f', 'f', '.', '.', 'a', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', 'a', '.', '.']

Example_2:
input: ['.', 'b', 'b', 'b', '.', '.', 'a', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', 'b', 'b', 'b', 'b', 'b', 'a', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', 'a', '.', '.', '.', '.', '.']
output: ['.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', 'a', '.', '.']
################################################################

LLM answer:

output: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', '.', '.']

Constraints:
0 <= s.length <= 5 * 10^4
s consists of only lowercase English letters.
 */
public class ReplaceAll {
    public static void main(String[] args) {
        String s = ".hhha";
        System.out.println(replaceSpace(s));
    }

    private static String replaceSpace(String s) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) =='') {
                sb.append("%20");
            } else {
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();
    }
}
################################################################

Solution:
['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', '.', '.']

