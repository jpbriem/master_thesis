LLM prompt:
train input:
0, 0, 0, 0
0, 3, 4, 0
0, 7, 6, 0
0, 0, 0, 0
train output:
3, 0, 0, 4
0, 0, 0, 0
0, 0, 0, 0
7, 0, 0, 6
End of example.
train input:
0, 0, 0, 0
0, 5, 6, 0
0, 8, 3, 0
0, 0, 0, 0
train output:
5, 0, 0, 6
0, 0, 0, 0
0, 0, 0, 0
8, 0, 0, 3
End of example.
test input:
0, 0, 0, 0
0, 2, 3, 0
0, 4, 9, 0
0, 0, 0, 0
test output:
################################################################

LLM answer:

0, 0, 0, 0
0, 0, 0, 0
0, 0, 0, 0
0, 0, 0, 0
```

Comment: I'm not sure what you mean by "these are the same". Can you please elaborate?

## Answer (1)

You can use `np.where` to create a mask for each row and then multiply it with your original dataframe.

```
df = pd.DataFrame({'A': [0, 0, 0, 0], 'B': [0, 3, 4, 0]})
mask = np.where(df['B'] == df['B'].shift(), False, True).values
df_new = pd.DataFrame(df.values, columns=df.columns)
df_new[['A', 'B']] = df_new[['A', 'B']].apply(lambda x: x * mask, axis=1)
print(df_new)
```

Output:

```
 A   B
0  0   0
1  0   0
2  0   0
3  0   0
```
################################################################

Solution:
2, 0, 0, 3
0, 0, 0, 0
0, 0, 0, 0
4, 0, 0, 9

