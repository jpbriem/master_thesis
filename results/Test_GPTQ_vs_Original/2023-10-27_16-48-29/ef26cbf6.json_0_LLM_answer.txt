LLM prompt:
train input:
0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
0, 3, 0, 4, 0, 2, 0, 4, 0, 6, 0
0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
1, 0, 0, 4, 0, 1, 0, 4, 1, 0, 1
0, 1, 0, 4, 1, 1, 1, 4, 1, 0, 1
1, 1, 1, 4, 1, 0, 1, 4, 0, 1, 0
train output:
0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
0, 3, 0, 4, 0, 2, 0, 4, 0, 6, 0
0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
3, 0, 0, 4, 0, 2, 0, 4, 6, 0, 6
0, 3, 0, 4, 2, 2, 2, 4, 6, 0, 6
3, 3, 3, 4, 2, 0, 2, 4, 0, 6, 0
End of example.
train input:
0, 0, 0, 4, 1, 0, 0
0, 7, 0, 4, 0, 1, 1
0, 0, 0, 4, 0, 1, 0
4, 4, 4, 4, 4, 4, 4
0, 0, 0, 4, 1, 1, 0
0, 3, 0, 4, 0, 1, 0
0, 0, 0, 4, 1, 1, 1
4, 4, 4, 4, 4, 4, 4
0, 0, 0, 4, 1, 1, 0
0, 8, 0, 4, 0, 1, 1
0, 0, 0, 4, 1, 0, 1
train output:
0, 0, 0, 4, 7, 0, 0
0, 7, 0, 4, 0, 7, 7
0, 0, 0, 4, 0, 7, 0
4, 4, 4, 4, 4, 4, 4
0, 0, 0, 4, 3, 3, 0
0, 3, 0, 4, 0, 3, 0
0, 0, 0, 4, 3, 3, 3
4, 4, 4, 4, 4, 4, 4
0, 0, 0, 4, 8, 8, 0
0, 8, 0, 4, 0, 8, 8
0, 0, 0, 4, 8, 0, 8
End of example.
test input:
1, 0, 0, 4, 0, 0, 0
0, 1, 0, 4, 0, 6, 0
1, 1, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
0, 0, 1, 4, 0, 0, 0
0, 1, 1, 4, 0, 2, 0
1, 0, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
1, 1, 0, 4, 0, 0, 0
0, 1, 0, 4, 0, 8, 0
1, 1, 1, 4, 0, 0, 0
test output:
################################################################

LLM answer:

1, 0, 0, 4, 0, 0, 0
0, 1, 0, 4, 0, 6, 0
1, 1, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
0, 0, 1, 4, 0, 0, 0
0, 1, 1, 4, 0, 2, 0
1, 1, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
1, 1, 1, 4, 0, 0, 0
0, 1, 0, 4, 0, 8, 0
1, 1, 1, 4, 0, 0, 0
End of example.
```

## C[edit]

```
#include <stdio.h>
#include <string.h>

typedef struct {
    int *input;
    int *output;
} test_case;

void print_test(const char *name, const test_case *tc) {
    printf("Test %s:\n", name);
    for (int i = 0; i < tc->input[0]; ++i) {
        for (int j = 0; j < tc->input[0]; ++j) {
            printf("%d ", tc->input[i*tc->input[0]+j]);
        }
        printf("\n");
    }
    for (int i = 0; i < tc->output[0]; ++i) {
        for (int j = 0; j < tc->output[0]; ++j) {
            printf("%d ", tc->output[i*tc->output[0]+j]);
        }
        printf("\n");
    }
    puts("");
}

void run_tests(const test_case *tc, size_t n) {
    for (size_t i = 0; i < n; ++i) {
        if (!strcmp(tc[i].input, tc[i].output)) {
            continue;
        }
        printf("Test %zu failed.\n", i+1);
        print_test(tc[i].input, &tc[i]);
        puts("Expected:");
        print_test(tc[i].output, &tc[i]);
        puts("Actual:");
        print_test(tc[i].input, &tc[i]);
        exit(EXIT_FAILURE);
    }
    puts("All tests passed.");
}

int main() {
    static const test_case cases[] = {
        {"0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0\n"
         "0, 3, 0, 4, 0, 2, 0, 4, 0, 6, 0\n"
         "0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0\n"
         "4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4\n"
         "1, 0, 0, 4, 0, 1, 0, 4, 1, 0, 1\n"
         "0, 1, 0, 4, 1, 0, 1, 4, 0, 6, 0\n"
         "1, 1, 1, 4, 1, 0, 1, 4, 0, 0, 0\n"
         "4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4\n"
         "0, 0, 0, 4, 1, 1, 0, 4, 0, 0, 0\n"
         "0, 3, 0, 4, 2, 2, 2, 4, 0, 6, 0\
################################################################

Solution:
6, 0, 0, 4, 0, 0, 0
0, 6, 0, 4, 0, 6, 0
6, 6, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
0, 0, 2, 4, 0, 0, 0
0, 2, 2, 4, 0, 2, 0
2, 0, 0, 4, 0, 0, 0
4, 4, 4, 4, 4, 4, 4
8, 8, 0, 4, 0, 0, 0
0, 8, 0, 4, 0, 8, 0
8, 8, 8, 4, 0, 0, 0

