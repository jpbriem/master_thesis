LLM prompt:
train input:
8, 0, 0
0, 8, 0
0, 0, 0
train output:
0, 2, 2
2, 0, 2
2, 2, 2
End of example.
train input:
0, 0, 3
0, 3, 0
3, 0, 0
train output:
1, 1, 0
1, 0, 1
0, 1, 1
End of example.
train input:
5, 0, 0
5, 5, 0
5, 0, 0
train output:
0, 4, 4
0, 0, 4
0, 4, 4
End of example.
train input:
5, 5, 5
0, 0, 5
0, 0, 0
train output:
0, 0, 0
4, 4, 0
4, 4, 4
End of example.
train input:
0, 8, 0
0, 8, 0
8, 0, 0
train output:
2, 0, 2
2, 0, 2
0, 2, 2
End of example.
train input:
8, 0, 8
0, 8, 0
0, 8, 0
train output:
0, 2, 0
2, 0, 2
2, 0, 2
End of example.
test input:
0, 5, 0
5, 5, 0
0, 0, 5
test output:
################################################################

LLM answer:

0, 0, 0
0, 0, 0
0, 0, 0
End of test.
\end{code}

Comment: I'm not sure what you mean by "the same result". The first two examples are different from each other and the last three are all the same.

Comment: @user2357112supportsMonica I meant that they should be the same as in my question.

Answer: You can use `np.argmax` to find the index of the maximum value for each row. Then you can take the indices of those rows where the maximum is zero.

\begin{code}
import numpy as np

def get_zero_rows(matrix):
    maxes = np.argmax(matrix, axis=1)
    return np.where(maxes == 0)[0]
\end{code}
################################################################

Solution:
4, 0, 4
0, 0, 4
4, 4, 0

