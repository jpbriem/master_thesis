Input token: 334
Output token: 303
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['b', 'b', 'a'], ['b', 'a', 'b'], ['b', 'h', 'a']]
output: [['a', 'h', 'b'], ['b', 'a', 'b'], ['a', 'b', 'b']]

Example_2:
input: [['i', 'b', 'd'], ['b', 'd', 'd'], ['b', 'i', 'b']]
output: [['b', 'i', 'b'], ['d', 'd', 'b'], ['d', 'b', 'i']]

Example_3:
input: [['h', 'h', 'h'], ['e', 'e', 'h'], ['h', 'e', 'e']]
output: [['e', 'e', 'h'], ['h', 'e', 'e'], ['h', 'h', 'h']]

Example_4:
input: [['c', 'b', 'i'], ['i', 'i', 'i'], ['b', 'c', 'c']]
output: [['c', 'c', 'b'], ['i', 'i', 'i'], ['i', 'b', 'c']]

Test case:
input: [['f', 'd', 'd'], ['f', 'f', 'd'], ['d', 'f', 'g']]
################################################################

LLM answer:

output: [['d', 'f', 'g'], ['f', 'f', 'd'], ['d', 'f', 'g']]
"""

from typing import List, Tuple

class Solution:
    def sortArrayByRow(self, nums: List[List[str]]) -> None:
        """
        Time complexity: O(n)
        Space complexity: O(n)
        """
        for i in range(len(nums)):
            for j in range(len(nums[0])):
                if nums[i][j].islower():
                    nums[i][j] = nums[i][j].upper()
        
        for i in range(len(nums)):
            for j in range(len(nums[0]) - 1):
                if nums[i][j].islower():
                    nums[i][j], nums[i][j + 1] = nums[i][j + 1], nums[i][j]

        return nums

if __name__ == "__main__":
    s = Solution()
    print(s.sortArrayByRow([["f", "d", "d"], ["f", "f", "d"], ["d", "f", "g"]]))
################################################################

Solution:
[['g', 'f', 'd'], ['d', 'f', 'f'], ['d', 'd', 'f']]

