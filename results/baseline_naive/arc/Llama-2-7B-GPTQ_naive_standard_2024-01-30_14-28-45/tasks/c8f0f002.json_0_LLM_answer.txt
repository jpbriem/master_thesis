Input token: 390
Output token: 269
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['b', 'i', 'i', 'h', 'h', 'i'], ['b', 'b', 'h', 'h', 'b', 'i'], ['h', 'b', 'b', 'h', 'h', 'i']]
output: [['b', 'i', 'i', 'f', 'f', 'i'], ['b', 'b', 'f', 'f', 'b', 'i'], ['f', 'b', 'b', 'f', 'f', 'i']]

Example_2:
input: [['h', 'h', 'h', 'b'], ['b', 'i', 'b', 'h'], ['h', 'b', 'b', 'h']]
output: [['f', 'f', 'f', 'b'], ['b', 'i', 'b', 'f'], ['f', 'b', 'b', 'f']]

Example_3:
input: [['b', 'i', 'b', 'h', 'b'], ['h', 'i', 'i', 'b', 'b'], ['h', 'b', 'i', 'i', 'h']]
output: [['b', 'i', 'b', 'f', 'b'], ['f', 'i', 'i', 'b', 'b'], ['f', 'b', 'i', 'i', 'f']]

Test case:
input: [['b', 'h', 'h', 'b', 'h'], ['i', 'b', 'h', 'h', 'h'], ['i', 'h', 'b', 'h', 'i']]
################################################################

LLM answer:

output: [['f', 'f', 'f', 'b', 'h'], ['b', 'i', 'b', 'f', 'h'], ['f', 'b', 'i', 'i', 'f']]
"""
import sys
from typing import List, Tuple


def get_input(lines):
    return lines[0][:-1].split()


def get_output(lines):
    return lines[-1][:-1].split()


def transform(inputs: List[List[str]], outputs: List[Tuple[int]]) -> None:
    for i in range(len(inputs)):
        if inputs[i][0] == "b":
            outputs[i] = (get_output([line for line in inputs[i]]),)
        else:
            outputs[i] = (get_output([line for line in inputs[i][::-1]]),)


if __name__ == "__main__":
    with open("input.txt") as f:
        lines = f.read().strip("\n").split("\n\n")
        print(transform(lines[:], lines))

################################################################

Solution:
[['b', 'f', 'f', 'b', 'f'], ['i', 'b', 'f', 'f', 'f'], ['i', 'f', 'b', 'f', 'i']]

