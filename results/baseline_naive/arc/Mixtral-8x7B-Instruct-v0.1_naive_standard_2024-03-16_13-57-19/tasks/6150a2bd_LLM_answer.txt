
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[3, 3, 8], [3, 7, 0], [5, 0, 0]]
output: [[0, 0, 5], [0, 7, 3], [8, 3, 3]]

Example_2:
input: [[5, 5, 2], [1, 0, 0], [0, 0, 0]]
output: [[0, 0, 0], [0, 0, 1], [2, 5, 5]]

Test case:
input: [[6, 3, 5], [6, 8, 0], [4, 0, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 4], [0, 8, 6], [5, 3, 6]]
*/

#include <iostream>
using namespace std;

void reverse(int arr[][3]) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3 / 2; ++j) {
            int temp = arr[i][j];
            arr[i][j] = arr[i][2 - j];
            arr[i][2 - j] = temp;
        }
    }
}

void rotate90DegreeClockwise(int arr[][3]) {
    // transpose the matrix
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < i; ++j) {
            swap(arr[i][j], arr[j][i]);
        }
    }

    // reverse each row
    reverse(arr);
}

int main() {
    int inputArr[][3] = {{6, 3, 5}, {6, 8, 0}, {4, 0, 0}};
    cout << "Input array:" << endl;
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << inputArr[i][j] <<'';
        }
        cout << endl;
    }

    rotate90DegreeClockwise(inputArr);

    cout << "Output array after rotation 90 degree clockwise:" << endl;
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << inputArr[i][j] <<'';
        }
        cout << endl;
    }

    return 0;
}


###########################################################
Result:
solution: [[0, 0, 4], [0, 8, 6], [5, 3, 6]]


success: 1

too_long_prompt: False

tries: 1

success_rate: 0.1

cat_success_cnt: 1

cat_success_rate: 0.1

