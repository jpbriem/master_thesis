Input token: 316
Output token: 401
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[2, 2, 1], [2, 1, 2], [2, 8, 1]]
output: [[1, 8, 2], [2, 1, 2], [1, 2, 2]]

Example_2:
input: [[9, 2, 4], [2, 4, 4], [2, 9, 2]]
output: [[2, 9, 2], [4, 4, 2], [4, 2, 9]]

Example_3:
input: [[8, 8, 8], [5, 5, 8], [8, 5, 5]]
output: [[5, 5, 8], [8, 5, 5], [8, 8, 8]]

Example_4:
input: [[3, 2, 9], [9, 9, 9], [2, 3, 3]]
output: [[3, 3, 2], [9, 9, 9], [9, 2, 3]]

Test case:
input: [[6, 4, 4], [6, 6, 4], [4, 6, 7]]
################################################################

LLM answer:

output: [[4, 6, 7], [6, 6, 4], [6, 4, 4]]
"""

import unittest
from typing import List

class Solution:
    def sortColums(self, matrix: List[List[int]]) -> None:
        """
        Do not write additional code here.
        
        Update your answer in the editor below.
        """
        for i in range(len(matrix)):
            if len(matrix) > 0:
                temp = []
                for j in range(len(matrix)):
                    if matrix[i][j] < matrix[j][i]:
                        temp.append([matrix[i][j], matrix[j][i]])
                    else:
                        temp.append([matrix[j][i], matrix[i][j]])
                matrix[i] = temp

if __name__ == '__main__':
    solution = Solution()
    testcase = [
        [[2, 2, 1], [2, 1, 2], [2, 8, 1]],
        [[9, 2, 4], [2, 4, 4], [2, 9, 2]],
        [[8, 8, 8], [5, 5, 8], [8, 5, 5]],
        [[3, 2, 9], [9, 9, 9], [2, 3, 3]],
        [[6, 4, 4], [6, 6, 4], [4, 6, 7]],
    ]
    for tc in testcase:
        solution.sortColums(tc)
        print(tc)

################################################################

Solution:
[[7, 6, 4], [4, 6, 6], [4, 4, 6]]

