Input token: 433
Output token: 307
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[6, 6, 7, 6], [6, 6, 7, 7], [7, 7, 6, 7]]
output: [[2, 2, 7, 2], [2, 2, 7, 7], [7, 7, 2, 7]]

Example_2:
input: [[7, 7, 7, 6], [6, 6, 7, 6], [7, 7, 6, 7], [7, 6, 7, 7], [7, 6, 7, 6], [6, 6, 6, 7]]
output: [[7, 7, 7, 2], [2, 2, 7, 2], [7, 7, 2, 7], [7, 2, 7, 7], [7, 2, 7, 2], [2, 2, 2, 7]]

Example_3:
input: [[7, 7, 6, 6, 6, 6], [6, 7, 6, 7, 7, 7], [7, 6, 7, 7, 6, 7]]
output: [[7, 7, 2, 2, 2, 2], [2, 7, 2, 7, 7, 7], [7, 2, 7, 7, 2, 7]]

Test case:
input: [[6, 7, 7, 6], [6, 7, 6, 7], [7, 7, 7, 6], [7, 6, 7, 6]]
################################################################

LLM answer:

output: [[4, 5, 5, 4], [4, 5, 4, 5], [5, 5, 5, 4], [5, 4, 5, 4]]
"""
import sys
from typing import List

class Solution(object):
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        if len(nums) == 0: return []
        
        # 排序，保证每个元素都是唯一的
        nums = sorted(nums)
        
        # 记录当前最大值和下标
        max_val = nums[-1]
        idx = -1
        
        # 逐次取出最大值，并将其加入到结果中
        for i in range(len(nums)):
            if nums[i] > max_val:
                max_val = nums[i]
                idx += 1
                
            yield [nums[j] for j in range(idx + 1, idx + max_val)]
            

################################################################

Solution:
[[2, 7, 7, 2], [2, 7, 2, 7], [7, 7, 7, 2], [7, 2, 7, 2]]

