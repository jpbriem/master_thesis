
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['j', 'a', 'a'], ['j', 'j', 'j'], ['j', 'j', 'j']]
output: [['a', 'j', 'j'], ['a', 'j', 'j'], ['j', 'j', 'j']]

Example_2:
input: [['g', 'g', 'g'], ['a', 'a', 'a'], ['g', 'g', 'a']]
output: [['g', 'a', 'a'], ['g', 'a', 'g'], ['g', 'a', 'g']]

Example_3:
input: [['a', 'a', 'j'], ['a', 'a', 'j'], ['j', 'j', 'j']]
output: [['j', 'j', 'j'], ['a', 'a', 'j'], ['a', 'a', 'j']]

Example_4:
input: [['c', 'a', 'c'], ['a', 'a', 'c'], ['a', 'c', 'c']]
output: [['c', 'c', 'c'], ['a', 'a', 'c'], ['c', 'a', 'a']]

Test case:
input: [['a', 'a', 'a'], ['f', 'a', 'a'], ['a', 'f', 'f']]

###########################################################
Sample Outputs:
output: [['a', 'a', 'a'], ['a', 'a', 'f'], ['f', 'f', 'a']]
*/

public class Solution {
    public int[][] solve(int[][] board) {
        if (board == null || board.length == 0) return new int[0][];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j]!= 'O') continue;
                dfs(board, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 'T') board[i][j] = 'O';
                else if (board[i][j] == 'O') board[i][j] = 'X';
            }
        }
        return board;
    }

    private void dfs(int[][] board, int x, int y) {
        if (x < 0 || x >= board.length || y < 0 || y >= board[x].length || board[x][y]!= 'O') return;
        board[x][y] = 'T';
        dfs(board, x + 1, y);
        dfs(board, x - 1, y);
        dfs(board, x, y + 1);
        dfs(board, x, y - 1);
    }
}


###########################################################
Result:
solution: [['a', 'a', 'f'], ['a', 'a', 'f'], ['a', 'f', 'a']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.125

cat_success_cnt: 6

cat_success_rate: 0.125

