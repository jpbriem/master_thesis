
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['c', 'c', 'b'], ['c', 'b', 'c'], ['c', 'i', 'b']]
output: [['b', 'i', 'c'], ['c', 'b', 'c'], ['b', 'c', 'c']]

Example_2:
input: [['j', 'c', 'e'], ['c', 'e', 'e'], ['c', 'j', 'c']]
output: [['c', 'j', 'c'], ['e', 'e', 'c'], ['e', 'c', 'j']]

Example_3:
input: [['i', 'i', 'i'], ['f', 'f', 'i'], ['i', 'f', 'f']]
output: [['f', 'f', 'i'], ['i', 'f', 'f'], ['i', 'i', 'i']]

Example_4:
input: [['d', 'c', 'j'], ['j', 'j', 'j'], ['c', 'd', 'd']]
output: [['d', 'd', 'c'], ['j', 'j', 'j'], ['j', 'c', 'd']]

Test case:
input: [['g', 'e', 'e'], ['g', 'g', 'e'], ['e', 'g', 'h']]

###########################################################
Sample Outputs:
output: [['g', 'g', 'e'], ['e', 'g', 'h'], ['e', 'e', 'g']]
*/

public class Solution {
    public String[][] shiftGrid(String[][] grid, int k) {
        if (grid == null || grid.length == 0 || grid[0].length == 0) return new String[0][];
        int m = grid.length;
        int n = grid[0].length;
        for (int i = 0; i < k; i++) {
            List<List<String>> list = new ArrayList<>();
            for (int j = 0; j < m; j++) {
                List<String> temp = new ArrayList<>();
                for (int l = n - 1; l >= 0; l--) {
                    if (j == 0 && l == 0) continue;
                    else if (l == 0 && j!= 0) {
                        temp.add(grid[j-1][n-1]);
                    }
                    else if (j == 0 && l!= 0) {
                        temp.add(grid[m-1][l-1]);
                    }
                    else {
                        temp.add(grid[j-1][l-1]);
                    }
                }
                list.add(temp);
            }
            grid = new String[m][n];
            for (int j = 0; j < m; j++) {
                for (int l = 0; l < n; l++) {
                    grid[j][l] = list.get(j).get(l);
                }
            }
        }
        return grid;
    }
}


###########################################################
Result:
solution: [['h', 'g', 'e'], ['e', 'g', 'g'], ['e', 'e', 'g']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2

cat_success_cnt: 1

cat_success_rate: 0.2

