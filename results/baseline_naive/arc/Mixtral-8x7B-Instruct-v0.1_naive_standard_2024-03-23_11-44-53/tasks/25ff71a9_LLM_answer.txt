
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['b', 'b', 'b'], ['a', 'a', 'a'], ['a', 'a', 'a']]
output: [['a', 'a', 'a'], ['b', 'b', 'b'], ['a', 'a', 'a']]

Example_2:
input: [['a', 'a', 'a'], ['b', 'b', 'b'], ['a', 'a', 'a']]
output: [['a', 'a', 'a'], ['a', 'a', 'a'], ['b', 'b', 'b']]

Example_3:
input: [['a', 'b', 'a'], ['b', 'b', 'a'], ['a', 'a', 'a']]
output: [['a', 'a', 'a'], ['a', 'b', 'a'], ['b', 'b', 'a']]

Example_4:
input: [['a', 'c', 'c'], ['a', 'a', 'c'], ['a', 'a', 'a']]
output: [['a', 'a', 'a'], ['a', 'c', 'c'], ['a', 'a', 'c']]

Test case:
input: [['c', 'a', 'a'], ['c', 'a', 'a'], ['a', 'a', 'a']]

###########################################################
Sample Outputs:
output: [['a', 'a', 'a'], ['c', 'a', 'a'], ['c', 'a', 'a']]
*/

public class Solution {
    public int[][] sortTheStudents(int[][] score, int k) {
        for (int i = 0; i < score.length - 1; ++i) {
            boolean swapped = false;
            for (int j = 0; j < score.length - 1 - i; ++j) {
                if (score[j][k] > score[j + 1][k]) {
                    swap(score, j, j + 1);
                    swapped = true;
                }
            }
            if (!swapped) break;
        }
        return score;
    }

    private void swap(int[][] arr, int a, int b) {
        int tmp = arr[a][0];
        arr[a][0] = arr[b][0];
        arr[b][0] = tmp;
    }
}


###########################################################
Result:
solution: [['a', 'a', 'a'], ['c', 'a', 'a'], ['c', 'a', 'a']]


success: 1

too_long_prompt: False

tries: 1

success_rate: 0.5

cat_success_cnt: 1

cat_success_rate: 0.5

