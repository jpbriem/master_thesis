
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['b', 'b', 'a'], ['a', 'e', 'a'], ['e', 'b', 'b']]
output: [['b', 'a', 'e'], ['b', 'e', 'b'], ['a', 'a', 'b']]

Example_2:
input: [['b', 'b', 'e'], ['f', 'b', 'b'], ['e', 'e', 'e']]
output: [['b', 'f', 'e'], ['b', 'b', 'e'], ['e', 'b', 'e']]

Example_3:
input: [['i', 'i', 'e'], ['e', 'e', 'h'], ['e', 'h', 'i']]
output: [['i', 'e', 'e'], ['i', 'e', 'h'], ['e', 'h', 'i']]

Example_4:
input: [['b', 'f', 'f'], ['b', 'a', 'a'], ['b', 'f', 'b']]
output: [['b', 'b', 'b'], ['f', 'a', 'f'], ['f', 'a', 'b']]

Test case:
input: [['i', 'c', 'd'], ['i', 'd', 'd'], ['i', 'c', 'd']]

###########################################################
Sample Outputs:
output: [['i', 'c', 'd'], ['i', 'd', 'd'], ['i', 'c', 'd']]
*/

public class Solution {
    public String[][] groupStrings(String[][] strings) {
        Map<String, List<String>> map = new HashMap<>();
        for (String[] str : strings) {
            StringBuilder sb = new StringBuilder();
            int diff = str[0].charAt(0) - str[1].charAt(0);
            for (int i = 0; i < str[0].length() && i < str[1].length(); ++i) {
                if (str[0].charAt(i) == str[1].charAt(i)) continue;
                int d = str[0].charAt(i) - str[1].charAt(i);
                if (d!= diff) return new String[][]{};
                sb.append((char)(d + 'a'));
            }
            String key = sb.toString();
            if (!map.containsKey(key)) map.put(key, new ArrayList<>());
            map.get(key).add(str[0]);
        }
        List<List<String>> res = new ArrayList<>(map.values());
        Collections.sort(res, (l1, l2) -> Integer.compare(l1.size(), l2.size()));
        String[][] ans = new String[res.size()][];
        for (int i = 0; i < res.size(); ++i) {
            List<String> list = res.get(i);
            ans[i] = new String[list.size()];
            for (int j = 0; j < list.size(); ++j) {
                ans[i][j] = list.get(j);
            }
        }
        return ans;
    }
}


###########################################################
Result:
solution: [['i', 'i', 'i'], ['c', 'd', 'c'], ['d', 'd', 'd']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.05555555555555555

cat_success_cnt: 1

cat_success_rate: 0.05555555555555555

