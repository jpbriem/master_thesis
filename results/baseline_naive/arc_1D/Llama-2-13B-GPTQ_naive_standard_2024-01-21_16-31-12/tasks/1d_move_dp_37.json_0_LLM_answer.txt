Input token: 250
Output token: 1026
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 3, 3, 3, 3, 0, 0, 5, 0]
output: [0, 0, 0, 3, 3, 3, 3, 5, 0]

Example_2:
input: [6, 6, 6, 6, 6, 0, 0, 5, 0]
output: [0, 0, 6, 6, 6, 6, 6, 5, 0]

Example_3:
input: [0, 1, 1, 1, 1, 0, 0, 5, 0]
output: [0, 0, 0, 1, 1, 1, 1, 5, 0]

Test case:
input: [7, 7, 7, 7, 0, 0, 5, 0, 0]
################################################################

LLM answer:

output: [0, 0, 0, 7, 7, 7, 7, 5, 0]
"""

import unittest
from typing import List

class Solution:
    def reverse(self, nums: List[int]) -> None:
        """
        Do not modify the input list. Instead, return a new list with reversed elements ordered lexicographically.
        """
        if len(nums) == 0:
            return []
        
        n = len(nums)
        for i in range(n):
            if nums[i]!= 0:
                break
            
        j = n - 1
        while True:
            if nums[j] == 0:
                break
            else:
                nums[j], nums[i] = nums[i], nums[j]
                j -= 1
                i += 1
                
        for _ in range(n - i):
            nums[i], nums[-1] = nums[-1], nums[i]
            i += 1

def test():
    s = Solution()
    
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    assert s.reverse([0, 0, 0, 0, 0, 
################################################################

Solution:
[0, 0, 7, 7, 7, 7, 5, 0, 0]

