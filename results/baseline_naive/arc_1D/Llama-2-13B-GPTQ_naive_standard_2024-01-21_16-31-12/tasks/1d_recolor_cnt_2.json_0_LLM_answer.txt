Input token: 334
Output token: 699
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 9, 0, 0, 9, 9, 9, 0, 0, 9, 9, 0, 0]
output: [0, 4, 0, 0, 3, 3, 3, 0, 0, 7, 7, 0, 0]

Example_2:
input: [0, 0, 0, 9, 9, 0, 9, 9, 9, 0, 0, 9, 0]
output: [0, 0, 0, 7, 7, 0, 3, 3, 3, 0, 0, 4, 0]

Example_3:
input: [0, 9, 0, 0, 0, 9, 9, 9, 0, 0, 0, 9, 9]
output: [0, 4, 0, 0, 0, 3, 3, 3, 0, 0, 0, 7, 7]

Test case:
input: [0, 0, 9, 0, 9, 9, 9, 0, 9, 9, 0, 9, 0]
################################################################

LLM answer:

output: [0, 0, 7, 0, 3, 3, 3, 0, 4, 4, 0, 7, 0]
"""

import unittest
from typing import List

class Solution:
    def transform(self, nums: List[int]) -> None:
        """
        Do not read beyond this line.
        :param nums:
        :return:
        """
        
        # Your code goes here
        if len(nums) < 2: return
        n = len(nums)
        for i in range(n):
            if nums[i] == 0: continue
            j = i + 1
            while j < n and nums[j]!= 0: j += 1
            if j - i > 1:
                nums[i], nums[j - 1] = nums[j - 1], nums[i]
                nums[j - 1], nums[j] = nums[j], nums[j - 1]
                nums[j], nums[j + 1] = nums[j + 1], nums[j]
                nums[j + 1], nums[j + 2] = nums[j + 2], nums[j + 1]


def test():
    s = Solution()
    assert s.transform([0, 9, 0, 0, 9, 9, 9, 0, 0, 9, 9, 0, 0]) == \
           [0, 4, 0, 0, 3, 3, 3, 0, 0, 7, 7, 0, 0]
    assert s.transform([0, 0, 0, 9, 9, 0, 9, 9, 9, 0, 0, 9, 0]) == \
           [0, 0, 0, 7, 7, 0, 3, 3, 3, 0, 0, 4, 0]
    assert s.transform([0, 9, 0, 0, 0, 9, 9, 9, 0, 0, 0, 9, 9]) == \
           [0, 4, 0, 0, 0, 3, 3, 3, 0, 0, 0, 7, 7]
    assert s.transform([0, 0, 9, 0, 9, 9, 9, 0, 9, 9, 0, 9, 0]) == \
           [0, 0, 7, 0, 3, 3, 3, 0, 4, 4, 0, 7, 0]

if __name__ == '__main__':
    test()
################################################################

Solution:
[0, 0, 4, 0, 3, 3, 3, 0, 7, 7, 0, 4, 0]

