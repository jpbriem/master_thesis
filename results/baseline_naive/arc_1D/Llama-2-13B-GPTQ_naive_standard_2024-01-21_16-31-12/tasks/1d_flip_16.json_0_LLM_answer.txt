Input token: 397
Output token: 702
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 5, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]
output: [0, 0, 8, 8, 8, 8, 8, 8, 8, 5, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 1, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 8, 8, 8, 8, 8, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 4, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 2, 0, 0, 0, 0]
"""

import unittest
from typing import List

class Solution:
    def reverse(self, nums: List[int]) -> None:
        """
        Do not write additional code here.
        
        Update this method to return type `None`.
        """
        for i in range(len(nums)//2):
            nums[i], nums[-i-1] = nums[-i-1], nums[i]

# You may assume that the input list is non-empty and the output is valid.

class TestCase(unittest.TestCase):
    def test_example_1(self):
        self.assertEqual([0, 0, 8, 8, 8, 8, 8, 8, 8, 5, 0, 0, 0, 0, 0, 0, 0], Solution().reverse([0, 0, 5, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]))
    
    def test_example_2(self):
        self.assertEqual([0, 8, 8, 8, 8, 8, 8, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0], Solution().reverse([0, 1, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    
    def test_example_3(self):
        self.assertEqual([0, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Solution().reverse([0, 4, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    
    def test_solution(self):
        self.assertEqual([0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0], Solution().reverse([0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0]))

if __name__ == '__main__':
    unittest.main()
################################################################

Solution:
[0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 2, 0, 0, 0, 0, 0]

