Input token: 250
Output token: 231
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [1, 1, 1, 1, 1, 0, 0, 6, 0]
output: [0, 0, 1, 1, 1, 1, 1, 6, 0]

Example_2:
input: [7, 7, 7, 7, 0, 0, 6, 0, 0]
output: [0, 0, 7, 7, 7, 7, 6, 0, 0]

Example_3:
input: [2, 2, 2, 0, 0, 6, 0, 0, 0]
output: [0, 0, 2, 2, 2, 6, 0, 0, 0]

Test case:
input: [0, 7, 7, 7, 0, 0, 6, 0, 0]
################################################################

LLM answer:

output: [0, 0, 0, 7, 7, 7, 6, 0, 0]
"""

import unittest
from typing import List

class Solution:
    def flipAndIncrement(self, nums: List[int]) -> None:
        """
        Do not read beyond EOF while reading a line
        """
        for i in range(len(nums)):
            if nums[i] == 0:
                continue
            else:
                nums[i], nums[i+1] = nums[i+1], nums[i] + 1


if __name__ == '__main__':
    testcase = int(raw_input())
    for _ in range(testcase):
        n = int(raw_input())
        nums = list(map(int, raw_input().split()))
        s = Solution()
        s.flipAndIncrement(nums)

################################################################

Solution:
[0, 0, 0, 7, 7, 7, 6, 0, 0]

