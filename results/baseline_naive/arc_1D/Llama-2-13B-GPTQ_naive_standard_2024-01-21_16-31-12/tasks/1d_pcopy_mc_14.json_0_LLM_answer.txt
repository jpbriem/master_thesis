Input token: 733
Output token: 501
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 8, 8, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 8, 8, 8, 0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 5, 5, 5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 5, 5, 5, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 4, 4, 4, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 4, 4, 4, 0, 5, 5, 5, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 9, 9, 9, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 0, 9, 9, 9, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
"""

import unittest
from typing import List

class Solution:
    def findMaxForm(self, nums: List[int]) -> List[List[int]]:
        if not nums or len(nums) == 1: return []
        
        # 1. sort the array by frequency of each number
        freq = {}
        for n in nums:
            if n in freq:
                freq[n] += 1
            else:
                freq[n] = 1
            
        sortedFreq = sorted(freq.items(), key=lambda x: -x[1], reverse=True)
        
        # 2. build a list of all possible combinations
        combos = []
        for i in range(len(sortedFreq)):
            combos.append([sortedFreq[i][0]])
        
        for j in range(i+1, len(sortedFreq)):
            combos[-1].append(sortedFreq[j][0])
        
        # 3. check which combination has max sum
        maxSum = 0
        maxCombo = None
        for combo in combos:
            curSum = 0
            for n in combo:
                curSum += nums.count(n)
            if curSum > maxSum:
                maxSum = curSum
                maxCombo = combo[:]
                
        return maxCombo

class TestCase(unittest.TestCase):
    def test_findMaxForm(self):
        self.assertEqual(Solution().findMaxForm(testcase_input), testcase_output)

if __name__ == '__main__':
    unittest.main()
################################################################

Solution:
[0, 0, 9, 9, 9, 0, 0, 9, 9, 9, 0, 1, 1, 1, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

