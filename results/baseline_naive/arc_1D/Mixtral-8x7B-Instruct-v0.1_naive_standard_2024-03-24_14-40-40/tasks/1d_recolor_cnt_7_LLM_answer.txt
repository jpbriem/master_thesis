
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'j', 'j', 'j', 'a', 'a', 'j', 'a', 'j', 'j', 'a', 'j', 'a']
output: ['a', 'e', 'e', 'e', 'a', 'a', 'b', 'a', 'h', 'h', 'a', 'b', 'a']

Example_2:
input: ['a', 'a', 'a', 'j', 'a', 'a', 'j', 'j', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'b', 'a', 'a', 'h', 'h', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'j', 'j', 'j', 'a', 'j', 'a', 'a', 'j', 'j', 'a']
output: ['a', 'a', 'a', 'e', 'e', 'e', 'a', 'b', 'a', 'a', 'h', 'h', 'a']

Test case:
input: ['a', 'a', 'a', 'j', 'j', 'j', 'a', 'a', 'j', 'a', 'a', 'j', 'j']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'e', 'e', 'e', 'a', 'a', 'b', 'a', 'a', 'h', 'h']
*/

// Solution 1:
class Solution {
public:
    vector<char> replace(vector<char>& input) {
        int j = -1;
        for (int i = 0; i < input.size(); ++i) {
            if (input[i] == 'j') continue;
            swap(input[++j], input[i]);
        }
        return input;
    }
};

// Solution 2:
class Solution {
public:
    vector<char> replace(vector<char>& input) {
        int countA = 0, countJ = 0;
        for (auto c : input) {
            if (c == 'a') ++countA;
            else ++countJ;
        }
        auto it = input.begin();
        while (it!= input.end()) {
            if (*it == 'j') *it = 'h' + countJ--;
            else *it = 'a' + countA++;
            ++it;
        }
        return input;
    }
};


###########################################################
Result:
solution: ['a', 'a', 'a', 'e', 'e', 'e', 'a', 'a', 'b', 'a', 'a', 'h', 'h']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.24561403508771928

cat_success_cnt: 2

cat_success_rate: 0.041666666666666664

