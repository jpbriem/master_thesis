
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a']

Example_2:
input: ['c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']
*/

// Solution 1:
function moveElementToEnd(array, toMove) {
    let left = 0;
    let right = array.length - 1;

    while (left < right) {
        if (array[right] === toMove && array[left]!== toMove) {
            [array[left], array[right]] = [array[right], array[left]];
            left++;
            right--;
        } else if (array[right]!== toMove) {
            right--;
        } else if (array[left] === toMove) {
            right--;
        } else {
            left++;
        }
    }

    return array;
}

console.log(moveElementToEnd(['a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a'], 'g')); // ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a']
console.log(moveElementToEnd(['c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'], 'c')); // ['a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
console.log(moveElementToEnd(['g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a'], 'g')); // ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a']
console.log(moveElementToEnd(['a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a'], 'c')); // ['a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']);


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3411458333333333

cat_success_cnt: 2

cat_success_rate: 0.058823529411764705

