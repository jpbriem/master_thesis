
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a']

Example_2:
input: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a']
*/

// Solution 1:
function firstNonRepeatingCharacter(string) {
    let charMap = {};
    for (let i = 0; i < string.length; i++) {
        if (!charMap[string[i]]) {
            charMap[string[i]] = 1;
        } else {
            charMap[string[i]]++;
        }
    }

    for (let j = 0; j < string.length; j++) {
        if (charMap[string[j]] === 1) {
            return string[j];
        }
    }
}

console.log(firstNonRepeatingCharacter('abcd')); // a
console.log(firstNonRepeatingCharacter('abcdd')); // c
console.log(firstNonRepeatingCharacter('aaacccbbb')); // b
console.log(firstNonRepeatingCharacter('b')); // b
console.log(firstNonRepeatingCharacter('')); // undefined

// Solution 2:
const firstNonRepeatingCharacter2 = str => [...str].find((e, i, s) => s.indexOf(e) === s.lastIndexOf(e));

console.log(firstNonRepeatingCharacter2('abcd')); // a
console.log(firstNonRepeatingCharacter2('abcdd')); // c
console.log(firstNonRepeatingCharacter2('aaacccbbb')); // b
console.log(firstNonRepeatingCharacter2('b')); // b
console.log(firstNonRepeatingCharacter2('')); // undefined


###########################################################
Result:
solution: ['a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3393782383419689

cat_success_cnt: 2

cat_success_rate: 0.05555555555555555

