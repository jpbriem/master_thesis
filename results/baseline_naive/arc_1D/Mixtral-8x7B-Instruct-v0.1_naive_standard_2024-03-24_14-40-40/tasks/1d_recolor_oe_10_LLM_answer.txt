
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'g', 'g', 'g', 'g', 'a', 'a', 'g', 'a', 'a', 'g', 'g', 'g', 'a', 'a', 'a']
output: ['a', 'f', 'f', 'f', 'f', 'a', 'a', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'g', 'g', 'a', 'a', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'f', 'f', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'g', 'g', 'g', 'a', 'g', 'g', 'a', 'g', 'g', 'g', 'g', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'd', 'd', 'a', 'f', 'f', 'a', 'f', 'f', 'f', 'f', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'g', 'g', 'g', 'a', 'a', 'g', 'g']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'd', 'd']
*/

// Solution 1:
class Solution {
public:
    vector<char> replace(vector<char>& input) {
        int len = input.size();
        if (len == 0) return {};

        // find the first g
        for (int i=0; i<len-1; ++i) {
            if (input[i]=='g') break;
        }

        // no g found, just return a copy of input
        if (i==len-1) return input;

        // count f and d
        int cntF = 0, cntD = 0;
        for (int j=i+1; j<len; ++j) {
            if (input[j]=='g') {
                ++cntD;
            } else {
                ++cntF;
            }
        }

        // fill in result array
        vector<char> res(len);
        for (int k=0; k<i; ++k) {
            res[k] = input[k];
        }
        for (int l=0; l<cntF; ++l) {
            res[i+l] = 'f';
        }
        for (int m=0; m<cntD; ++m) {
            res[len-1-m] = 'd';
        }

        return res;
    }
};

// Solution 2:
class Solution {
public:
    vector<char> replace(vector<char>& input) {
        int len = input.size(), idxA = -1, idxG = -1;
        for (int i=0; i<len; ++i) {
            if (input[i]=='a') {
                idxA = i;
            } else if (input[i]=='g') {
                idxG = i;
            }
            if (idxA!=-1 && idxG!=-1) break;
        }

        if (idxA==-1 || idxG==-1) return input;

        int cntF = idxG - idxA - 1, cntD = len - idxG - 1;

        vector<char> res(len);
        for (int i=0; i<idxA; ++i) {
            res[i] = input[i];
        }
        for (int i=0; i<cntF; ++i) {
            res[idxA + i] = 'f';
        }
        for (int i=0; i<cntD; ++i) {
            res[len - 1 - i] = 'd';
        }

        return res;
    }
};


###########################################################
Result:
solution: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'f', 'f']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.24408468244084683

cat_success_cnt: 0

cat_success_rate: 0.0

