
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'j']
output: ['a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'j']

Example_2:
input: ['h', 'h', 'h', 'h', 'a', 'a', 'j', 'a', 'a']
output: ['a', 'a', 'h', 'h', 'h', 'h', 'j', 'a', 'a']

Example_3:
input: ['c', 'c', 'c', 'a', 'a', 'a', 'j', 'a', 'a']
output: ['a', 'a', 'a', 'c', 'c', 'c', 'j', 'a', 'a']

Test case:
input: ['a', 'h', 'h', 'h', 'a', 'a', 'a', 'a', 'j']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'j']
*/

// Solution 1:
const moveElementToEnd = (arr, toMove) => {
    let left = 0;
    let right = arr.length - 1;

    while(left < right){
        if(arr[right] === toMove && arr[left]!== toMove){
            [arr[left], arr[right]] = [arr[right], arr[left]];
            left++;
            right--;
        } else if(arr[right]!== toMove){
            right--;
        } else if(arr[left] === toMove){
            left++;
        }
    }

    return arr;
}

console.log(moveElementToEnd(['b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'j'], 'b')) // ['a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'j']
console.log(moveElementToEnd(['h', 'h', 'h', 'h', 'a', 'a', 'j', 'a', 'a'], 'h')) // ['a', 'a', 'h', 'h', 'h', 'h', 'j', 'a', 'a']
console.log(moveElementToEnd(['c', 'c', 'c', 'a', 'a', 'a', 'j', 'a', 'a'], 'c')) // ['a', 'a', 'a', 'c', 'c', 'c', 'j', 'a', 'a']
console.log(moveElementToEnd(['a', 'h', 'h', 'h', 'a', 'a', 'a', 'a', 'j'], 'h')) // ['a', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'j']


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'h', 'h', 'h', 'j']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2821497120921305

cat_success_cnt: 0

cat_success_rate: 0.0

