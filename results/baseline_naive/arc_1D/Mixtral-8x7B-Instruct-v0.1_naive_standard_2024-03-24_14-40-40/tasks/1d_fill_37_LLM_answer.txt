
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['b', 'a', 'a', 'a', 'b', 'a', 'a', 'a', 'a']
output: ['b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a']

Example_2:
input: ['f', 'a', 'a', 'a', 'f', 'a', 'a', 'a', 'a']
output: ['f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'f', 'a', 'a', 'f', 'a', 'a', 'a', 'a']
output: ['a', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'h', 'a', 'a', 'a', 'h', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        for (int i = 0; i < len - 1; i++) {
            if (arr[i].equals("a") &&!arr[i + 1].equals("a")) {
                // swap the current element with next one, and continue to check the next pair of elements
                String temp = arr[i];
                arr[i] = arr[i + 1];
                arr[i + 1] = temp;
            }
        }

        // after swapping, all "a"s are at the end of array
        // so we just need to fill the rest part of array with "h"
        for (int j = len - 1; j >= 0 &&!arr[j].equals("a"); j--) {
            arr[j] = "h";
        }

        return arr;
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        boolean isA = true;
        for (int i = 0; i < len; i++) {
            if (!arr[i].equals("a")) {
                isA = false;
            }
            if ((isA && i!= len - 1) || (!isA && i == len - 1)) {
                arr[i] = "h";
            }
        }

        return arr;
    }
}


###########################################################
Result:
solution: ['a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.38636363636363635

cat_success_cnt: 12

cat_success_rate: 0.375

