
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'f', 'a', 'f', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'f', 'f', 'f', 'a', 'a', 'a']

Example_2:
input: ['d', 'a', 'a', 'd', 'a', 'a', 'a', 'a', 'a']
output: ['d', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'g', 'a', 'a', 'a', 'g', 'a', 'a']
output: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'a', 'a']

Test case:
input: ['h', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['h', 'h', 'h', 'h', 'h', 'a', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        for (int i = 0; i < len - 1; i++) {
            if (arr[i].equals("a") &&!arr[i + 1].equals("a")) {
                // find the first non-'a' element, then change all elements before it to be same as this one
                char c = arr[i + 1].charAt(0);
                while (i >= 0) {
                    arr[i] = "" + c;
                    i--;
                }
            }
        }

        return arr;
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        boolean foundNonA = false;
        for (int i = 0; i < len - 1; i++) {
            if (!foundNonA &&!arr[i].equals("a")) {
                foundNonA = true;
                char c = arr[i].charAt(0);
                while (i >= 0) {
                    arr[i] = "" + c;
                    i--;
                }
            } else if (arr[i].equals("a") && foundNonA) {
                break;
            }
        }

        return arr;
    }
}


###########################################################
Result:
solution: ['h', 'h', 'h', 'h', 'h', 'a', 'a', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.39344262295081966

cat_success_cnt: 9

cat_success_rate: 0.4090909090909091

