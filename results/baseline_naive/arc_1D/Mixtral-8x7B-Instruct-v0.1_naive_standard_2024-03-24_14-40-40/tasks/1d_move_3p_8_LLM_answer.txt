
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'a']

Example_2:
input: ['a', 'a', 'i', 'i', 'i', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'i', 'i', 'i', 'a']

Example_3:
input: ['i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a']

Test case:
input: ['d', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a']
*/

// Solution 1: Two pointers, O(n) time and space.
const reorder = (arr) => {
  let left = 0;
  let right = arr.length - 1;
  while (left < right) {
    if (arr[left] === "a") {
      left++;
    } else if (arr[right] === "a") {
      [arr[left], arr[right]] = [arr[right], arr[left]];
      right--;
    } else {
      right--;
    }
  }
};


###########################################################
Result:
solution: ['a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.29458917835671344

cat_success_cnt: 7

cat_success_rate: 0.14285714285714285

