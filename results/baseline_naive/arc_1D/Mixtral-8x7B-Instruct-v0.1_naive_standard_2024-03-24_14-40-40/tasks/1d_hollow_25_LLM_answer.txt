
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'h', 'h', 'h', 'a', 'a', 'a']
output: ['a', 'a', 'h', 'a', 'h', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'g', 'g', 'g', 'a']
output: ['a', 'a', 'a', 'a', 'g', 'a', 'g', 'a']

Example_3:
input: ['a', 'a', 'a', 'h', 'h', 'h', 'h', 'a']
output: ['a', 'a', 'a', 'h', 'a', 'a', 'h', 'a']

Test case:
input: ['a', 'b', 'b', 'b', 'b', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'b', 'b', 'b', 'a', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] rearrange(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length, countA = 0, countB = 0;
        for (int i = 0; i < len; i++) {
            if (input[i].equals("a")) countA++;
            else countB++;
        }

        // edge cases
        if (countA > len / 2 || countB > len / 2) return new String[]{};

        List<String> list = new ArrayList<>();
        while (countA-- > 0) list.add("a");
        while (countB-- > 0) list.add("b");

        int idx = 0;
        for (int i = 0; i < len; i += 2) {
            input[i] = list.get(idx++);
            if (i + 1 < len && idx < len)
                input[i+1] = list.get(idx++);
        }

        return input;
    }
}

// Solution 2:
class Solution {
    public String[] rearrange(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length, countA = 0, countB = 0;
        for (int i = 0; i < len; i++) {
            if (input[i].equals("a")) countA++;
            else countB++;
        }

        // edge cases
        if (countA > len / 2 || countB > len / 2) return new String[]{};

        StringBuilder sb = new StringBuilder();
        while (countA-- > 0) sb.append('a');
        while (countB-- > 0) sb.append('b');

        String str = sb.toString();
        for (int i = 0; i < len; i++) {
            input[i] = Character.toString(str.charAt(i));
        }

        return input;
    }
}


###########################################################
Result:
solution: ['a', 'b', 'a', 'a', 'b', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.4611872146118721

cat_success_cnt: 6

cat_success_rate: 0.3157894736842105

