
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'g', 'c', 'c', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'g', 'a']

Example_2:
input: ['a', 'f', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a']
output: ['a', 'i', 'i', 'i', 'i', 'f', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'a', 'd', 'i', 'i', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'i', 'i', 'd', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'i', 'h', 'h', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'i', 'a']
*/

// Solution 1:
function sortByHeight(arr) {
    let sorted = arr.filter((el, i) => el!== "g").sort();
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] === "g") {
            sorted.splice(i, 0, "g");
        }
    }
    return sorted;
}

console.log(sortByHeight(['a', 'a', 'a', 'a', 'a', 'a', 'g', 'c', 'c', 'a'])) // ['a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'g', 'a']
console.log(sortByHeight(['a', 'f', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a'])) // ['a', 'i', 'i', 'i', 'i', 'f', 'a', 'a', 'a', 'a']
console.log(sortByHeight(['a', 'a', 'a', 'a', 'd', 'i', 'i', 'a', 'a', 'a'])) // ['a', 'a', 'a', 'a', 'i', 'i', 'd', 'a', 'a', 'a']
console.log(sortByHeight(['a', 'a', 'a', 'a', 'a', 'a', 'i', 'h', 'h', 'a'])) // ['a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'i', 'a']


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'i', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.42483660130718953

cat_success_cnt: 2

cat_success_rate: 0.6666666666666666

