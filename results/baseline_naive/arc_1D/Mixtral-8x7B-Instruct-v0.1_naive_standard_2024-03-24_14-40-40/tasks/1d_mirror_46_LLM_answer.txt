
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['f', 'f', 'f', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'j', 'a', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'h', 'h', 'h', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'j', 'a', 'h', 'h', 'h', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'b', 'b', 'b', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'j', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'e', 'e', 'e', 'a', 'j', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'a', 'a', 'j', 'e', 'e', 'e', 'a', 'a', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] rearrange(String[] input) {
        int len = input.length;
        if (len < 3) return input;

        // find the index of j
        int idxJ = -1, countA = 0;
        for (int i = 0; i < len; ++i) {
            if (input[i].equals("j")) {
                idxJ = i;
            } else if (input[i].equals("a")) {
                ++countA;
            }
        }

        // swap a and j
        if (idxJ!= -1 && countA > 0) {
            String tmp = input[idxJ];
            input[idxJ] = input[idxJ-countA];
            input[idxJ-countA] = tmp;
        }

        return input;
    }
}

// Solution 2:
class Solution {
    public String[] rearrange(String[] input) {
        List<String> list = new ArrayList<>();
        for (String s : input) {
            if (!s.equals("j") &&!list.remove(s)) {
                list.add(0, s);
            }
        }
        return list.toArray(new String[list.size()]);
    }
}


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'j', 'a', 'e', 'e', 'e', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3938356164383562

cat_success_cnt: 9

cat_success_rate: 0.21428571428571427

