
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

Example_2:
input: ['d', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']
*/

// Solution 1:
/*
function moveAhead(arr) {
    let i = 0;
    while (i < arr.length - 1 && arr[i] === 'a') {
        i++;
    }
    for (let j = i + 1; j < arr.length; j++) {
        if (arr[j]!== 'a' && arr[j-1] === 'a') {
            [arr[j], arr[j-1]] = [arr[j-1], arr[j]];
        }
    }
}
*/

// Solution 2:
const moveAhead = arr => {
    const aIdxs = [];
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] === 'a') {
            aIdxs.push(i);
        }
    }
    for (let i = 0; i < aIdxs.length - 1; i++) {
        const idx = aIdxs[i+1];
        if (idx > aIdxs[i]) continue;
        for (let j = idx; j > aIdxs[i]+1; j--) {
            if (arr[j]!== 'a' && arr[j-1] === 'a') {
                [arr[j], arr[j-1]] = [arr[j-1], arr[j]];
            }
        }
    }
};


###########################################################
Result:
solution: ['a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.38801261829652994

cat_success_cnt: 7

cat_success_rate: 0.4117647058823529

