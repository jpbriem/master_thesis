{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: ['d', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a']\noutput: ['a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'g', 'a', 'a', 'a', 'a', 'a']\n\nExample_2:\ninput: ['a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'a', 'g', 'a']\noutput: ['a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'g', 'a']\n\nExample_3:\ninput: ['a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'g', 'a']\noutput: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'g', 'a']\n\nTest case:\ninput: ['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'g', 'a', 'a']\n\n###########################################################\nSample Outputs:\noutput: ['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'g', 'a', 'a']\n*/\n\n// Solution 1:\nfunction moveElementToEnd(array, toMove) {\n    let left = 0;\n    let right = array.length - 1;\n\n    while (left < right) {\n        if (array[right] === toMove && array[left]!== toMove) {\n            [array[left], array[right]] = [array[right], array[left]];\n            left++;\n            right--;\n        } else if (array[right]!== toMove) {\n            right--;\n        } else if (array[left] === toMove) {\n            right--;\n        } else {\n            left++;\n        }\n    }\n\n    return array;\n}\n\nconsole.log(moveElementToEnd(['d', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a'], 'a')); // ['a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'g', 'a', 'a', 'a', 'a', 'a']\nconsole.log(moveElementToEnd(['a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'a', 'g', 'a'], 'h')); // ['a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'g', 'a']\nconsole.log(moveElementToEnd(['a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'g', 'a'], 'd')); // ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'g', 'a']\nconsole.log(moveElementToEnd(['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'g', 'a', 'a'], 'b')); // ['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'g', 'a', 'a']"
        }
    ],
    "idx": 515,
    "task": "1d_move_dp_22",
    "category": "1d_move_dp",
    "ys": [
        "1d_move_dp_22.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "['a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'g', 'a', 'a']",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.28488372093023256,
        "cat_success_cnt": 0,
        "cat_success_rate": 0.0
    },
    "usage_so_far": {
        "completion_tokens": 300550,
        "prompt_tokens": 266115,
        "cost": null
    }
}