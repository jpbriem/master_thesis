
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'a']
output: ['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'i', 'a']

Example_2:
input: ['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'i', 'a', 'a', 'a']
output: ['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'i', 'a', 'a', 'a']

Example_3:
input: ['a', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'a', 'a', 'a', 'a']
output: ['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'i', 'a', 'a', 'a', 'a']

Test case:
input: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'i', 'a', 'a']

###########################################################
Sample Outputs:
output: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'i', 'a', 'a']
*/

// Solution 1:
const moveToEnd = (arr, char) => {
    let left = 0;
    let right = arr.length - 1;

    while(left < right){
        if(arr[right] === char && arr[left]!== char){
            [arr[left], arr[right]] = [arr[right], arr[left]];
            left++;
            right--;
        } else if(arr[right]!== char){
            right--;
        } else{
            right--;
        }
    }
}

const moveCharToEnd = (arr, char) => {
    for(let i = 0; i < arr.length; i++){
        if(arr[i] === char){
            moveToEnd(arr, char);
        }
    }
}

const unwantedCharacter = (str) => {
    const strArr = [...str];
    moveCharToEnd(strArr, 'i');
    return strArr.join('');
}

console.log(unwantedCharacter("abbbbaaaai")); // "abbbbbaaaai"
console.log(unwantedCharacter("accccccccaaaiaaaa")); // "acccccccccaaaaaaaai"
console.log(unwantedCharacter("abbcbabaiaaa")); // "abbcbabbbbbbbbi"
console.log(unwantedCharacter("eeeeeeeeeeeeeaai")) // "eeeeeeeeeeeeeeei"


###########################################################
Result:
solution: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2453488372093023

cat_success_cnt: 3

cat_success_rate: 0.3

