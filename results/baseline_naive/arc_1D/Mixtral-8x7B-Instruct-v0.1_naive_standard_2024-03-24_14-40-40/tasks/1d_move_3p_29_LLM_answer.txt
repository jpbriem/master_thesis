
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a']

Example_2:
input: ['e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'a']

Example_3:
input: ['i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'a', 'a', 'a']

Test case:
input: ['g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a']
*/

// Solution 1:
const rearrangeArray = (arr) => {
    let left = [];
    let right = [];
    for(let i=0; i<arr.length; i++) {
        if(arr[i] === arr[0]) {
            left.push(arr[i]);
        } else {
            right.unshift(arr[i]);
        }
    }
    return [...left,...right];
}

console.log(rearrangeArray(['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a'])) // ['a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a']
console.log(rearrangeArray(['e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a'])) // ['a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'a']
console.log(rearrangeArray(['i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a'])) // ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'a', 'a', 'a']
console.log(rearrangeArray(['g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a'])) // ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a']


###########################################################
Result:
solution: ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3023255813953488

cat_success_cnt: 3

cat_success_rate: 0.13043478260869565

