
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'c', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'e', 'h', 'h', 'h', 'h', 'h', 'h', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'e', 'a']

Example_3:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'e', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'e', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'c', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
*/

// Solution 1: Two pointers, O(n) time and space.
class Solution {
    public String[] reorderSpaces(String text) {
        int count = 0; // number of spaces in the string
        for (char c : text.toCharArray()) if (c =='') ++count;

        List<String> words = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        for (char c : text.toCharArray()) {
            if (c!='') sb.append(c);
            else {
                if (!sb.toString().isEmpty()) {
                    words.add(sb.toString());
                    sb = new StringBuilder();
                }
                --count;
            }
        }
        if (!sb.toString().isEmpty()) words.add(sb.toString());

        int numOfSpacesBetweenWords = count / (words.size() - 1);
        int remainingSpaces = count % (words.size() - 1);

        StringBuilder res = new StringBuilder();
        for (int i = 0; i < words.size() - 1; ++i) {
            res.append(words.get(i));
            for (int j = 0; j < numOfSpacesBetweenWords; ++j) res.append(' ');
        }
        res.append(words.get(words.size() - 1));
        while (remainingSpaces-- > 0) res.append(' ');

        return res.toString().split("");
    }
}


###########################################################
Result:
solution: ['a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.47643979057591623

cat_success_cnt: 28

cat_success_rate: 0.6829268292682927

