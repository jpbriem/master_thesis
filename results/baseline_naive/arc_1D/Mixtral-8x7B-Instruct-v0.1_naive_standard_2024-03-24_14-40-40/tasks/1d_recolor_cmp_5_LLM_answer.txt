
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd']
output: ['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'd', 'd', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c']

Example_2:
input: ['a', 'd', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']
output: ['a', 'd', 'd', 'd', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'c', 'c', 'c', 'c', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int aCount = 0, cCount = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i].equals("a")) {
                aCount++;
            } else if (arr[i].equals("d")) {
                cCount += Math.max(0, aCount - 1);
            }
        }

        String[] res = new String[arr.length];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i].equals("a")) {
                res[i] = "a";
                aCount--;
            } else if (arr[i].equals("d") && aCount > 0) {
                res[i] = "c";
                aCount--;
            } else {
                res[i] = "d";
            }
        }

        return res;
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (!arr[i].equals("a")) continue;
            count++;
            if (i + 1 < arr.length &&!arr[i+1].equals("d")) break;
        }

        for (int i = 0; i < arr.length; i++) {
            if (arr[i].equals("a")) {
                arr[i] = "a";
            } else if (count > 0) {
                arr[i] = "c";
                count--;
            } else {
                arr[i] = "d";
            }
        }

        return arr;
    }
}


###########################################################
Result:
solution: ['a', 'd', 'd', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2587131367292225

cat_success_cnt: 2

cat_success_rate: 0.043478260869565216

