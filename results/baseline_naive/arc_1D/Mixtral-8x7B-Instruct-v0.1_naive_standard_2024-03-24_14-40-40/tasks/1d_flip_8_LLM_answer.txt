
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'c', 'd', 'd', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'd', 'd', 'c', 'a', 'a']

Example_2:
input: ['d', 'e', 'e', 'e', 'a', 'a', 'a', 'a', 'a']
output: ['e', 'e', 'e', 'd', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'a', 'd', 'f', 'f', 'f', 'a']
output: ['a', 'a', 'a', 'a', 'f', 'f', 'f', 'd', 'a']

Test case:
input: ['a', 'e', 'f', 'f', 'f', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['f', 'f', 'f', 'e', 'a', 'a', 'a', 'a', 'a']
*/

// Solution 1:
/*
function moveElementToEnd(array, toMove) {
    let left = 0;
    let right = array.length - 1;

    while (left < right) {
        if (array[right] === toMove && array[left]!== toMove) {
            [array[left], array[right]] = [array[right], array[left]];
            left++;
            right--;
        } else if (array[right]!== toMove) {
            right--;
        } else if (array[left] === toMove) {
            left++;
        }
    }

    return array;
}
*/

// Solution 2:
const moveElementToEnd = (array, toMove) => {
    for (let i = 0; i < array.length; i++) {
        if (array[i] === toMove) {
            for (let j = array.length - 1; j > i; j--) {
                if (array[j]!== toMove) {
                    [array[i], array[j]] = [array[j], array[i]];
                    break;
                }
            }
        }
    }

    return array;
};

console.log(moveElementToEnd(['a', 'e', 'f', 'f', 'f', 'a', 'a', 'a', 'a'], 'f'));


###########################################################
Result:
solution: ['a', 'f', 'f', 'f', 'e', 'a', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.47738693467336685

cat_success_cnt: 32

cat_success_rate: 0.6530612244897959

