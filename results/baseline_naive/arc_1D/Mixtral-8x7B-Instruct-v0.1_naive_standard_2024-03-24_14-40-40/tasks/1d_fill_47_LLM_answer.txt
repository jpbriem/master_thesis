
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'd', 'a', 'a', 'd', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'd', 'd', 'd', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'd', 'a', 'a', 'd', 'a']
output: ['a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'a']

Example_3:
input: ['a', 'a', 'i', 'a', 'a', 'a', 'i', 'a', 'a']
output: ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'f', 'a', 'a', 'f', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a']
*/

// Solution 1:
const replaceWithLast = (arr) => {
    let last = arr[0];
    for(let i=1; i<arr.length; i++) {
        if(arr[i] === last) continue;
        else last = arr[i];
        for(let j=i-1; j>=0 && arr[j]!== last; j--) {
            arr[j] = last;
        }
    }
    return arr;
}

console.log(replaceWithLast(['a', 'a', 'a', 'f', 'a', 'a', 'f', 'a', 'a'])) // ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a']


###########################################################
Result:
solution: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.4125874125874126

cat_success_cnt: 20

cat_success_rate: 0.46511627906976744

