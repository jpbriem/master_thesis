
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a']
*/

// Solution 1:
const firstNonRepeatingChar = (str) => {
    let obj = {};
    for(let i=0;i<str.length;i++){
        if(!obj[str[i]]){
            obj[str[i]] = 1;
        } else {
            obj[str[i]]++;
        }
    }
    for(let j=0;j<str.length;j++){
        if(obj[str[j]] === 1){
            return str[j];
        }
    }
}

console.log(firstNonRepeatingChar(['a','a','a','a','e','e','e','e','e','e','e','e','e','e','e','e','e','e','a','a','a','a'])) // a

// Solution 2:
const firstNonRepeatingCharV2 = (str) => {
    let arr = [];
    for(let i=0;i<str.length;i++){
        if(arr.indexOf(str[i]) === -1 && str.lastIndexOf(str[i]) === str.indexOf(str[i])){
            arr.push(str[i]);
        }
    }
    return arr[0] || null;
}

console.log(firstNonRepeatingCharV2(['a','a','a','a','e','e','e','e','e','e','e','e','e','e','e','e','e','e','a','a','a','a'])) // a


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3883495145631068

cat_success_cnt: 4

cat_success_rate: 0.4444444444444444

