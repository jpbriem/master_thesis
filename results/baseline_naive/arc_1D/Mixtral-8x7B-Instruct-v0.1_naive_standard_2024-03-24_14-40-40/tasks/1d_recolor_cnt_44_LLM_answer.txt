
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'c', 'c', 'a', 'a', 'a', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'a']

Example_2:
input: ['a', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'c', 'c', 'a', 'c', 'a', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'h', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'd', 'd', 'a', 'h', 'a', 'h', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'a', 'a', 'c', 'a', 'a', 'a', 'c', 'a', 'a']
output: ['a', 'a', 'd', 'd', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'h', 'a', 'a', 'h', 'a', 'a', 'a', 'h', 'a', 'a']

Test case:
input: ['a', 'a', 'c', 'c', 'a', 'c', 'c', 'c', 'a', 'a', 'c', 'a', 'a', 'c', 'c', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'd', 'd', 'a', 'b', 'b', 'b', 'a', 'a', 'h', 'a', 'a', 'h', 'h', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length, i = 0;
        StringBuilder sb = new StringBuilder();
        while (i < len) {
            char c = input[i].charAt(0);
            int count = 1;
            for (int j = i + 1; j < len && input[j].charAt(0) == c; j++) {
                count++;
            }
            switch (count) {
                case 1:
                    sb.append("a");
                    break;
                case 2:
                    sb.append("d");
                    break;
                default:
                    sb.append("h" + count);
            }
            i += count;
        }

        String[] output = new String[len];
        for (i = 0; i < len; i++) {
            output[i] = Character.toString(sb.charAt(i));
        }

        return output;
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length;
        for (int i = 0; i < len - 1; i++) {
            if (input[i].equals(input[i+1])) continue;
            int count = 1;
            while (i + 1 < len && input[i].equals(input[i+1])) {
                count++;
                i++;
            }
            switch (count) {
                case 1:
                    input[i] = "a";
                    break;
                case 2:
                    input[i] = "d";
                    break;
                default:
                    input[i] = "h" + count;
            }
        }

        return input;
    }
}


###########################################################
Result:
solution: ['a', 'a', 'd', 'd', 'a', 'b', 'b', 'b', 'a', 'a', 'h', 'a', 'a', 'd', 'd', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2468354430379747

cat_success_cnt: 1

cat_success_rate: 0.025

