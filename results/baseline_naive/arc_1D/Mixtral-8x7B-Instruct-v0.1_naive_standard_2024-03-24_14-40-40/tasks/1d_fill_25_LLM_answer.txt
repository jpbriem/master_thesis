
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'h', 'a', 'h', 'a', 'a', 'a']
output: ['a', 'a', 'h', 'h', 'h', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'g', 'a', 'g', 'a']
output: ['a', 'a', 'a', 'a', 'g', 'g', 'g', 'a']

Example_3:
input: ['a', 'a', 'a', 'h', 'a', 'a', 'h', 'a']
output: ['a', 'a', 'a', 'h', 'h', 'h', 'h', 'a']

Test case:
input: ['a', 'b', 'a', 'a', 'b', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'b', 'a', 'a', 'b', 'b', 'b', 'a']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 1) return arr;

        int len = arr.length, i = 0;
        while (i < len - 1 && arr[i].equals(arr[i + 1])) i++; // skip the same elements at beginning

        for (int j = i + 1; j < len; j++) {
            if (!arr[j].equals(arr[i])) {
                arr[++i] = arr[j];
            } else {
                char c = arr[i].charAt(0);
                arr[i] += "" + ++c;
                arr[j] = arr[i];
            }
        }

        return Arrays.copyOfRange(arr, 0, i + 1);
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 1) return arr;

        StringBuilder sb = new StringBuilder();
        for (String s : arr) {
            sb.append(s).append("#");
        }

        String str = sb.toString();
        int idx = 0, n = 0;
        while ((idx = str.indexOf('#', idx))!= -1) {
            if (str.charAt(idx - 1) == str.charAt(idx + 1)) {
                str = str.substring(0, idx) + (char)(str.charAt(idx - 1) + 1) + str.substring(idx + 1);
                n++;
            }
            idx++;
        }

        String[] res = new String[arr.length - n];
        int start = 0;
        for (int i = 0; i < res.length; i++) {
            int end = str.indexOf('#', start);
            res[i] = str.substring(start, end);
            start = end + 1;
        }

        return res;
    }
}


###########################################################
Result:
solution: ['a', 'b', 'b', 'b', 'b', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3865546218487395

cat_success_cnt: 7

cat_success_rate: 0.3684210526315789

