
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'e', 'a', 'a', 'a', 'e', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'i', 'a', 'a', 'a', 'a', 'i', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'i', 'i', 'i', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'a', 'a', 'i', 'a', 'a']

Test case:
input: ['a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a']
*/

public class Solution {
    public String[] rearrange(String[] input) {
        if (input == null || input.length <= 1) return input;

        int len = input.length, countA = 0, countB = 0;
        for (int i = 0; i < len; i++) {
            if (input[i].equals("a")) countA++;
            else countB++;
        }

        // no need to swap
        if (countA > len / 2 || countB > len / 2) return input;

        char[] arr = new char[len];
        boolean flag = true;
        for (int i = 0; i < len; i++) {
            if (flag && countA > 0) {
                arr[i] = 'a';
                countA--;
                flag = false;
            } else if (!flag && countB > 0) {
                arr[i] = 'b';
                countB--;
                flag = true;
            }
        }

        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        for (char c : arr) {
            sb.append(c);
            if (sb.length() == 2) {
                list.add(sb.toString());
                sb = new StringBuilder();
            }
        }

        if (sb.length()!= 0) list.add(sb.toString());

        String[] res = new String[list.size()];
        for (int i = 0; i < res.length; i++) {
            res[i] = list.get(i);
        }

        return res;
    }
}


###########################################################
Result:
solution: ['a', 'a', 'c', 'a', 'a', 'a', 'c', 'a', 'a', 'a', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.43722943722943725

cat_success_cnt: 6

cat_success_rate: 0.1935483870967742

