
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'h', 'a']
output: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'h']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'h']

Example_3:
input: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'h', 'a', 'a']
output: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'a', 'a']

Test case:
input: ['c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a', 'a', 'a', 'a']
*/

// Solution 1:
const findLongestChain = (arr) => {
    if (!arr.length) return [];

    const sortedArr = arr.sort((a, b) => a[0] - b[0]);

    let longestChain = [sortedArr[0]];

    for (let i = 1; i < sortedArr.length; i++) {
        // If the current element is greater than last element of longest chain then push it to array
        if (sortedArr[i][0] > longestChain[longestChain.length-1][1]) {
            longestChain.push(sortedArr[i]);
        } else {
            // Else update the end value with minimum of all elements in longest chain which are less than or equal to start value of current element
            const minEndValue = Math.min(...longestChain.filter(el => el[0] <= sortedArr[i][0]).map(el => el[1]));
            const indexOfMinEndValue = longestChain.findIndex(el => el[1] === minEndValue);
            longestChain[indexOfMinEndValue][1] = sortedArr[i][1];
        }
    }

    return longestChain;
}

console.log(findLongestChain(['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'h', 'a']))
console.log(findLongestChain(['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'h']))
console.log(findLongestChain(['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'h', 'a', 'a']))
console.log(findLongestChain(['c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'a']))


###########################################################
Result:
solution: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a', 'a', 'a', 'a']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.25198637911464244

cat_success_cnt: 14

cat_success_rate: 0.45161290322580644

