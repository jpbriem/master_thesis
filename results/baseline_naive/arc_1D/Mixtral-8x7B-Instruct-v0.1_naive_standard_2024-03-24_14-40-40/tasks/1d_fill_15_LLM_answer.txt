
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'h', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'h', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'e', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'e', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a']
*/

// Solution 1:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        for (int i = len - 1; i >= 0; --i) {
            if (arr[i].equals("h")) {
                for (int j = i + 1; j < len &&!arr[j].equals("h"); ++j) {
                    arr[j] = "h";
                }
            }
        }

        return arr;
    }
}

// Solution 2:
class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < arr.length; ++i) {
            if (!stack.isEmpty() && arr[stack.peek()]!= arr[i]) {
                while (!stack.isEmpty()) {
                    arr[stack.pop()] = arr[i];
                }
            } else if (arr[i].equals("h")) {
                stack.push(i);
            }
        }

        return arr;
    }
}


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3888888888888889

cat_success_cnt: 3

cat_success_rate: 0.375

