Input token: 460
Output token: 605
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'h']
output: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'h']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'a', 'h']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h']

Example_3:
input: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'h', 'a']
output: ['a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'h', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'h']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h']
"""

import collections
from typing import List, Tuple


class Solution:
    def transform(self, arr: List[str]) -> List[str]:
        """
        1. 先找出最后一个不是'a'的字符，然后再从这里开始寻找第二个不是'a'的字符。
            如果没有找到，则返回原数组。
        2. 将所有'a'变成与最后一个不是'a'的字符相同的字符。
            (注意：这里要特判处理最后一个元素)
        3. 重复上述过程直到所有元素都为'a'或者已经无法进行转换了。
        :param arr:
        :return:
        """
        if not arr or len(arr) == 0:
            return []

        # 获取最后一个不是'a'的字符
        last = self._get_last_not_a(arr)
        if last is None:
            return arr

        # 获取第二个不是'a'的字符
        second = self._get_second_not_a(arr, last)
        if second is None:
            return arr

        # 将所有'a'变成与最后一个不是'a'的字符相同的字符
        for i in range(len(arr)):
            if arr[i]!= "a":
                continue
            elif i < len(arr)-1:
                arr[i] = second
            else:
                arr[i] = last

        return self.transform(arr)

    @staticmethod
    def _get_last_not_a(arr):
        for i in reversed(range(len(arr))):
            if arr[i]!= "a":
                return arr[i]
        return None

    @staticmethod
    def _get_second_not_a(arr, last):
        for i in range(len(arr)):
            if arr[i]!= "a":
                if arr[i]!= last:
                    return arr[i]
        return None

################################################################

Solution:
['a', 'a', 'a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h']

