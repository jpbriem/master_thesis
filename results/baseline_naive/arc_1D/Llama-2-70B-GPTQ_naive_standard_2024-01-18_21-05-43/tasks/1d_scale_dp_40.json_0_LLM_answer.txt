Input token: 523
Output token: 452
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'h']
output: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'h']

Example_2:
input: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'h', 'a']
output: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'h', 'a']

Example_3:
input: ['a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a']
output: ['a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'h', 'a', 'a', 'a']

Test case:
input: ['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'h']
################################################################

LLM answer:

output: ['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h']
"""

import collections
from typing import List, Dict


class Solution:
    def replaceElements(self, arr: List[str]) -> List[str]:
        """
        1. 先找到最后一个不是 a 的元素，记为 h
        2. 然后从后往前遍历，如果当前元素不等于 h，则直接跳过
            否则：
                1) 将当前元素和 h 交换位置
                2) 将 h 向左移动一格
        3. 重复第二步，直到遇到 a 或者遍历完所有元素

        时间复杂度 O(n), n = len(arr)
        空间复杂度 O(1)
        """
        if not arr or arr[-1] == "a":
            return arr

        # 找到最后一个不是 a 的元素
        i = len(arr)-1
        while arr[i]!= "a":
            i -= 1

        # 注意这里的 h 指的是最后一个不是 a 的元素
        h = arr[i]
        j = i - 1
        for k in range(j, -1, -1):
            if arr[k]!= h:
                arr[k], arr[j] = arr[j], arr[k]
                j -= 1
            else:
                break

        return arr

################################################################

Solution:
['a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h']

