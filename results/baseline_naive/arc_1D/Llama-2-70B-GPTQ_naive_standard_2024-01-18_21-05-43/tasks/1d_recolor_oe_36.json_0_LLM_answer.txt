Input token: 607
Output token: 604
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'e', 'e', 'a', 'a', 'e', 'e', 'e', 'e', 'a', 'a', 'e', 'e', 'e', 'a', 'a', 'a']
output: ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'e', 'e', 'a', 'e', 'a', 'a', 'e', 'a', 'a', 'a', 'e', 'e', 'e', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'd', 'd', 'a', 'i', 'a', 'a', 'i', 'a', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'e', 'a', 'a']
output: ['a', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'i', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'e', 'e', 'a', 'a', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'e', 'e', 'e', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'i', 'i', 'i', 'a']
"""

import re
from typing import List, Pattern


class Solution:
    def replaceWords(self, words: List[str]) -> List[str]:
        """
        1. 先找出所有单词的长度，然后按照长度从小到大进行遍历。
        2. 如果当前单词的长度为0，则直接返回原字符串；
            否则，将该单词转换成对应的数值，并且在原字符串中用这个数值替换原来的单词。
        3. 最后再去除所有非字母和空格字符。
        :param words:
        :return:
        """
        if not words or len(words) == 0:
            return []

        # 获取所有单词的长度
        word_lengths = [len(word) for word in words]
        # 根据长度从小到大进行遍历
        for i in range(min(word_lengths), max(word_lengths)):
            # 判断是否存在长度等于给定长度的单词
            if i in word_lengths:
                # 获取所有长度等于给定长度的单词
                words_with_same_length = [w for w in words if len(w) == i]
                # 将每一个单词转换成对应的数值
                for j, word in enumerate(words):
                    # 如果当前单词与长度等于给定长度的单词相同，则将其转换成对应的数值
                    if word in words_with_same_length:
                        words[j] = str(ord('a') + (j % len(words)))
        # 去除所有非字母和空格字符
        return "".join([re.sub("[^A-Z ]", "", x).upper() for x in words]).strip().split()

################################################################

Solution:
['a', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'i', 'i', 'i', 'a']

