Input token: 397
Output token: 1019
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a']
output: ['a', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'a', 'a', 'a']

Test case:
input: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

The output of each example is a permutation of the input sequence, where all elements except one are repeated exactly as many times as they appear in the input sequence. The unique element is placed at the end of the output sequence.

Your task is to write a function that takes an integer n and a string s as input and returns the number of distinct strings that can be formed by applying the above transformation pattern to s n times.

Constraints:
n <= 10^5
s <= 10^6

Examples:
Input: n = 2, s = "ab"
Output: 4

Input: n = 2, s = "aa"
Output: 2

Input: n = 2, s = "bb"
Output: 2

Input: n = 2, s = "ba"
Output: 2

Input: n = 2, s = "abcd"
Output: 8

Input: n = 2, s = "abcde"
Output: 12

Input: n = 2, s = "abccd"
Output: 6

Input: n = 2, s = "abccccc"
Output: 4

Input: n = 2, s = "abcccccc"
Output: 2

Input: n = 2, s = "abcccccccc"
Output: 1

Input: n = 3, s = "ab"
Output: 12

Input: n = 3, s = "aa"
Output: 6

Input: n = 3, s = "bb"
Output: 6

Input: n = 3, s = "ba"
Output: 6

Input: n = 3, s = "abcd"
Output: 28

Input: n = 3, s = "abcde"
Output: 42

Input: n = 3, s = "abccd"
Output: 18

Input: n = 3, s = "abccccc"
Output: 12

Input: n = 3, s = "abcccccc"
Output: 6

Input: n = 3, s = "abcccccccc"
Output: 2

Input: n = 4, s = "ab"
Output: 78

Input: n = 4, s = "aa"
Output: 36

Input: n = 4, s = "bb"
Output: 36

Input: n = 4, s = "ba"
Output: 36

Input: n = 4, s = "abcd"
Output: 290

Input: n = 4, s = "abcde"
Output: 406

Input: n = 4, s = "abccd"
Output: 162

Input: n = 4, s = "abccccc"
Output: 120

Input: n = 4, s = "abcccccc"
Output: 60

Input: n = 4, s = "abcccccccc"
Output: 20

Input: n = 5, s = "ab"
Output: 210

Input: n = 5, s = "aa"
Output: 924

Input: n = 5, s = "bb"
Output: 924

Input: n = 5, s = "ba"
Output: 924

Input: n = 5, s = "abcd"
Output: 57024

Input: n = 5, s = "abcde"
Output: 80640

Input: n = 5, s = "abccd"
Output: 30030

Input: n = 5, s = "abccccc"
Output: 20100

Input: n = 5, s = "abcccccc"
Output: 10050

Input: n = 5, s = "abcccccccc"
Output: 4020
################################################################

Solution:
['a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

