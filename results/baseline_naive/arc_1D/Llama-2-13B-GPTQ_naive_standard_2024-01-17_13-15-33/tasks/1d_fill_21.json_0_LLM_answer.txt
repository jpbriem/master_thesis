Input token: 325
Output token: 189
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', '.', 'c', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.']

Example_3:
input: ['.', '.', 'g', '.', 'g', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['g', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', '.', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
'''

def solution(s):
    # Write your code here
    s = list(s)
    if len(s) == 0: return []
    if len(s) == 1: return [s[0]]
    
    cnt = 0
    for i in range(len(s)):
        if s[i]!= '.':
            cnt += 1
        
    if cnt % 2 == 0:
        return s[:cnt//2] + s[-cnt//2:]
    else:
        return s[:cnt//2+1] + s[-cnt//2:-1]

################################################################

Solution:
['g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.']

