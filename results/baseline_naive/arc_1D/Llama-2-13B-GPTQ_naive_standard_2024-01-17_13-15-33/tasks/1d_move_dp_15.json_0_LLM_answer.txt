Input token: 271
Output token: 150
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.', '.', 'g']
output: ['.', '.', '.', '.', '.', '.', '.', 'a', 'a', 'a', 'a', 'g']

Example_2:
input: ['h', 'h', 'h', 'h', 'h', '.', '.', '.', 'g', '.', '.', '.']
output: ['.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'g', '.', '.', '.']

Example_3:
input: ['.', '.', '.', 'e', 'e', 'e', 'e', '.', '.', '.', 'g', '.']
output: ['.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'g', '.']

Test case:
input: ['d', 'd', 'd', 'd', 'd', '.', '.', '.', '.', '.', 'g', '.']
################################################################

LLM answer:

output: ['.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'g', '.']
'''

def solution(s):
    # Write your code here
    if not s: return []
    result = []
    for i in range(len(s)):
        if s[i] == '.': continue
        else: result.append('.')
        while True:
            if len(result) >= 4: break
            result.append(s[i])
            if s[i+1]!= '.': break
            else: result.append('.')
    return result

################################################################

Solution:
['.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'g', '.']

