
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 8, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] fill(int[] input) {
        if (input == null || input.length < 2) return input;
        boolean isZero = true;
        for (int i : input) {
            if (i!= 0 && i!= 8) throw new IllegalArgumentException("Invalid Input");
            if (i == 3) isZero = false;
        }
        if (isZero) return input;
        int start = -1, end = -1;
        for (int i = 0; i < input.length; i++) {
            if (input[i] == 3) {
                if (start == -1) start = i;
                end = i;
            } else if (start!= -1) {
                for (int j = start; j <= end; j++) {
                    input[j] = 0;
                }
                start = -1;
                end = -1;
            }
        }
        if (start!= -1) {
            for (int j = start; j <= end; j++) {
                input[j] = 0;
            }
        }
        for (int i = 0; i < input.length; i++) {
            if (input[i] == 0 && i > 0 && input[i-1]!= 0) {
                int count = 1;
                while (i + count < input.length && input[i+count] == 0) count++;
                if (i + count < input.length && input[i+count] == 3) {
                    for (int j = i; j < i + count; j++) {
                        input[j] = 8;
                    }
                }
            }
        }
        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.35

cat_success_cnt: 7

cat_success_rate: 0.35

