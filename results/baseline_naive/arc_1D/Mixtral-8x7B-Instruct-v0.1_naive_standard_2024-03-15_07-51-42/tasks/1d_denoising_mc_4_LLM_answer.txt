
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 4, 5, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0]
output: [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 1, 1, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 1, 1, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] fixZeroes(int[] input) {
        if (input == null || input.length <= 1) return input;

        // find the first non-zero element from left side
        int start = -1;
        for (int i = 0; i < input.length; i++) {
            if (input[i]!= 0) {
                start = i;
                break;
            }
        }

        // find the last non-zero element from right side
        int end = -1;
        for (int j = input.length - 1; j >= 0; j--) {
            if (input[j]!= 0) {
                end = j;
                break;
            }
        }

        // swap elements between start and end
        while (start < end) {
            int temp = input[start];
            input[start++] = input[end];
            input[end--] = temp;
        }

        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.4

cat_success_cnt: 13

cat_success_rate: 0.37142857142857144

