
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 7]
output: [0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7]

Example_2:
input: [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 7, 0]
output: [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 0]

Example_3:
input: [0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 7]
output: [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7]

Test case:
input: [0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 7, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0]
*/

public class Solution {
    public int[] fill(int[] input) {
        if (input == null || input.length < 4) return input;
        int start = -1, end = -1;
        for (int i = 0; i < input.length; ++i) {
            if (start == -1 && input[i]!= 0) {
                start = i;
            } else if (start!= -1 && input[i] == 0) {
                end = i;
                break;
            }
        }
        if (end == -1) {
            end = input.length;
        }
        int left = start > 0? input[start-1] : 0;
        int right = end < input.length? input[end] : 0;
        for (int i = start; i <= end; ++i) {
            input[i] = Math.min(Math.max(left, input[i]), right);
        }
        int l = start > 0? start - 1 : 0;
        while (l >= 0 && input[l] == 0) --l;
        int r = end < input.length? end + 1 : input.length;
        while (r < input.length && input[r] == 0) ++r;
        for (int i = l+1; i < start; ++i) {
            input[i] = input[l];
        }
        for (int i = end+1; i < r; ++i) {
            input[i] = input[r];
        }
        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3116370808678501

cat_success_cnt: 0

cat_success_rate: 0.0

