
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 7]
output: [0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7]

Example_2:
input: [0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 7]
output: [0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7]

Example_3:
input: [0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 7, 0]
output: [0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0]

Test case:
input: [0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7]
*/

public class Solution {
    public int[] fill(int[] input) {
        if (input == null || input.length < 3) return input;
        for (int i = 0; i < input.length - 2; i++) {
            if (input[i]!= 0 && input[i + 1] == 0 && input[i + 2] == 0) {
                input[i + 1] = input[i];
            } else if (input[i]!= 0 && input[i + 1]!= 0 && input[i + 2] == 0) {
                input[i + 1] = Math.max(input[i], input[i + 1]);
            }
        }
        for (int i = input.length - 1; i > 1; i--) {
            if (input[i]!= 0 && input[i - 1] == 0 && input[i - 2] == 0) {
                input[i - 1] = input[i];
            } else if (input[i]!= 0 && input[i - 1]!= 0 && input[i - 2] == 0) {
                input[i - 1] = Math.max(input[i], input[i - 1]);
            }
        }
        // check the first and last elements
        if (input[0]!= 0 && input[1] == 0) {
            input[1] = input[0];
        }
        if (input[input.length - 1]!= 0 && input[input.length - 2] == 0) {
            input[input.length - 2] = input[input.length - 1];
        }
        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.27424749163879597

cat_success_cnt: 29

cat_success_rate: 0.6170212765957447

