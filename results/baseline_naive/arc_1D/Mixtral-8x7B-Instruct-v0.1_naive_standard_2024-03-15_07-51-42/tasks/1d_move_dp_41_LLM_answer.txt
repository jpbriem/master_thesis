
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1]
output: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]

Example_2:
input: [0, 0, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 1, 0]
output: [0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 1, 0]

Test case:
input: [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 0]

###########################################################
Sample Outputs:
output: [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 0]
*/

public class Solution {
    public int[] sortColors(int[] A) {
        if (A == null || A.length <= 1) return A;
        int left = -1, right = A.length;
        for (int i = 0; i < A.length; ) {
            if (A[i] == 0) {
                swap(A, ++left, i++);
            } else if (A[i] == 2) {
                swap(A, --right, i);
            } else {
                i++;
            }
        }
        return A;
    }

    private void swap(int[] nums, int a, int b) {
        int tmp = nums[a];
        nums[a] = nums[b];
        nums[b] = tmp;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2942271880819367

cat_success_cnt: 0

cat_success_rate: 0.0

