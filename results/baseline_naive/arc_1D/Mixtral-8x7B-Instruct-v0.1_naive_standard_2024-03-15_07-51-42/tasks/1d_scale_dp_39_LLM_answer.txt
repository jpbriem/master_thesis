
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 6, 6, 6, 6, 6, 6, 6, 0, 0, 8, 0]
output: [0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 0]

Example_2:
input: [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 8]
output: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8]

Example_3:
input: [6, 6, 6, 6, 6, 6, 0, 0, 0, 8, 0, 0]
output: [6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 8, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 8, 0]
*/

public class Solution {
    public int[] moveZeroes(int[] nums) {
        if (nums == null || nums.length <= 1) return nums;
        int left = 0, right = 0;
        while (right < nums.length) {
            if (nums[right]!= 0) {
                swap(nums, left++, right);
            }
            right++;
        }
        return nums;
    }

    private void swap(int[] nums, int i, int j) {
        int tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 8, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2680995475113122

cat_success_cnt: 20

cat_success_rate: 0.5882352941176471

