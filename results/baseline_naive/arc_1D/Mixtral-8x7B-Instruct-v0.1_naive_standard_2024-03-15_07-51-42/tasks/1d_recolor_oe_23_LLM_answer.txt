
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 7, 7, 7, 0, 0, 7, 7, 0, 7, 7, 0, 7, 7, 7, 0, 0]
output: [0, 0, 0, 2, 2, 2, 0, 0, 6, 6, 0, 6, 6, 0, 2, 2, 2, 0, 0]

Example_2:
input: [0, 0, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 0, 0, 0, 7, 7, 7, 7]
output: [0, 0, 2, 2, 2, 2, 2, 0, 6, 6, 6, 6, 0, 0, 0, 6, 6, 6, 6]

Example_3:
input: [0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 7]
output: [0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2]

Test case:
input: [0, 0, 7, 7, 7, 7, 0, 0, 0, 7, 7, 7, 0, 7, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 6, 6, 6, 6, 0, 0, 0, 2, 2, 2, 0, 4, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] solution(int []arr) {
        int cnt = 0;
        for (int i=0;i<arr.length-1;i++) {
            if (arr[i] == arr[i+1]) cnt++;
            else {
                arr[i-(cnt/2)] = arr[i]==0?0:9-cnt%10;
                cnt = 0;
            }
        }
        return arr;
    }
}


###########################################################
Result:
solution: [0, 0, 6, 6, 6, 6, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2582619339045288

cat_success_cnt: 5

cat_success_rate: 0.29411764705882354

