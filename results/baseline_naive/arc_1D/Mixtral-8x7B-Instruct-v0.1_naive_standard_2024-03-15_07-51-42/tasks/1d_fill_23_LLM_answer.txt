
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 8, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0]
output: [0, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0]

Example_2:
input: [0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0]
output: [0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0]
*/

public class Solution {
    public int[] duplicateZeros(int[] arr) {
        // write your code here
        for (int i = 0; i < arr.length - 1; i++) {
            if (arr[i] == 0 && arr[i + 1]!= 0) {
                for (int j = arr.length - 1; j > i; j--) {
                    arr[j] = arr[j - 1];
                }
                arr[i + 1] = 0;
                i++;
            }
        }
        return arr;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.39316239316239315

cat_success_cnt: 8

cat_success_rate: 0.47058823529411764

