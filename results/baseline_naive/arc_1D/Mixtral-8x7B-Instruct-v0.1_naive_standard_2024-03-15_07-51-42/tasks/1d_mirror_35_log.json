{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0]\n\nExample_2:\ninput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 4, 4, 4, 4, 4, 4, 0]\n\nExample_3:\ninput: [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]\n\nTest case:\ninput: [0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n###########################################################\nSample Outputs:\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]\n*/\n\npublic class MoveZeroesToEnd {\n    public static void main(String[] args) {\n        int[] arr = new int[]{0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n        System.out.println(\"Original Array : \");\n        printArray(arr);\n        moveZerosToEnd(arr);\n        System.out.println(\"\\nArray after moving zeros to end :\");\n        printArray(arr);\n    }\n\n    private static void moveZerosToEnd(int[] arr) {\n        for (int i = 0; i < arr.length - 1; ) {\n            if (arr[i] == 0 && arr[i + 1]!= 0) {\n                swap(arr, i, i + 1);\n            } else if (arr[i] == 0 && arr[i + 1] == 0) {\n                int j = i + 1;\n                while (j < arr.length && arr[j] == 0) {\n                    j++;\n                }\n                if (j < arr.length) {\n                    swap(arr, i, j);\n                }\n            }\n            i++;\n        }\n    }\n\n    private static void swap(int[] arr, int i, int j) {\n        int temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    private static void printArray(int[] arr) {\n        for (int value : arr) {\n            System.out.print(value + \" \");\n        }\n    }\n}"
        }
    ],
    "idx": 279,
    "task": "1d_mirror_35",
    "category": "1d_mirror",
    "ys": [
        "1d_mirror_35.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0]",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.4107142857142857,
        "cat_success_cnt": 5,
        "cat_success_rate": 0.16666666666666666
    },
    "usage_so_far": {
        "completion_tokens": 113185,
        "prompt_tokens": 157850,
        "cost": null
    }
}