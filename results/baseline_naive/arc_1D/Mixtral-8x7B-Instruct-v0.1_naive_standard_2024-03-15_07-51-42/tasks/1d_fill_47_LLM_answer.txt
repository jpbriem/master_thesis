
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 3, 0, 0, 3, 0, 0]
output: [0, 0, 0, 3, 3, 3, 3, 0, 0]

Example_2:
input: [0, 0, 0, 0, 3, 0, 0, 3, 0]
output: [0, 0, 0, 0, 3, 3, 3, 3, 0]

Example_3:
input: [0, 0, 8, 0, 0, 0, 8, 0, 0]
output: [0, 0, 8, 8, 8, 8, 8, 0, 0]

Test case:
input: [0, 0, 0, 5, 0, 0, 5, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 5, 5, 5, 5, 0, 0]
*/

public class Solution {
    public int[] fill(int[] A) {
        if (A == null || A.length < 2) return A;
        for (int i = 1; i < A.length; i++) {
            if (A[i - 1]!= 0 && A[i] == 0) {
                A[i] = A[i - 1];
            } else if (A[i - 1] == 0 && A[i]!= 0) {
                continue;
            }
        }
        // check the first element
        if (A[0] == 0) {
            for (int j = 1; j < A.length; j++) {
                if (A[j]!= 0) {
                    A[0] = A[j];
                    break;
                }
            }
        }
        return A;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 5, 5, 5, 5, 0, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3706293706293706

cat_success_cnt: 15

cat_success_rate: 0.3488372093023256

