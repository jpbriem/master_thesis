
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 5, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 3, 3, 3, 3, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 1, 1, 1, 1, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 7, 0]
*/

public class ReverseArray {
    public static void main(String[] args) {
        int[] arr = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 1, 1, 1, 1, 0};
        System.out.println("Original Array : ");
        printArr(arr);
        reverseArray(arr);
        System.out.println("\nReversed Array : ");
        printArr(arr);
    }

    private static void reverseArray(int[] arr) {
        for (int i = 0; i < arr.length / 2; i++) {
            if (arr[i] == 0 && arr[arr.length - 1 - i]!= 0) {
                int temp = arr[arr.length - 1 - i];
                while (arr[arr.length - 1 - i] == 0) {
                    arr[arr.length - 1 - i] = arr[arr.length - 2 - i];
                    arr[arr.length - 2 - i] = 0;
                }
                arr[i] = temp;
            } else if (arr[i]!= 0 && arr[arr.length - 1 - i] == 0) {
                int temp = arr[i];
                while (arr[i]!= 0) {
                    arr[i] = arr[i + 1];
                    arr[i + 1] = temp;
                }
            }
        }
    }

    private static void printArr(int[] arr) {
        for (int value : arr) {
            System.out.print(value + " ");
        }
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 7, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.4161490683229814

cat_success_cnt: 10

cat_success_rate: 0.9090909090909091

