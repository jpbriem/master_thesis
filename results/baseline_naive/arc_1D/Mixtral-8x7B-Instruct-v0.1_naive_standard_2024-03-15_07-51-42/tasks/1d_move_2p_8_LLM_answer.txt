
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 2, 2, 2, 2, 0, 0, 0, 0]
output: [0, 0, 0, 2, 2, 2, 2, 0, 0]

Example_2:
input: [0, 0, 8, 8, 8, 0, 0, 0, 0]
output: [0, 0, 0, 0, 8, 8, 8, 0, 0]

Example_3:
input: [8, 8, 8, 8, 8, 0, 0, 0, 0]
output: [0, 0, 8, 8, 8, 8, 8, 0, 0]

Test case:
input: [3, 3, 3, 3, 3, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 3, 3, 3, 3]
*/

public class MoveZeroesToEnd {
    public static void main(String[] args) {
        int[] arr = new int[]{0, 2, 2, 2, 2, 0, 0, 0, 0};
        moveZerosToEnd(arr);
        for (int i : arr) {
            System.out.print(i + " ");
        }
    }

    private static void moveZerosToEnd(int[] arr) {
        if (arr == null || arr.length <= 1) return;
        int left = 0, right = 0;
        while (right < arr.length) {
            if (arr[left]!= 0 && arr[right]!= 0) {
                left++;
                right++;
            } else if (arr[left] == 0 && arr[right]!= 0) {
                swap(arr, left++, right++);
            } else if (arr[left]!= 0 && arr[right] == 0) {
                right++;
            } else { // arr[left]==0 and arr[right]==0
                right++;
            }
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }
}


###########################################################
Result:
solution: [0, 0, 3, 3, 3, 3, 3, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3558897243107769

cat_success_cnt: 6

cat_success_rate: 0.12244897959183673

