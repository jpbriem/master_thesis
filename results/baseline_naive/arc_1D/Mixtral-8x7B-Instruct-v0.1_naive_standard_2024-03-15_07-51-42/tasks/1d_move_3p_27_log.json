{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [1, 1, 1, 1, 1, 0, 0, 0, 0]\noutput: [0, 0, 0, 1, 1, 1, 1, 1, 0]\n\nExample_2:\ninput: [7, 7, 7, 7, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 7, 7, 7, 7, 0, 0]\n\nExample_3:\ninput: [2, 2, 2, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 2, 2, 2, 0, 0, 0]\n\nTest case:\ninput: [0, 7, 7, 7, 0, 0, 0, 0, 0]\n\n###########################################################\nSample Outputs:\noutput: [0, 0, 0, 7, 7, 7, 0, 0, 0]\n\ninput: [0, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n\ninput: [1, 1, 1, 1, 1, 1, 1, 1, 1]\noutput: [1, 1, 1, 1, 1, 1, 1, 1, 1]\n*/\n\npublic class Solution {\n    public int[] MoveZeroes(int[] nums) {\n        if (nums == null || nums.Length <= 1) return nums;\n\n        var left = 0;\n        for (var right = 0; right < nums.Length; right++) {\n            if (nums[right]!= 0) {\n                Swap(ref nums[left], ref nums[right]);\n                left++;\n            }\n        }\n\n        return nums;\n    }\n\n    private void Swap<T>(ref T a, ref T b) {\n        var temp = a;\n        a = b;\n        b = temp;\n    }\n}"
        }
    ],
    "idx": 470,
    "task": "1d_move_3p_27",
    "category": "1d_move_3p",
    "ys": [
        "1d_move_3p_27.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[0, 0, 0, 0, 7, 7, 7, 0, 0]",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.32696390658174096,
        "cat_success_cnt": 3,
        "cat_success_rate": 0.14285714285714285
    },
    "usage_so_far": {
        "completion_tokens": 210241,
        "prompt_tokens": 245739,
        "cost": null
    }
}