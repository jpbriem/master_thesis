
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 5, 5, 5, 0, 0, 5, 5, 0, 0, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0, 5, 5, 5, 5]
output: [0, 0, 5, 5, 5, 0, 0, 5, 5, 0, 0, 8, 8, 8, 8, 0, 0, 8, 8, 8, 8, 0, 8, 8, 8, 8]

Example_2:
input: [0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 0, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 5, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 5]
output: [0, 0, 8, 8, 8, 8, 8, 0, 5, 5, 0, 5, 5, 5, 5, 0, 0, 8, 8, 8, 8, 8, 0, 0, 5, 5]

Test case:
input: [0, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 0, 5, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 8, 8, 8, 0, 0, 0, 8, 8, 8, 8, 8, 0, 5, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0]
*/

public class Solution {
    public int[] solution(int []arr) {
        int len = arr.length;
        if (len < 3) return arr;

        int idx = -1;
        for (int i=0; i<len-2; i++) {
            if (arr[i] == 0 && arr[i+1]!= 0 && arr[i+2]!= 0) {
                idx = i + 1;
            } else if (idx >= 0 && arr[i]!= 0 && arr[i+1]!= 0) {
                arr[idx] = 8;
                arr[i+1] = 8;
                idx += 2;
            }
        }

        if (idx >= 0 && arr[len-1]!= 0 && arr[len-2]!= 0) {
            arr[idx] = 8;
            arr[len-1] = 8;
        }

        return arr;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 5, 5, 5, 0, 0, 0, 8, 8, 8, 8, 8, 0, 5, 5, 0, 0, 8, 8, 8, 8, 8, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2732166890982503

cat_success_cnt: 7

cat_success_rate: 0.16279069767441862

