
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]

Example_2:
input: [8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0]

Test case:
input: [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0]
*/

public class Solution {
    public int[] MoveZeroes(int[] nums) {
        if (nums == null || nums.Length <= 1) return nums;

        var left = 0;
        for (var right = 0; right < nums.Length; right++) {
            if (nums[right]!= 0) {
                Swap(ref nums[left], ref nums[right]);
                left++;
            }
        }

        return nums;
    }

    private void Swap<T>(ref T a, ref T b) {
        var temp = a;
        a = b;
        b = temp;
    }
}


###########################################################
Result:
solution: [0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.37988826815642457

cat_success_cnt: 0

cat_success_rate: 0.0

