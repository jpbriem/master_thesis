
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 8, 8, 8, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
output: [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]

Example_3:
input: [0, 0, 0, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 0, 0, 0, 5, 5, 5, 4, 5, 5, 9, 5, 5, 5, 5, 4, 5, 5, 5, 6, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] fill(int[] input) {
        if (input == null || input.length <= 1) return input;

        // find the first non-zero element and its value
        int start = -1;
        for (int i = 0; i < input.length && start == -1; ++i) {
            if (input[i]!= 0) {
                start = i;
                break;
            }
        }

        if (start == -1) return input;

        int val = input[start];

        // scan from left to right
        boolean changed = false;
        for (int i = start; i < input.length; ++i) {
            if (input[i] == 0) {
                input[i] = val;
                changed = true;
            }
        }

        // scan from right to left
        if (changed) {
            for (int i = input.length - 1; i >= 0; --i) {
                if (input[i] == 0) {
                    input[i] = val;
                } else {
                    break;
                }
            }
        }

        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3917525773195876

cat_success_cnt: 17

cat_success_rate: 0.3617021276595745

