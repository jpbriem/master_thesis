{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [0, 0, 0, 0, 2, 2, 2, 2, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 2, 2, 2, 0, 0, 0]\n\nExample_2:\ninput: [0, 0, 0, 5, 5, 5, 5, 5, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 5, 5, 5, 5, 5, 0, 0]\n\nExample_3:\ninput: [0, 6, 6, 6, 6, 6, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 0, 0, 0, 9, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0]\n\nTest case:\ninput: [0, 0, 2, 2, 2, 2, 2, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n###########################################################\nSample Outputs:\noutput: [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 2, 2, 2, 2, 0, 0, 0]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid moveZeroesToEnd(int arr[], int n) {\n    // Write your code here.\n\tint j = 0;\n\tfor (int i=0; i<n; i++) {\n\t\tif (arr[i]!= 0) {\n\t\t\tswap(arr[j], arr[i]);\n\t\t\tj++;\n\t\t}\n\t}\n}\n\n// Driver program to test above functions\nint main() {\n    int arr[] = {0, 0, 2, 2, 2, 2, 2, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    moveZeroesToEnd(arr, n);\n    cout << \"Array after moving all zeroes to the end is \\n\";\n    for (int i=0; i<n; i++)\n        cout << arr[i] << \" \";\n    return 0;\n}"
        }
    ],
    "idx": 251,
    "task": "1d_mirror_1",
    "category": "1d_mirror",
    "ys": [
        "1d_mirror_1.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 2, 2, 2, 2, 0, 0, 0]",
        "success": 1,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.44047619047619047,
        "cat_success_cnt": 1,
        "cat_success_rate": 0.5
    },
    "usage_so_far": {
        "completion_tokens": 98404,
        "prompt_tokens": 143661,
        "cost": null
    }
}