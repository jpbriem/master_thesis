
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 4, 4, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 2, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 7, 7, 7, 7, 7, 7, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 4, 0]

Example_3:
input: [0, 0, 0, 0, 0, 0, 0, 0, 4, 3, 3, 3, 3, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 4, 0, 0, 0, 0]

Test case:
input: [0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] Reverse(int[] input) {
        if (input == null || input.Length <= 1) return input;

        for (int i = 0; i < input.Length / 2; ++i) {
            var temp = input[i];
            int j = input.Length - i - 1;
            while (j > i && input[j] == 0) --j;
            input[i] = input[j];
            input[j] = temp;
        }

        return input;
    }
}


###########################################################
Result:
solution: [0, 0, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.44502617801047123

cat_success_cnt: 28

cat_success_rate: 0.6829268292682927

