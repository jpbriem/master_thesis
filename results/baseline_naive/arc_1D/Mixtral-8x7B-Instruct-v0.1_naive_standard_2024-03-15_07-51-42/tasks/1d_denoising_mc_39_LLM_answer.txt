
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 6, 3, 3, 3, 3, 3, 3, 4, 3, 3, 0, 0, 0]
output: [0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0]

Example_2:
input: [0, 0, 0, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0]
output: [0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 3, 3, 3, 7, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 4, 2, 2, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
*/

public class Solution {
    public int[] fill(int[] A) {
        if (A == null || A.length < 3) return A;
        // find the first non-zero element and its value
        int start = -1, val = 0;
        for (int i = 0; i < A.length && start == -1; ++i) {
            if (A[i]!= 0) {
                start = i;
                val = A[start];
            }
        }
        // no non-zero elements found
        if (start == -1) return A;
        // update all zeroes before'start' to be 'val'
        for (int i = 0; i < start; ++i) {
            A[i] = val;
        }
        // update all zeroes after'start' to be 'val'
        for (int i = A.length - 1; i > start; --i) {
            if (A[i] == 0) A[i] = val;
        }
        // check whether there are any other values in array
        boolean same = true;
        for (int i = 1; i < A.length && same; ++i) {
            if (A[i]!= A[i - 1]) same = false;
        }
        // if yes, then we need to change them back to zeroes
        if (!same) {
            for (int i = 0; i < A.length; ++i) {
                if (A[i]!= val) A[i] = 0;
            }
        }
        return A;
    }
}


###########################################################
Result:
solution: [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.40476190476190477

cat_success_cnt: 13

cat_success_rate: 0.38235294117647056

