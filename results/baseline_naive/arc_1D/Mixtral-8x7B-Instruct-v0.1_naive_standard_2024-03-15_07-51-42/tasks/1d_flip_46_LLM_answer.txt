
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 8, 2, 2, 2, 2, 0, 0, 0, 0]
output: [0, 0, 0, 0, 2, 2, 2, 2, 8, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 7, 5, 5, 5, 5, 0, 0, 0, 0]
output: [0, 0, 0, 0, 5, 5, 5, 5, 7, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 8, 9, 9, 9, 9, 9, 0, 0, 0]
output: [0, 0, 0, 0, 9, 9, 9, 9, 9, 8, 0, 0, 0]

Test case:
input: [7, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0]

###########################################################
Sample Outputs:
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7]
*/

public class Solution {
    public int[] Reverse(int[] array) {
        if (array == null || array.Length <= 1) return array;

        for (int i = 0; i < array.Length / 2; i++) {
            var temp = array[i];
            array[i] = array[array.Length - 1 - i];
            array[array.Length - 1 - i] = temp;
        }

        int index = 0;
        while (index + 1 < array.Length && array[index] == 0) index++;

        for (int i = index + 1; i < array.Length; i++) {
            if (array[i]!= 0) {
                var temp = array[i];
                array[i] = array[index];
                array[index] = temp;
                break;
            }
        }

        return array;
    }
}


###########################################################
Result:
solution: [6, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.4427083333333333

cat_success_cnt: 28

cat_success_rate: 0.6666666666666666

