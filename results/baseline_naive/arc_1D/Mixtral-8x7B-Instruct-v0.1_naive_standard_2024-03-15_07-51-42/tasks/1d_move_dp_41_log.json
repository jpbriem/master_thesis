{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1]\noutput: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n\nExample_2:\ninput: [0, 0, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0]\noutput: [0, 0, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0]\n\nExample_3:\ninput: [0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 1, 0]\noutput: [0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 1, 0]\n\nTest case:\ninput: [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 0]\n\n###########################################################\nSample Outputs:\noutput: [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 0]\n*/\n\npublic class Solution {\n    public int[] sortColors(int[] A) {\n        if (A == null || A.length <= 1) return A;\n        int left = -1, right = A.length;\n        for (int i = 0; i < A.length; ) {\n            if (A[i] == 0) {\n                swap(A, ++left, i++);\n            } else if (A[i] == 2) {\n                swap(A, --right, i);\n            } else {\n                i++;\n            }\n        }\n        return A;\n    }\n\n    private void swap(int[] nums, int a, int b) {\n        int tmp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = tmp;\n    }\n}"
        }
    ],
    "idx": 536,
    "task": "1d_move_dp_41",
    "category": "1d_move_dp",
    "ys": [
        "1d_move_dp_41.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0]",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.2942271880819367,
        "cat_success_cnt": 0,
        "cat_success_rate": 0.0
    },
    "usage_so_far": {
        "completion_tokens": 250079,
        "prompt_tokens": 275481,
        "cost": null
    }
}