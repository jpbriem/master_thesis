Input token: 218
Output token: 177
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', '.', 'b', 'c', 'c', '.', '.']
output: ['.', '.', '.', '.', 'c', 'c', 'b', '.', '.']

Example_2:
input: ['c', 'd', 'd', 'd', '.', '.', '.', '.', '.']
output: ['d', 'd', 'd', 'c', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', 'c', 'e', 'e', 'e', '.']
output: ['.', '.', '.', '.', 'e', 'e', 'e', 'c', '.']

Test case:
input: ['.', 'd', 'e', 'e', 'e', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', 'd', 'e', 'e', 'e', 'e', 'e', 'e', '.']
"""
import sys
from typing import List, Optional

class Solution(object):
    def reverseWords(self, s: str) -> None:
        """
        :type s: str
        :rtype: None
        """
        
        if not isinstance(s,str):
            return 0
            
        words = []
        for i in range(len(s)):
            if (i == len(s)-1 or s[i]!= "."):
                words.append(s[:i+1])
                
        for word in reversed(words):
            print("".join([word]))

################################################################

Solution:
['.', 'e', 'e', 'e', 'd', '.', '.', '.', '.']

