Input token: 339
Output token: 1026
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', '.', '.', '.', '.', 'd', 'd', 'd', '.', '.', 'h', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'h', '.', '.', '.', '.', '.']

Example_2:
input: ['.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'h', '.']
output: ['.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'h', '.']

Example_3:
input: ['c', 'c', 'c', 'c', '.', '.', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'c', 'c', 'c', 'c', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'g', 'g', 'g', 'g', 'g', '.', '.', 'h', '.', '.', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'h', '.']
"""
from __future__ import print_function, division
import sys
sys.stdin = open(os.devnull, "w")

n = int(input())
for i in range(0, n):
    s = list(map(int, input().split()))
    if len(s) == 4 or (len(s) == 5 and s[0]!= 0):
        for j in range(0, len(s)):
            if s[j] > 0:
                break
        else:
            continue
        for k in range(0, len(s), 2):
            if s[k + 1] - s[k] >= 2:
                s[k], s[k+1] -= 2
            elif s[k + 1] - s[k] <= -2:
                s[k], s[k+1] += 2
            else:
                pass
        for l in range(0, len(s), 2):
            if s[l] < s[l+1]:
                s[l], s[l+1] *= -1
            else:
                pass
        for m in range(0, len(s), 2):
            if s[m] % 2 == 0:
                s[m] /= 2
            else:
                s[m] *= 2
        for o in range(0, len(s), 2):
            if s[o] == 0:
                s[o] = 1
            else:
                s[o] = 0
        for p in range(0, len(s), 2):
            if s[p] == 0:
                s[p] = 1
            else:
                s[p] = 0
        for q in range(0, len(s), 2):
            if s[q] == 0:
                s[q] = 1
            else:
                s[q] = 0
        for r in range(0, len(s), 2):
            if s[r] == 0:
                s[r] = 1
            else:
                s[r] = 0
        for t in range(0, len(s), 2):
            if s[t] == 0:
                s[t] = 1
            else:
                s[t] = 0
        for u in range(0, len(s), 2):
            if s[u] == 0:
                s[u] = 1
            else:
                s[u] = 0
        for v in range(0, len(s), 2):
            if s[v] == 0:
                s[v] = 1
            else:
                s[v] = 0
        for w in range(0, len(s), 2):
            if s[w] == 0:
                s[w] = 1
            else:
                s[w] = 0
        for x in range(0, len(s), 2):
            if s[x] == 0:
                s[x] = 1
            else:
                s[x] = 0
        for y in range(0, len(s), 2):
            if s[y] == 0:
                s[y] = 1
            else:
                s[y] = 0
        for z in range(0, len(s), 2):
            if s[z] == 0:
                s[z] = 1
            else:
                s[z] = 0
        for aa in range(0, len(s), 2):
            if s[aa] == 0:
                s[aa] = 1
            else:
                s[aa] = 0
        for bb in range(0, len(s), 2):
            if s[bb] == 0:
                s[bb] = 1
            else:
                s[bb] = 0
        for cc in range(0, len(
################################################################

Solution:
['.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'h', '.', '.', '.', '.', '.', '.']

