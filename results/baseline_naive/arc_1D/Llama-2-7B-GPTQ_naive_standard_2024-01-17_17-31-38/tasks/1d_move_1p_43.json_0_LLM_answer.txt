Input token: 344
Output token: 1026
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.']

Example_2:
input: ['.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.']
output: ['.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.']

Example_3:
input: ['f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.']
output: ['.', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.']

Test case:
input: ['.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.']
################################################################

LLM answer:

output: ['.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.']
"""
from __future__ import print_function, division
import sys
sys.stdin = open(os.devnull, "w")

n = int(input())
for i in range(0, n):
    s = list(map(int, input().split()))
    if len(s) == 4 or (len(s) % 2!= 0):
        continue
    for j in range(len(s)):
        if s[j] < 0:
            break
    else:
        continue
    for k in range(len(s), -1, -1):
        if s[k] > 0:
            break
    else:
        continue
    for l in range(-1, -1, -1):
        if s[-l] <= 0:
            break
    else:
        continue
    for m in range(len(s)-1, -1, -1):
        if s[m] >= 0:
            break
    else:
        continue
    for o in range(len(s)+1, 0, -1):
        if s[o] <= 0:
            break
    else:
        continue
    for p in range(len(s)):
        if s[p] >= 0:
            break
    else:
        continue
    for q in range(len(s)-1, 0, -1):
        if s[q] <= 0:
            break
    else:
        continue
    for r in range(len(s)):
        if s[r] >= 0:
            break
    else:
        continue
    for t in range(len(s)-1, 0, -1):
        if s[t] <= 0:
            break
    else:
        continue
    for u in range(len(s)):
        if s[u] >= 0:
            break
    else:
        continue
    for v in range(len(s)):
        if s[v] <= 0:
            break
    else:
        continue
    for w in range(len(s)):
        if s[w] >= 0:
            break
    else:
        continue
    for x in range(len(s)):
        if s[x] <= 0:
            break
    else:
        continue
    for y in range(len(s)):
        if s[y] >= 0:
            break
    else:
        continue
    for z in range(len(s)):
        if s[z] <= 0:
            break
    else:
        continue
    for aa in range(len(s)):
        if s[aa] >= 0:
            break
    else:
        continue
    for bb in range(len(s)):
        if s[bb] <= 0:
            break
    else:
        continue
    for cc in range(len(s)):
        if s[cc] >= 0:
            break
    else:
        continue
    for dd in range(len(s)):
        if s[dd] <= 0:
            break
    else:
        continue
    for ee in range(len(s)):
        if s[ee] >= 0:
            break
    else:
        continue
    for ff in range(len(s)):
        if s[ff] <= 0:
            break
    else:
        continue
    for gg in range(len(s)):
        if s[gg] >= 0:
            break
    else:
        continue
    for hh in range(len(s)):
        if s[hh] <= 0:
            break
    else:
        continue
    for ii in range(len(s)):
        if s[ii] >= 0:
            break
    else:
        continue
    for jj in range(len(s)):
        if s[jj] <= 0:
            break
    else:
        continue
    for kk in range(len(s)):
        if s[kk] >= 0:
            break
    else:
        continue
    for ll in range(len
################################################################

Solution:
['.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.']

