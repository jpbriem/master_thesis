Input token: 376
Output token: 372
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'g', 'a']
output: ['a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'g', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'g', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'g', 'a']

Example_3:
input: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'g', 'a', 'a']
output: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'g', 'a', 'a']

Test case:
input: ['c', 'c', 'c', 'c', 'c', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'c', 'c', 'c', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
"""

import unittest
from typing import List, Tuple

class Solution:
    def findMaxForm(self, s: str) -> str:
        if not s or len(s) == 0: return ''
        n = len(s)
        dp = [['']] * (n + 1)
        for i in range(1, n):
            for j in range(i):
                if s[j]!= s[i]: continue
                dp[i].append(''.join([dp[j][k] for k in range(len(dp[j]))]))
        max_form = ''
        for i in range(n):
            max_form += dp[i][len(dp[i]) - 1]
        return max_form

if __name__ == "__main__":
    testcase = """
    input: ['c', 'c', 'c', 'c', 'c', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
    output: ['a', 'a', 'c', 'c', 'c', 'a', 'a', 'g', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
    """
    solution = Solution()
    print(solution.findMaxForm(testcase))
################################################################

Solution:
['a', 'a', 'c', 'c', 'c', 'c', 'c', 'g', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

