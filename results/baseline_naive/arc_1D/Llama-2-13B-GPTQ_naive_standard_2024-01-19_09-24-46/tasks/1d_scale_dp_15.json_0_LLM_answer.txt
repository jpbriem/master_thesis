Input token: 313
Output token: 1026
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['b', 'b', 'b', 'b', 'a', 'a', 'h', 'a', 'a', 'a', 'a', 'a']
output: ['b', 'b', 'b', 'b', 'b', 'b', 'h', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'h', 'a']
output: ['i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'h', 'a']

Example_3:
input: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a', 'h']
output: ['a', 'a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h']

Test case:
input: ['e', 'e', 'e', 'e', 'e', 'a', 'a', 'h', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e']
"""

import unittest
from typing import List, Tuple

class Solution:
    def transform(self, s: str) -> str:
        if not s: return ''
        n = len(s)
        ans = []
        for i in range(n):
            if s[i] == 'a':
                ans += [s[i]] * 4
            elif s[i] == 'h':
                ans += [s[i]] * (n - i)
            else:
                ans += [s[i]] * (n // 2 + 1)
        return ''.join(ans)

class TestCase(unittest.TestCase):
    def test_example_1(self):
        self.assertEqual('bbbbbaaaaaaaahhhhaaaa', Solution().transform(['b', 'b', 'b', 'b', 'a', 'a', 'h', 'a', 'a', 'a', 'a', 'a']))
    
    def test_example_2(self):
        self.assertEqual('iiiiiaaaaaaaahhhhaaaa', Solution().transform(['i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'h', 'a']))
    
    def test_example_3(self):
        self.assertEqual('afafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafaf
################################################################

Solution:
['e', 'e', 'e', 'e', 'e', 'e', 'e', 'h', 'a', 'a', 'a', 'a']

