Input token: 334
Output token: 394
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'b', 'b', 'b', 'a', 'j', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'j', 'a', 'b', 'b', 'b', 'a']

Example_2:
input: ['a', 'a', 'a', 'e', 'e', 'e', 'a', 'j', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'j', 'a', 'e', 'e', 'e', 'a']

Example_3:
input: ['a', 'b', 'b', 'b', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'j', 'a', 'b', 'b', 'b', 'a', 'a', 'a']

Test case:
input: ['h', 'h', 'h', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['h', 'h', 'h', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
"""

import unittest
from typing import List, Tuple

class Solution:
    def removeDuplicates(self, S: str) -> str:
        if not S or len(S) == 0: return ''
        n = len(S)
        i = 0
        while i < n - 1:
            j = self._findNextChar(S, i + 1)
            if j > n - 1: break
            if S[i]!= S[j]:
                S[i], S[j] = S[j], S[i]
            i += 1
        return S[:n - 1]
    
    def _findNextChar(self, S: str, index: int):
        for i in range(index, len(S)):
            if S[i]!= S[index]: return i
        return None
        
if __name__ == "__main__":
    testcase = [('h', 'h', 'h', 'a', 'j', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'), ('a', 'a', 'a', 'a', 'a', 'a', 'a', 'j', 'a', 'a', 'a', 'a', 'a')]
    solution = Solution()
    for tc in testcase:
        print("Input:", tc[0])
        assert solution.removeDuplicates(tc[0]) == tc[1]

################################################################

Solution:
['a', 'a', 'a', 'a', 'j', 'a', 'h', 'h', 'h', 'a', 'a', 'a', 'a']

