Input token: 313
Output token: 348
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'f', 'f', 'f', 'a', 'a', 'a', 'f', 'a', 'f', 'f']
output: ['a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'j', 'a', 'd', 'd']

Example_2:
input: ['a', 'f', 'f', 'a', 'f', 'a', 'a', 'f', 'f', 'f', 'a', 'a']
output: ['a', 'd', 'd', 'a', 'j', 'a', 'a', 'b', 'b', 'b', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'f', 'f', 'f', 'a', 'a', 'f', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'j', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'f', 'a', 'f', 'f', 'f', 'a', 'f', 'f', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'b', 'a', 'd', 'd', 'd', 'a', 'j', 'd', 'a']

Constraints:
1 <= A.length <= 50,000
A[i] is either 'a' or 'f'.
*/
class Solution {
public:
    vector<char> transform(vector<char>& arr) {
        int n = arr.size();
        if (n == 0 || n == 1) return arr;
        vector<int> freq(26);
        for (auto c : arr) ++freq[c - 'a'];
        int aCount = freq['a'], fCount = freq['f'];
        vector<char> res(n);
        int i = 0, j = 0;
        while (i < n && j < n) {
            if (arr[i] == 'a') {
                --aCount;
                res[j++] = 'a';
                if (!aCount) break;
            } else {
                --fCount;
                res[j++] = 'f';
                if (!fCount) break;
            }
            ++i;
        }
        while (i < n) {
            res[j++] = arr[i++];
        }
        while (j < n) {
            res[j++] = 'a';
        }
        return res;
    }
};
################################################################

Solution:
['a', 'a', 'a', 'j', 'a', 'b', 'b', 'b', 'a', 'd', 'd', 'a']

