Input token: 544
Output token: 473
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'd', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'd', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'i', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'i', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'i', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'b', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'b', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a']

Constraints:
0 <= len(arr) <= 5 * 10^4
arr[i] is a lowercase English letter.
*/

class Solution {
public:
    vector<char> reorganizeString(string s) {
        unordered_map<char, int> m;
        for (auto c : s) ++m[c];
        priority_queue<pair<int, char>> pq;
        for (auto [k, v] : m) if (v > (s.size() + 1) / 2) return {};
        for (auto [k, v] : m) pq.push({v, k});
        vector<char> ans;
        while (!pq.empty()) {
            auto [v, k] = pq.top(); pq.pop();
            --v;
            if (ans.empty() || ans.back()!= k) ans.emplace_back(k);
            else {
                ans.emplace_back('.');
                continue;
            }
            if (v == 0) continue;
            if (v % 2 == 0 &&!pq.empty() && pq.top().first >= v / 2) {
                ans.emplace_back(pq.top().second);
                pq.pop();
                --v;
            }
            if (v % 2 == 1 &&!pq.empty() && pq.top().first >= v / 2) {
                ans.emplace_back(pq.top().second);
                pq.pop();
                --v;
            }
        }
        return ans;
    }
};
################################################################

Solution:
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'b', 'a', 'a', 'a']

