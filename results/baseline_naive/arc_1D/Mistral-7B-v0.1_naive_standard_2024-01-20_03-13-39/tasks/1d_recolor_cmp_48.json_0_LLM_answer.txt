Input token: 502
Output token: 1026
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'c', 'c', 'a', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'a']
output: ['a', 'c', 'c', 'a', 'c', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'c', 'c', 'a']

Example_2:
input: ['a', 'a', 'c', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'c', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'a', 'a', 'a']

Test case:
input: ['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'c', 'c', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'c', 'c', 'a', 'a', 'a', 'a']
'''

class Solution(object):
    def reorganizeString(self, S):
        """
        :type S: str
        :rtype: str
        """
        if not S or len(S) == 0: return ''
        # count = {}
        # for c in S:
        #     count[c] = count.get(c, 0) + 1
        # maxCount = max(count.values())
        # if maxCount > (len(S)+1)/2:
        #     return ""
        # res = []
        # while True:
        #     for k, v in sorted(count.items(), key=lambda x: (-x[1], x[0])):
        #         if v > 0:
        #             res.append(k)
        #             count[k] -= 1
        #             if count[k] == 0: del count[k]
        #             break
        #     if len(res) < len(S):
        #         res.append(' ')
        #     else:
        #         break
        # return "".join(res)

        # 这个方法是错的，因为不能保证每次都取到最大值
        # 比如输入：'aaabbbccddeeee'
        # 第一轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第二轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第三轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第四轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第五轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第六轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第七轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第八轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第九轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十一轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十二轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十三轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十四轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','e','e']
        # 第十五轮：['a','a','a','b','b','b','c','c','c','d','d','d','e','e','e','
################################################################

Solution:
['a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'c', 'c', 'a', 'a', 'a', 'a']

