Input token: 208
Output token: 222
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['h', 'h', 'h', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'h', 'h', 'h', 'a']

Example_2:
input: ['d', 'd', 'd', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'd', 'd', 'a']

Example_3:
input: ['i', 'i', 'i', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'i', 'i', 'i', 'a']

Test case:
input: ['f', 'f', 'f', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'f', 'f', 'f', 'a']
*/
public class Solution {
    public String[] rearrangeArray(String[] input) {
        if (input == null || input.length < 2) return input;
        int n = input.length, i = 0, j = 1;
        while (j < n && i >= 0) {
            if (!input[i].equals(input[j])) {
                swap(input, i, j);
                i += 2;
                j += 2;
            } else {
                i++;
                j++;
            }
        }
        return input;
    }

    private void swap(String[] arr, int i, int j) {
        String tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }
}
################################################################

Solution:
['a', 'a', 'a', 'f', 'f', 'f', 'a']

