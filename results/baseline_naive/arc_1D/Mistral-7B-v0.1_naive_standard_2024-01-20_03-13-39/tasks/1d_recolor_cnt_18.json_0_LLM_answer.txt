Input token: 628
Output token: 396
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'i', 'a', 'a', 'i', 'i', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'i', 'i', 'a', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'h', 'a', 'a', 'd', 'd', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'a', 'i', 'i', 'i', 'a', 'i', 'a', 'i', 'i', 'a', 'a', 'a', 'i', 'i', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'b', 'b', 'b', 'a', 'h', 'a', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'i', 'i', 'i', 'a', 'a', 'i', 'i', 'a', 'a', 'i', 'a', 'i', 'i', 'a', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'b', 'b', 'b', 'a', 'a', 'd', 'd', 'a', 'a', 'h', 'a', 'd', 'd', 'a', 'd', 'd', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'a', 'i', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'i', 'i', 'a', 'a', 'i', 'i', 'i', 'a', 'a', 'a', 'i', 'i', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'h', 'a', 'd', 'd', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']

Constraints:
0 <= len(text) <= 5 * 10^4
text[i] is either 'a' or 'i'.
*/

class Solution {
public:
    string modifyString(string s) {
        int n = s.size();
        vector<int> a(n);
        for (int i=0; i<n; ++i){
            if (s[i] == 'a'){
                a[i] = -1;
            } else {
                a[i] = 1;
            }
        }
        for (int i=0; i<n; ++i){
            if (i > 0 && a[i]!= a[i-1]){
                a[i] += a[i-1];
            }
        }
        for (int i=0; i<n; ++i){
            if (a[i] < 0){
                a[i] = -a[i];
            }
        }
        string res = "";
        for (int i=0; i<n; ++i){
            if (a[i] >= 0){
                res += "a";
            } else {
                res += "i";
            }
        }
        return res;
    }
};
################################################################

Solution:
['a', 'a', 'a', 'h', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'd', 'd', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']

