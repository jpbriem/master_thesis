Input token: 460
Output token: 286
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'b', 'a', 'a', 'b', 'b', 'a', 'b', 'b', 'b', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'i', 'a', 'a', 'g', 'g', 'a', 'e', 'e', 'e', 'a', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'b', 'a', 'b', 'b', 'b', 'a', 'a', 'b', 'b', 'a', 'a', 'a', 'b', 'b', 'a', 'a', 'a', 'a']
output: ['a', 'i', 'a', 'e', 'e', 'e', 'a', 'a', 'g', 'g', 'a', 'a', 'a', 'g', 'g', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'b', 'a', 'b', 'b', 'b', 'a', 'b', 'b', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a']
output: ['a', 'i', 'a', 'e', 'e', 'e', 'a', 'g', 'g', 'a', 'a', 'a', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'b', 'a', 'a', 'b', 'b', 'a', 'a', 'b', 'b', 'b', 'a', 'b', 'a', 'a', 'b', 'b', 'b']
################################################################

LLM answer:

output: ['a', 'a', 'i', 'a', 'a', 'g', 'g', 'a', 'a', 'e', 'e', 'e', 'a', 'e', 'a', 'a', 'g', 'g', 'g']
*/
public class Solution {
    public String[] transform(String[] strs, int[] b) {
        if (strs == null || strs.length < 2 || b == null || b.length!= strs.length) return strs;
        Map<Character, Character> map = new HashMap<>();
        for (int i = 0; i < b.length; i++) {
            char c = strs[i].charAt(0);
            if (!map.containsKey(c)) {
                map.put(c, (char)(c + b[i]));
            } else {
                map.put(c, (char)(c - b[i]));
            }
        }
        for (int i = 0; i < strs.length; i++) {
            strs[i] = String.valueOf(map.get(strs[i].charAt(0)));
        }
        return strs;
    }
}
################################################################

Solution:
['a', 'a', 'i', 'a', 'a', 'g', 'g', 'a', 'a', 'e', 'e', 'e', 'a', 'i', 'a', 'a', 'e', 'e', 'e']

