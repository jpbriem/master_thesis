Input token: 439
Output token: 321
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'h', 'h', 'a', 'a', 'a', 'h', 'h', 'h', 'h', 'a']
output: ['a', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'j', 'j', 'a', 'a', 'a', 'j', 'j', 'j', 'j', 'a']

Example_2:
input: ['a', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'h', 'h', 'h', 'a', 'h', 'h', 'h', 'a', 'a', 'a']
output: ['a', 'j', 'j', 'j', 'j', 'j', 'j', 'a', 'd', 'd', 'd', 'a', 'd', 'd', 'd', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'h', 'h', 'a', 'h', 'h', 'h', 'h', 'a', 'a', 'h']
output: ['a', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'j', 'j', 'a', 'j', 'j', 'j', 'j', 'a', 'a', 'd']

Test case:
input: ['a', 'a', 'h', 'h', 'h', 'h', 'h', 'h', 'a', 'a', 'h', 'h', 'h', 'a', 'a', 'h', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'a', 'j', 'j', 'j', 'j', 'j', 'j', 'j', 'j', 'a', 'j', 'j', 'j', 'a', 'j', 'a', 'a']
*/
public class Solution {
    public String[] transform(String[] strs, int[] brackets) {
        if (strs == null || strs.length == 0 || brackets == null || brackets.length!= strs.length) return new String[0];
        Map<Character, Character> map = new HashMap<>();
        for (int i = 0; i < brackets.length; ++i) {
            char c = strs[i].charAt(brackets[i]);
            if (!map.containsKey(c)) {
                map.put(c, 'a' + (char)(c - 'a'));
            } else {
                map.put(c, 'b' + (char)(c - 'a'));
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < strs.length; ++i) {
            char c = strs[i].charAt(brackets[i]);
            sb.append(map.get(c));
        }
        return sb.toString().split("");
    }
}
################################################################

Solution:
['a', 'a', 'j', 'j', 'j', 'j', 'j', 'j', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'd', 'a', 'a']

