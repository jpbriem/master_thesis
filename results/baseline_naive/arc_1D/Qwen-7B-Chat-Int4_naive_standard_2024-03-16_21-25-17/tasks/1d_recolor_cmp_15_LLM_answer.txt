
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0]
output: [0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 6, 6, 6, 6, 6, 6, 6, 0]

Example_2:
input: [0, 4, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0]
output: [0, 4, 0, 0, 0, 6, 6, 6, 6, 6, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0]

Example_3:
input: [0, 0, 4, 4, 4, 4, 0, 4, 0, 4, 0, 4, 4, 0, 0, 4, 4, 0, 4, 4, 4, 4]
output: [0, 0, 6, 6, 6, 6, 0, 4, 0, 4, 0, 4, 4, 0, 0, 4, 4, 0, 6, 6, 6, 6]

Test case:
input: [0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        n = len(arr)
        prefix_sum = [arr[0]] + [a + b for a, b in zip(arr[:-1], arr[1:])]

        result = []
        while prefix_sum[-1] != n * (n - 1) // 2:
            start = None
            for i in range(n):
                if prefix_sum[i] == prefix_sum[i + 1]:
                    continue
                else:
                    end = i
                    break

            if start is not None and end is not None:
                result.append(end - start)

            prefix_sum.pop(start)
            prefix_sum.append(prefix_sum[start])

        return len(result)
```


###########################################################
Result:
solution: [0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.002824858757062147

cat_success_cnt: 0

cat_success_rate: 0.0

