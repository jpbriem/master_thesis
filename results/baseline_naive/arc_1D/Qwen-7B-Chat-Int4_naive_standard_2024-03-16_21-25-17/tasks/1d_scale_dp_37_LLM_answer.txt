
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 3, 3, 3, 3, 0, 0, 2, 0]
output: [0, 3, 3, 3, 3, 3, 3, 2, 0]

Example_2:
input: [6, 6, 6, 6, 6, 0, 0, 0, 2]
output: [6, 6, 6, 6, 6, 6, 6, 6, 2]

Example_3:
input: [0, 1, 1, 1, 1, 0, 0, 0, 2]
output: [0, 1, 1, 1, 1, 1, 1, 1, 2]

Test case:
input: [7, 7, 7, 7, 0, 0, 0, 0, 2]



###########################################################
Sample Outputs:
```python
class Solution:
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        count = collections.Counter(nums)
        
        if len(count) == 1:
            return count.most_common(1)[0][0]
        
        max_count = max(count.values())
        for num in count.keys():
            if count[num] == max_count:
                return num
        
        return None
```


###########################################################
Result:
solution: [7, 7, 7, 7, 7, 7, 7, 7, 2]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0022675736961451248

cat_success_cnt: 0

cat_success_rate: 0.0

