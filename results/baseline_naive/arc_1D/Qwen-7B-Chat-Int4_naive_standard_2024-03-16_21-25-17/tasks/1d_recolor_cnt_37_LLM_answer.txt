
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 4, 4, 4, 0, 4, 0, 0, 4, 4, 0, 0]
output: [0, 0, 0, 2, 2, 2, 0, 7, 0, 0, 9, 9, 0, 0]

Example_2:
input: [0, 4, 0, 4, 4, 0, 0, 4, 4, 4, 0, 4, 4, 4]
output: [0, 7, 0, 9, 9, 0, 0, 2, 2, 2, 0, 2, 2, 2]

Example_3:
input: [0, 4, 0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 0, 0]
output: [0, 7, 0, 0, 0, 2, 2, 2, 0, 0, 9, 9, 0, 0]

Test case:
input: [0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if not arr:
            return 0
        
        n = len(arr)
        
        stack = []
        result = 0
        i = 0
        
        while i < n:
            if arr[i] > arr[stack[-1]]:
                stack.append(i)
            else:
                j = stack.pop()
                
                # check if the array is sorted in descending order after removing the last element
                if j == 0 or arr[j-1] < arr[j]:
                    result += 1
                    
                i += 1
                
        return result
```


###########################################################
Result:
solution: [0, 0, 0, 2, 2, 2, 0, 0, 0, 9, 9, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0025575447570332483

cat_success_cnt: 0

cat_success_rate: 0.0

