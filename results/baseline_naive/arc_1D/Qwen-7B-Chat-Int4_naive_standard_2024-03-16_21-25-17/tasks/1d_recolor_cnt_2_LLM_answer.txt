
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 9, 0, 0, 9, 9, 9, 0, 0, 9, 9, 0, 0]
output: [0, 4, 0, 0, 3, 3, 3, 0, 0, 7, 7, 0, 0]

Example_2:
input: [0, 0, 0, 9, 9, 0, 9, 9, 9, 0, 0, 9, 0]
output: [0, 0, 0, 7, 7, 0, 3, 3, 3, 0, 0, 4, 0]

Example_3:
input: [0, 9, 0, 0, 0, 9, 9, 9, 0, 0, 0, 9, 9]
output: [0, 4, 0, 0, 0, 3, 3, 3, 0, 0, 0, 7, 7]

Test case:
input: [0, 0, 9, 0, 9, 9, 9, 0, 9, 9, 0, 9, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if len(arr) == 1:
            return 1
        
        i = 0
        while i < len(arr)-1 and arr[i] > arr[i+1]:
            i += 1
        
        j = len(arr)-1
        while j > i and arr[j] >= arr[j-1]:
            j -= 1
        
        result = min(len(arr), (j-i)+1)
        
        left, right = 0, i+1
        k = i+1
        
        for _ in range(result-1):
            while left <= j and arr[left] < arr[k]:
                left += 1
            while right <= j and arr[right] >= arr[k]:
                right += 1
            
            arr[left], arr[right] = arr[right], arr[left]
            
            k = left + right // 2

        return result
```


###########################################################
Result:
solution: [0, 0, 4, 0, 3, 3, 3, 0, 7, 7, 0, 4, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.002621231979030144

cat_success_cnt: 0

cat_success_rate: 0.0

