
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 0, 0]
output: [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 6, 0, 0, 1, 1, 1, 1, 0, 6, 6, 6, 0, 0]

Example_2:
input: [0, 0, 0, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4]
output: [0, 0, 0, 1, 1, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 6, 6, 6, 6]

Example_3:
input: [0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4]
output: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 6, 6, 6, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1]

Test case:
input: [0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 4, 4, 4]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        n = len(arr)
        prefix = [arr[0]]
        for i in range(1, n):
            if arr[i] < prefix[-1]:
                prefix.append(arr[i])
            else:
                prefix.pop()
        
        # print(prefix)
        
        result = []
        while prefix and prefix[-1] == 0:
            prefix.pop()
            
        chunk_size = 0
        
        start = 0
        end = 0
        while end != n-1:
            if arr[end] >= prefix[start]:
                end += 1
            else:
                result.append(chunk_size)
                chunk_size = 0
                start = end + 1
                
        result.append(chunk_size)
        
        return len(result) - 1
```


###########################################################
Result:
solution: [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 6, 0, 0, 6, 6, 6]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.002484472049689441

cat_success_cnt: 0

cat_success_rate: 0.0

