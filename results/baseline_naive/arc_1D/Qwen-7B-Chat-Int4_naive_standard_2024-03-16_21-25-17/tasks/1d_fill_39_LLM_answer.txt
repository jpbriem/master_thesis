
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 8, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 0, 0]

Example_2:
input: [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0]
output: [0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0]

Test case:
input: [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def findMaxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if not arr:
            return 0

        left = right = 0
        res = 1
        
        while left < len(arr) and right < len(arr):
            while left < len(arr) and arr[left] == 0:
                left += 1
                
            while right < len(arr) and arr[right] == 0:
                right += 1
            
            if arr[left] <= arr[right]:
                arr[left], arr[right] = arr[right], arr[left]
                res += 1
            else:
                break
        
        return res
```


###########################################################
Result:
solution: [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

