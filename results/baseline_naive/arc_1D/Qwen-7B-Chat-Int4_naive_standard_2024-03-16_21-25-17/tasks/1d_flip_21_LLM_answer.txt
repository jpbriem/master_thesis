
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [7, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
output: [1, 1, 1, 1, 1, 7, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 4, 8, 8, 8, 8, 0, 0, 0, 0, 0]
output: [0, 0, 0, 8, 8, 8, 8, 4, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 0, 4, 5, 5, 5, 5, 0, 0, 0, 0]
output: [0, 0, 0, 0, 5, 5, 5, 5, 4, 0, 0, 0, 0]

Test case:
input: [0, 0, 0, 7, 6, 6, 6, 0, 0, 0, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        count = collections.Counter(nums)
        max_count = max(count.values())
        
        res = []
        for num in nums:
            if count[num] == max_count:
                res.append(num)
                
        return res[0] if len(res) == 1 else None
```


###########################################################
Result:
solution: [0, 0, 0, 6, 6, 6, 7, 0, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

