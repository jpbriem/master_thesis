
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 9, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 9, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 9, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9, 0]

Example_3:
input: [0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 9]
output: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9]

Test case:
input: [0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 9]



###########################################################
Sample Outputs:
```python
class Solution:
    def maximumChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if len(arr) == 1:
            return 1
        
        n = len(arr)
        
        stack = []
        i = 0
        j = 0
        while i < n and j < n:
            while stack and arr[i] > arr[stack[-1]]:
                top = stack.pop()
                arr[top], arr[j] = arr[j], arr[top]
                j += 1
                
            stack.append(i)
            i += 1
            
        chunks = 1
        for k in range(j, n):
            chunks += 1
        
        return chunks
```


###########################################################
Result:
solution: [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.003929273084479371

cat_success_cnt: 0

cat_success_rate: 0.0

