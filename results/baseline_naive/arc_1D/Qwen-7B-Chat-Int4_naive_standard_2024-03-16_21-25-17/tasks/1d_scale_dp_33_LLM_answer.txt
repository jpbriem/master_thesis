
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 7, 0]
output: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 0]

Example_2:
input: [0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 7]
output: [0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7]

Example_3:
input: [0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 7, 0]
output: [0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0]

Test case:
input: [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 7, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        n = len(arr)
        if n == 1 or n == 0:
            return 1
        
        if n == 2:
            return 1 if arr[0] < arr[1] else 2
        
        ans = 0
        i = 0
        while i < n-1 and arr[i] > arr[i+1]:
            i += 1
        l = i + 1
        r = n - 1
        while l <= r:
            mid = (l+r)//2
            if arr[mid] < arr[mid-1]:
                l = mid + 1
            else:
                r = mid - 1
        ans = min(ans, mid-l+1)
        
        i = 0
        j = l-1
        while i < j and arr[j] >= arr[i]:
            i += 1
        while i < j and arr[j] < arr[i]:
            j -= 1
        ans = min(ans, j-i+1)
        
        return ans
```


###########################################################
Result:
solution: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.002277904328018223

cat_success_cnt: 0

cat_success_rate: 0.0

