
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 9, 9, 9, 9, 9, 0, 9, 9, 9, 0, 0, 0, 9, 9, 9, 9, 9, 0, 9]
output: [0, 0, 5, 5, 5, 5, 5, 0, 9, 9, 9, 0, 0, 0, 5, 5, 5, 5, 5, 0, 9]

Example_2:
input: [0, 0, 0, 9, 9, 9, 0, 0, 9, 0, 9, 9, 9, 9, 0, 0, 9, 9, 9, 9, 0]
output: [0, 0, 0, 9, 9, 9, 0, 0, 9, 0, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0]

Example_3:
input: [0, 0, 9, 9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 0, 0, 9, 9, 0]
output: [0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 9, 9, 9, 9, 9, 9, 0, 0, 9, 9, 0]

Test case:
input: [0, 9, 0, 0, 0, 9, 9, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 9, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def rearrange(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        
        if n == 1:
            return nums
        
        # Find the index of largest element and its count.
        max_idx = 0
        max_count = 1
        for i in range(1, n):
            if nums[i] > nums[max_idx]:
                max_idx = i
                max_count += 1
                
        # Rearrange the array such that the maximum count is at the beginning followed by all other counts.
        result = []
        result.append(nums[max_idx])
        for i in range(max_count - 1):
            result.extend([nums[j] for j in range(i + 1, max_idx)])
            
        # Add the rest of the elements to the result.
        result.extend(nums[:max_idx])
        
        # Reverse the result so that the largest element appears first.
        result.reverse()
        
        return result
```


###########################################################
Result:
solution: [0, 9, 0, 0, 0, 9, 9, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 9, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.002677376171352075

cat_success_cnt: 0

cat_success_rate: 0.0

