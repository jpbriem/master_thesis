
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 7, 7, 7, 7, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0]
output: [0, 0, 3, 3, 3, 3, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0]

Example_2:
input: [0, 7, 7, 0, 7, 7, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0]
output: [0, 3, 3, 0, 9, 9, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0]

Example_3:
input: [0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 7, 7, 7, 7, 7, 7, 0]
output: [0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 3, 3, 3, 3, 3, 3, 0]

Test case:
input: [0, 0, 7, 7, 7, 0, 0, 0, 7, 7, 0, 0, 7, 7, 7, 7, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr: List[int]) -> int:
        if not arr or len(arr) == 1:
            return 1
        
        left = []
        right = []
        
        for i in range(len(arr)):
            if arr[i] != 0:
                left.append(i)
                
            else:
                break
                
        for i in reversed(range(len(arr))):
            if arr[i] != 0:
                right.append(i)
                
            else:
                break
                
        res = 1
        
        for i in range(1, len(left)):
            res += 1
            
            while True:
                j = left[i-1]
                k = right[i]
                
                if j >= k:
                    break
                
                arr[j], arr[k] = arr[k], arr[j]
                
                i -= 1
                
        return res
```


###########################################################
Result:
solution: [0, 0, 9, 9, 9, 0, 0, 0, 3, 3, 0, 0, 3, 3, 3, 3, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0024009603841536613

cat_success_cnt: 0

cat_success_rate: 0.0

