
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0]

Example_3:
input: [0, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]

Test case:
input: [0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr: List[int]) -> int:
        if not arr or len(arr) == 0:
            return 0
        
        left = []
        right = []
        
        for i in range(len(arr)):
            if i > 0 and arr[i] < arr[i-1]:
                left.append(i)
            
            if i < len(arr)-1 and arr[i+1] <= arr[i]:
                right.append(i)
                
        result = 0
        
        while left and right:
            result += 1
            
            # Move elements from the left list to the right list
            for l in reversed(left):
                right.insert(0, arr[l])
                
            # Move elements from the right list to the left list
            for r in left:
                right.pop()
                
            left = []
            right = []
            
        return result
```


###########################################################
Result:
solution: [0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.004024144869215292

cat_success_cnt: 0

cat_success_rate: 0.0

