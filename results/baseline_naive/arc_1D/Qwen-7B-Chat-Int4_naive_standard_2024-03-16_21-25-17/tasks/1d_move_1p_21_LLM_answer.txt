
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0]

Example_2:
input: [0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0]

Example_3:
input: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0]
output: [0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0]

Test case:
input: [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if not arr or len(arr) <= 1:
            return 0

        n = len(arr)
        prefix_sum = list(range(1, n+1))
        for i in range(1, n):
            prefix_sum[i] += prefix_sum[i-1]

        left = -1
        right = 0
        result = 0
        while right < n:
            if arr[right] == 0:
                right += 1
                continue
            index = prefix_sum.index(arr[right])
            if left >= index:
                left = index + 1
            else:
                result += 1
            right += 1
        return result
```


###########################################################
Result:
solution: [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

