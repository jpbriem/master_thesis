Input token: 565
Output token: 370
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: ['a', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'd']
output: ['a', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'c', 'c', 'c', 'c', 'c', 'a', 'd', 'd', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'c']

Example_2:
input: ['a', 'd', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']
output: ['a', 'd', 'd', 'd', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'd', 'd', 'a', 'a', 'd', 'd', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'a', 'a', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'd', 'a', 'a', 'd', 'd', 'd', 'd', 'd', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'd', 'd', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a']
################################################################

LLM answer:

output: ['a', 'd', 'd', 'd', 'a', 'a', 'a', 'c', 'c', 'c', 'c', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a']
"""
import sys
from collections import deque, defaultdict
from typing import List, Tuple


def get_next(current):
    if current == "":
        return ""
    elif len(current) > 0:
        return current[0] + get_next(current[1:])
    else:
        return ""


def main():
    # input = [line for line in open("./test.txt", encoding="utf8")]
    input = ["a", "d", "d", "d", "d", "d", "a", "a", "d", "d", "d", "d", "d", "a", "d", "d", "a", "a", "a", "d", "d", "d", "d"]
    output = ["a", "c", "c", "c", "c", "c", "a", "a", "c", "c", "c", "c", "a", "d", "d", "a", "a", "a", "c", "c", "c", "c", "c"]
    print(get_next(input))
    assert (get_next(input) == output).all()


if __name__ == "__main__":
    main()
################################################################

Solution:
['a', 'd', 'd', 'a', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'd', 'd', 'd', 'd', 'a', 'a', 'd', 'd', 'd', 'a', 'a', 'a', 'a']

