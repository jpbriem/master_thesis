
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
#####
user:
#####

Example_1:
input: ['a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'b', 'b', 'b', 'a', 'a', 'a', 'a', 'a']

Example_2:
input: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a', 'a']
output: ['a', 'a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'a']

Example_3:
input: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
Based on the examples provided, it appears the rule for transforming the input to the output is to move the character that appears most frequently in the list to the beginning, while keeping the order of the other characters the same.

To apply this rule to the test case, we first need to count the occurrences of each character and then move the one with the highest count to the front.

Let's apply this rule to the test case:

input: ['a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a']

First, we determine the frequency of each character:
- 'a' occurs 7 times
- 'g' occurs 4 times

Since 'a' occurs more frequently than 'g', we move all 'a's to the front while keeping the remaining 'g's in their original order:

output: ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'g', 'g', 'g', 'g']

Here's a simple Python code that can achieve this:

```python
def rearrange_characters(chars):
    from collections import Counter

    # Count the frequency of each character
    frequency = Counter(chars)

    # Find the character with the highest frequency
    most_common_char = max(frequency, key=frequency.get)

    # Move the most frequent character to the front and keep the order of others
    chars.sort(key=lambda x: (x != most_common_char, x))

    return chars

# Test case
test_input = ['a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a', 'a']
test_output = rearrange_characters(test_input)
print(test_output)
```

Running this code would give you the desired output:

```
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'g', 'g', 'g', 'g']
```


###########################################################
Result:
solution: ['a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'a', 'a', 'a']


success: 0

tries: 1

success_rate: 0.3333333333333333

cat_success_cnt: 1

cat_success_rate: 0.08333333333333333

