
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
#####
user:
#####

Example_1:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'g', 'g', 'g', 'g', 'a', 'a', 'b', 'a', 'a']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'g', 'g', 'g', 'g', 'g', 'g', 'b', 'a', 'a']

Example_2:
input: ['a', 'c', 'c', 'c', 'a', 'a', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'c', 'c', 'c', 'c', 'c', 'b', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'b', 'a', 'a', 'a', 'a', 'a']
output: ['a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'b', 'a', 'a', 'a', 'a', 'a']

Test case:
input: ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'b', 'a', 'a']

###########################################################
Sample Outputs:
To solve this problem, we need to write a function that takes a list of characters as input and returns a new list where each group of consecutive identical characters is extended to six characters if the group is shorter than six characters. If the group is already six characters or longer, it should be left unchanged.

Here is a Python function that implements this logic:

```python
def extend_groups(input_list):
    # Initialize empty list for the output
    output_list = []
    # Initialize counter for consecutive characters
    count = 1

    for i in range(1, len(input_list)):
        # Check if the current character is the same as the previous one
        if input_list[i] == input_list[i - 1]:
            # Increment the count of consecutive characters
            count += 1
        else:
            # If the character has changed, append the previous character
            # extended to six times if count is less than six
            output_list.extend([input_list[i - 1]] * max(count, 6))
            # Reset the count
            count = 1

    # Handle the last group of characters
    output_list.extend([input_list[-1]] * max(count, 6))

    return output_list

# Test case
input_list = ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'b', 'a', 'a']
output_list = extend_groups(input_list)
print(output_list)
```

Let's run this code to check the output for the provided test case:

```python
# Test case
input_list = ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'b', 'a', 'a']
output_list = extend_groups(input_list)
print(output_list)
```

The expected output should be a list with groups of 'i' extended to six characters if they are less than six:

```
['a', 'a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'b', 'a', 'a', 'a', 'a', 'a', 'a']
```

Note that the 'a' group is also extended to six characters after the 'i' group since it's the next group after the 'i' characters.


###########################################################
Result:
solution: ['a', 'a', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'b', 'a', 'a']


success: 0

tries: 1

success_rate: 0.267349260523322

cat_success_cnt: 5

cat_success_rate: 0.1724137931034483

