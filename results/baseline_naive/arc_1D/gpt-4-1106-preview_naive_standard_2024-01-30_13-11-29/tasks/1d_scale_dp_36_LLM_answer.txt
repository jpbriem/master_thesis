
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
#####
user:
#####

Example_1:
input: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'a', 'a', 'h', 'a']
output: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a']

Example_2:
input: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'a', 'a', 'a', 'h']
output: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'h']

Example_3:
input: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'a', 'a', 'h', 'a', 'a']
output: ['a', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'a', 'a']

Test case:
input: ['c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'a']

###########################################################
Sample Outputs:
To solve this task, we need to follow the pattern shown in the provided examples. Given the inputs and outputs, it seems that the rule is to extend the series of consecutive characters until the next distinct character (if any), except when an 'h' is encountered, which remains unchanged and acts as a boundary. This means that if we have a sequence of 'a's followed by 'b's, we would extend the 'a's until the 'b's start. However, if an 'h' is encountered, it should remain in its place and not be replaced.

This can be done by iterating over the list from the beginning and extending the streak of each character until a different character is found, excluding 'h'. Here is a function that implements this logic:

```python
def extend_series(input_list):
    output_list = input_list.copy()
    current_char = None
    
    for i in range(len(output_list) - 1):
        current_char = output_list[i]
        if current_char != 'h':
            # Set the next character to current_char if the next is not 'h'
            if output_list[i+1] != 'h':
                output_list[i+1] = current_char

    return output_list

# Test case from the question
test_input = ['c', 'c', 'c', 'c', 'c', 'a', 'a', 'a', 'a', 'a', 'h', 'a', 'a', 'a', 'a']
test_output = extend_series(test_input)
print(test_output)
```

Running this function with the provided test case should give you the output following the same logic as in your examples. Let's go through the test case step by step:

- We start with a series of 'c', which we extend until we encounter a different character ('a').
- We then start a series of 'a', which we extend right up to the 'h'.
- The 'h' acts as a boundary and remains unchanged.
- After the 'h', we continue with 'a', but since there are no different characters following it, the rest of the list remains 'a'.

So the expected output for the test case should be:

```python
['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a', 'a', 'a', 'a']
```


###########################################################
Result:
solution: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'h', 'a', 'a', 'a', 'a']


success: 1

tries: 1

success_rate: 0.26787741203178206

cat_success_cnt: 6

cat_success_rate: 0.1935483870967742

