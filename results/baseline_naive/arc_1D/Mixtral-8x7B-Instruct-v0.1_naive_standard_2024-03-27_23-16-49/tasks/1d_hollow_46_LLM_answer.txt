
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'b', '.', '.', '.', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'h', '.', '.', 'h', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] solve(String[] input) {
        int len = input.length;
        for (int i = 0; i < len; ++i) {
            if (input[i].equals(".") ||!isSameChar(input, i)) continue;
            int j = i + 1;
            while (j < len && isSameChar(input, j)) ++j;
            int k = j - 1;
            if (k > i + 1) {
                char c = input[i].charAt(0);
                StringBuilder sb = new StringBuilder();
                sb.append('.');
                sb.append(c);
                sb.append('.');
                String s = sb.toString();
                for (int l = i + 1; l <= k; ++l) {
                    if (l == i + 1 || l == k) {
                        input[l] = s;
                    } else {
                        input[l] = ".";
                    }
                }
            }
            i = k;
        }
        return input;
    }

    private boolean isSameChar(String[] arr, int index) {
        if (index >= arr.length) return false;
        char c = arr[index].charAt(0);
        for (int i = index + 1; i < arr.length; ++i) {
            if (!arr[i].equals(".") && arr[i].charAt(0)!= c) return false;
        }
        return true;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.32231404958677684

cat_success_cnt: 5

cat_success_rate: 0.11904761904761904

