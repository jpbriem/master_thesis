
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'f', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', 'f', '.']

Example_2:
input: ['b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', '.']
*/

public class Solution {
    public String[] pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i) == '.' || dominoes.charAt(i) == 'R') {
                arr[i] = '.';
            } else {
                arr[i] = 'L';
            }
        }
        // System.out.println(Arrays.toString(arr));
        for (int i = 1; i < len; ++i) {
            if (arr[i - 1] == 'L' && arr[i] == '.') {
                arr[i] = 'L';
                int j = i + 1;
                while (j < len && arr[j]!= 'R') {
                    arr[j++] = 'L';
                }
                if (j < len && arr[j] == 'R') {
                    int k = j - 1;
                    while (k > i) {
                        arr[k--] = 'R';
                    }
                }
            }
        }
        for (int i = 0; i < len; ++i) {
            if (arr[i] == 'L') {
                dominoes = dominoes.substring(0, i) + "L" + dominoes.substring(i);
            } else if (arr[i] == 'R') {
                dominoes = dominoes.substring(0, i) + "R" + dominoes.substring(i);
            }
        }
        return dominoes.split("");
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.24380165289256198

cat_success_cnt: 4

cat_success_rate: 0.11764705882352941

