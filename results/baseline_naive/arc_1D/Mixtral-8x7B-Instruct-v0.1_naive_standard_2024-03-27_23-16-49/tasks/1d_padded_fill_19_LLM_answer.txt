
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['c', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'e', '.', '.', '.', '.', 'e', '.', '.', '.', '.', '.', 'e', '.', '.', '.', '.', 'e', '.', '.', '.', '.', '.', 'e', '.', '.', '.', '.', 'e', '.']
output: ['.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', '.']

Example_3:
input: ['c', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.']
output: ['c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['a', '.', '.', '.', '.', 'a', '.', '.', '.', '.', '.', 'a', '.', '.', '.', '.', 'a', '.', '.', '.', '.', '.', 'a', '.', '.', '.', '.', 'a', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['a', 'a', 'a', '.', '.', 'a', '.', '.', '.', '.', '.', 'a', 'a', 'a', '.', '.', 'a', '.', '.', '.', '.', '.', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] fill(String[] input) {
        if (input == null || input.length < 3) return input;
        int len = input.length, idx = -1;
        for (int i = 0; i < len; ++i) {
            if (input[i].equals(".")) continue;
            else if (idx == -1) idx = i;
            else if (input[i].charAt(0)!= input[idx].charAt(0)) {
                input[++idx] = ".";
                input[idx] += input[i];
            }
        }
        if (idx == -1) return new String[]{};
        for (int i = idx + 1; i < len; ++i) {
            if (!input[i].equals(".")) continue;
            input[i] = input[idx];
        }
        return input;
    }
}


###########################################################
Result:
solution: ['a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2206405693950178

cat_success_cnt: 0

cat_success_rate: 0.0

