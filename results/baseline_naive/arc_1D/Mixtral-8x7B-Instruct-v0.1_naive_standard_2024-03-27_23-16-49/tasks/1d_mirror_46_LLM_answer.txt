
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['e', 'e', 'e', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'i', '.', 'e', 'e', 'e', '.', '.', '.', '.', '.']

Example_2:
input: ['.', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', '.', '.', '.', '.']

Example_3:
input: ['.', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', '.']
*/

public class Solution {
    public String move(String s) {
        // Write your solution here
        if (s == null || s.length() < 4) return s;
        char[] arr = s.toCharArray();
        int i = 0, j = arr.length - 1;
        while (i <= j && arr[j]!= '.') j--;
        while (i <= j && arr[i] == '.') i++;
        for (int k = i + 1; k < j; k++) {
            if (arr[k] == '.') continue;
            char tmp = arr[k];
            int idx = k;
            while (idx > i && arr[idx-1] == '.') idx--;
            arr[idx] = tmp;
        }
        StringBuilder sb = new StringBuilder();
        for (char c : arr) sb.append(c);
        return sb.toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2979452054794521

cat_success_cnt: 6

cat_success_rate: 0.14285714285714285

