
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'c', 'c', '.', 'c', 'c', 'c', '.', '.', '.', 'c', '.', '.', 'c', '.', '.']
output: ['.', '.', '.', 'd', 'd', '.', 'h', 'h', 'h', '.', '.', '.', 'f', '.', '.', 'f', '.', '.']

Example_2:
input: ['.', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', '.', 'c', 'c', '.', '.']
output: ['.', '.', 'd', 'd', '.', 'f', '.', '.', 'h', 'h', 'h', '.', '.', '.', 'd', 'd', '.', '.']

Example_3:
input: ['.', '.', 'c', 'c', 'c', '.', '.', '.', 'c', 'c', '.', '.', '.', 'c', '.', 'c', '.', '.']
output: ['.', '.', 'h', 'h', 'h', '.', '.', '.', 'd', 'd', '.', '.', '.', 'f', '.', 'f', '.', '.']

Test case:
input: ['.', '.', '.', 'c', '.', '.', 'c', 'c', '.', '.', 'c', 'c', 'c', '.', 'c', 'c', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', 'd', '.', '.', 'h', 'h', '.', '.', 'f', 'f', 'f', '.', 'f', 'f', '.', '.']
*/

public class Solution {
    public String[] solution(String[] input) {
        int cCount = 0;
        for (int i = 0; i < input.length; i++) {
            if ("c".equals(input[i])) {
                cCount++;
            }
        }

        int dCount = 0, hCount = 0, fCount = 0;
        while (cCount > 0) {
            if (dCount == hCount && hCount == fCount) {
                switch (dCount % 3) {
                    case 0:
                        input[findIndex(input, "c")] = "d";
                        break;
                    case 1:
                        input[findIndex(input, "c")] = "h";
                        break;
                    default:
                        input[findIndex(input, "c")] = "f";
                        break;
                }
            } else if (dCount > hCount && hCount >= fCount) {
                input[findIndex(input, "c")] = "d";
                dCount++;
            } else if (hCount > dCount && dCount >= fCount) {
                input[findIndex(input, "c")] = "h";
                hCount++;
            } else {
                input[findIndex(input, "c")] = "f";
                fCount++;
            }
            cCount--;
        }

        return input;
    }

    private int findIndex(String[] arr, String target) {
        for (int i = 0; i < arr.length; i++) {
            if (target.equals(arr[i])) {
                return i;
            }
        }
        return -1;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'f', '.', '.', 'd', 'd', '.', '.', 'h', 'h', 'h', '.', 'd', 'd', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.195

cat_success_cnt: 2

cat_success_rate: 0.04

