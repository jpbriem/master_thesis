
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'h', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'h', '.', '.']

Example_2:
input: ['b', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', 'e', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', 'a', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'a', '.', '.', '.', '.', '.', '.']
*/

public class ReverseWordsInString {
    public static void main(String[] args) {
        String input = ".,.,.,.,.,.,.,a,e,e,e,e,e,e,.,.,.,.";
        System.out.println("Original string : " + input);
        System.out.println("Reversed words in string : ");
        reverseWords(input);
    }

    private static void reverseWords(String str){
        StringBuilder sb = new StringBuilder();
        int startIndex = 0;
        for (int i=0;i<str.length()-1;i++){
            if ((str.charAt(i) == '.' && str.charAt(i+1)!= '.') || (str.charAt(i)!= '.' && str.charAt(i+1) == '.')){
                //System.out.print(startIndex+" "+i);
                sb.append(reverseWord(str.substring(startIndex,i+1)));
                sb.append('.');
                startIndex = i+2;
            }
        }
        System.out.println(sb.toString());
    }

    private static String reverseWord(String word){
        return new StringBuilder(word).reverse().toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'a', '.', '.', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3553299492385787

cat_success_cnt: 28

cat_success_rate: 0.5957446808510638

