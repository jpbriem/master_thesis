
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'h', '.', '.', 'h', 'h', 'h', 'h', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.']
output: ['.', '.', 'h', '.', '.', 'h', 'h', 'h', 'h', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.']

Example_2:
input: ['.', 'h', 'h', 'h', '.', '.', '.', 'h', 'h', '.', '.', 'h', '.', '.', 'h', 'h', 'h', 'h', '.', 'h', '.', '.', '.', 'h', '.', 'h', 'h', '.']
output: ['.', 'h', 'h', 'h', '.', '.', '.', 'h', 'h', '.', '.', 'h', '.', '.', 'g', 'g', 'g', 'g', '.', 'h', '.', '.', '.', 'h', '.', 'h', 'h', '.']

Example_3:
input: ['.', '.', '.', 'h', '.', '.', 'h', 'h', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', '.', 'h', 'h', '.', '.', 'h', 'h', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'h', '.', '.', 'h', 'h', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', '.', 'h', 'h', '.', '.', 'h', 'h', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'h', '.', '.', '.', 'h', 'h', 'h', '.', '.', 'h', '.', 'h', 'h', '.', 'h', 'h', 'h', 'h', '.', 'h', 'h', 'h', 'h', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'h', '.', '.', '.', 'h', 'h', 'h', '.', '.', 'h', '.', 'g', 'g', '.', 'h', 'h', 'h', 'h', '.', 'h', 'h', 'h', 'h', '.', '.', '.']
*/

public class Solution {
    public String[] solution(String[] input) {
        int len = input.length;
	int start = -1, end = -1;
	for (int i=0;i<len-4;i++) {
            if (input[i].equals(".") && input[i+1].equals("h") && input[i+2].equals("h") && input[i+3].equals("h")) {
                start = i;
                break;
            }
	}
	if (start == -1) return input;
	for (int j=start+5;j<len;j++) {
            if (input[j].equals("h") && input[j+1].equals(".")) {
                end = j;
                break;
            }
	}
	if (end == -1) return input;
	for (int k=start;k<=end;k++) {
            if (!input[k].equals("h")) continue;
            for (int l=start;l<=end;l++) {
                if (l==k) continue;
                if (input[l].equals("h")) input[l] = "g";
            }
	}
	return input;
    }
}


###########################################################
Result:
solution: ['.', '.', 'h', '.', '.', '.', 'h', 'h', 'h', '.', '.', 'h', '.', 'h', 'h', '.', 'g', 'g', 'g', 'g', '.', 'g', 'g', 'g', 'g', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.20781032078103207

cat_success_cnt: 4

cat_success_rate: 0.23529411764705882

