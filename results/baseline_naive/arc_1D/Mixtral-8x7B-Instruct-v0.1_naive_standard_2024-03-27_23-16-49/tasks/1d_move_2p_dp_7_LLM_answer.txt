
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'c', 'c', 'c', '.', '.', 'i']
output: ['.', '.', '.', 'c', 'c', 'c', 'i']

Example_2:
input: ['b', 'b', 'b', '.', '.', 'i', '.']
output: ['.', '.', 'b', 'b', 'b', 'i', '.']

Example_3:
input: ['c', 'c', 'c', '.', '.', 'i', '.']
output: ['.', '.', 'c', 'c', 'c', 'i', '.']

Test case:
input: ['d', 'd', 'd', '.', '.', 'i', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'd', 'd', 'd', 'i', '.']
*/

public class Solution {
    public String[] move(String[] arr) {
        if (arr == null || arr.length <= 1) return arr;
        int i = 0, j = 0;
        while (j < arr.length && arr[j]!= ".") {
            swap(arr, i++, j);
            j++;
        }
        for (int k = j + 1; k < arr.length; k++) {
            if (arr[k]!= ".") {
                swap(arr, i++, k);
            }
        }
        return arr;
    }

    private void swap(String[] arr, int a, int b) {
        String temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }
}


###########################################################
Result:
solution: ['.', '.', 'd', 'd', 'd', 'i', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.25223214285714285

cat_success_cnt: 4

cat_success_rate: 0.08333333333333333

