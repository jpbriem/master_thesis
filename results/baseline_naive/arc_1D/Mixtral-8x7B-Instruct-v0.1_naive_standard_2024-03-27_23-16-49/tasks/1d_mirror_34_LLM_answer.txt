
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['c', 'c', 'c', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'i', '.', 'c', 'c', 'c', '.', '.', '.']

Example_2:
input: ['.', 'e', 'e', 'e', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'e', 'e', 'e', '.', '.']

Example_3:
input: ['d', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', '.', '.', '.']

Test case:
input: ['.', '.', 'b', 'b', 'b', '.', 'i', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', 'i', 'b', 'b', 'b', '.', '.']
*/

// Solution 1:
/*
function moveChar(str) {
    let arr = str.split('');
    for (let i = 0; i < arr.length - 1; i++) {
        if (arr[i] === '.' && arr[i + 1]!== '.') {
            let temp = arr[i];
            arr[i] = arr[i + 1];
            arr[i + 1] = temp;
        }
    }
    return arr.join('');
}
*/

// Solution 2:
const moveChar = s => [...s].reduce((p, c, i) =>
    i > 0 && p[i - 1] === '.' && c!== '.'?
    [...p.slice(0, i), c,...p.slice(i - 1, i), '.'] :
    [...p], []).join('');


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'i', '.', 'b', 'b', 'b', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3010752688172043

cat_success_cnt: 3

cat_success_rate: 0.10344827586206896

