
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'e', '.', '.', 'e', '.', '.', '.', '.', '.']
output: ['.', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.']
output: ['.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Example_3:
input: ['g', '.', '.', '.', 'g', '.', '.', '.', '.', '.']
output: ['g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.']

Test case:
input: ['.', 'd', '.', 'd', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'd', 'd', 'd', 'd', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] replaceSpaces(String[] str, int length) {
        // Write your code here.
        if (str == null || str.length == 0 || length <= 0) return str;

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < length; i++) {
            sb.append(str[i]);
        }

        String s = sb.toString();
        char[] arr = s.toCharArray();
        int count = 0;
        for (char c : arr) {
            if (c =='') count++;
        }

        int index = length + count * 2 - 1;
        for (int i = length - 1; i >= 0 && index > i; i--) {
            if (arr[i]!='') {
                str[index--] = arr[i];
            } else {
                str[index--] = '0';
                str[index--] = '2';
                str[index--] = '%';
            }
        }

        return str;
    }
}


###########################################################
Result:
solution: ['.', 'd', 'd', 'd', '.', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2689655172413793

cat_success_cnt: 11

cat_success_rate: 0.24444444444444444

