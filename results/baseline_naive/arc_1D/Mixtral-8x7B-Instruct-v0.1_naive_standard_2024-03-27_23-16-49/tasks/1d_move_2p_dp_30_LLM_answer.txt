
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'c', 'c', 'c', '.', '.', 'e', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'c', 'c', 'c', 'e', '.', '.', '.', '.']

Example_2:
input: ['b', 'b', 'b', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'b', 'b', 'b', 'e', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', 'e', '.']
output: ['.', '.', '.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', 'e', '.']

Test case:
input: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', 'e', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', 'e', '.']
*/

public class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        Arrays.fill(arr, '.');
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i)!= '.') {
                arr[i] = dominoes.charAt(i);
            }
        }
        boolean leftToRight = true;
        int force = 0;
        for (int i = 0; i < len; ++i) {
            if (arr[i] == '.' && force!= 0) {
                arr[i] = (leftToRight? '-' : '+');
            } else if (arr[i]!= '.') {
                force = (arr[i] == 'l'? -1 : 1);
                leftToRight = (arr[i] == 'l');
            }
        }
        force = 0;
        leftToRight = false;
        for (int i = len - 1; i >= 0; --i) {
            if (arr[i] == '.' && force!= 0) {
                arr[i] = (leftToRight? '+' : '-');
            } else if (arr[i]!= '.') {
                force = (arr[i] == 'r'? 1 : -1);
                leftToRight = (arr[i] == 'r');
            }
        }
        StringBuilder sb = new StringBuilder();
        for (char c : arr) {
            if (c == '-') {
                sb.append('l');
            } else if (c == '+') {
                sb.append('r');
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }
}


###########################################################
Result:
solution: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'e', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.25882352941176473

cat_success_cnt: 1

cat_success_rate: 0.04

