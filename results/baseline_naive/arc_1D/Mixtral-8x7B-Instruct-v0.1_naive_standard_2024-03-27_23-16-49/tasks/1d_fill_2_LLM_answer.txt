
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', '.', '.']
output: ['.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.']

Example_2:
input: ['.', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.', 'e', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'f', '.', 'f', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'f', 'f', 'f', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] extend(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length;
        boolean isEnd = false;
        for (int i = len - 1; i >= 0 &&!isEnd; --i) {
            if (!".".equals(input[i])) {
                isEnd = true;
            }
        }

        if (!isEnd) return input;

        StringBuilder sb = new StringBuilder();
        for (int i = len - 1; i >= 0 && ".".equals(input[i]); --i) {
            sb.append(".");
        }
        char c = input[i];
        while (sb.length() > 0) {
            sb.append(c);
        }

        String[] output = new String[len + sb.length()];
        System.arraycopy(input, 0, output, 0, len);
        for (int i = len; i < output.length; ++i) {
            output[i] = sb.toString();
        }

        return output;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2831858407079646

cat_success_cnt: 4

cat_success_rate: 0.3076923076923077

