
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', '.', '.', '.', '.']
output: ['a', '.', '.', '.', 'a', '.', '.', '.', '.']

Example_2:
input: ['e', 'e', 'e', 'e', 'e', '.', '.', '.', '.']
output: ['e', '.', '.', '.', 'e', '.', '.', '.', '.']

Example_3:
input: ['.', 'e', 'e', 'e', 'e', '.', '.', '.', '.']
output: ['.', 'e', '.', '.', 'e', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', 'g', 'g', 'g', 'g', 'g', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', 'g', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] findWords(String[] words) {
        List<String> result = new ArrayList<>();
        for (int i = 0; i < words.length; i++) {
            if (isValid(words[i])) {
                result.add(words[i]);
            }
        }
        return result.toArray(new String[result.size()]);
    }

    private boolean isValid(String word) {
        int row = -1;
        char firstChar = Character.toLowerCase(word.charAt(0));
        switch (firstChar) {
            case 'q':
            case 'w':
            case 'e':
            case 'r':
            case 't':
            case 'y':
            case 'u':
            case 'i':
            case 'o':
            case 'p':
                row = 0;
                break;
            case 'a':
            case's':
            case 'd':
            case 'f':
            case 'g':
            case 'h':
            case 'j':
            case 'k':
            case 'l':
                row = 1;
                break;
            case 'z':
            case 'x':
            case 'c':
            case 'v':
            case 'b':
            case 'n':
            case'm':
                row = 2;
                break;
            default:
                return false;
        }
        for (int j = 1; j < word.length(); j++) {
            char c = Character.toLowerCase(word.charAt(j));
            switch (row) {
                case 0:
                    if (!(c == 'q' || c == 'w' || c == 'e' || c == 'r' || c == 't' || c == 'y' || c == 'u' || c == 'i' || c == 'o' || c == 'p')) {
                        return false;
                    }
                    break;
                case 1:
                    if (!(c == 'a' || c =='s' || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l')) {
                        return false;
                    }
                    break;
                case 2:
                    if (!(c == 'z' || c == 'x' || c == 'c' || c == 'v' || c == 'b' || c == 'n' || c =='m')) {
                        return false;
                    }
                    break;
            }
        }
        return true;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'g', '.', '.', '.', 'g', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3275862068965517

cat_success_cnt: 3

cat_success_rate: 0.09375

