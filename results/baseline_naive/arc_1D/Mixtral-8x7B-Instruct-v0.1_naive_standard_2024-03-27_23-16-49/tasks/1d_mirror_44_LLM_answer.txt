
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', 'g', '.']

Example_2:
input: ['.', 'c', 'c', 'c', 'c', 'c', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Example_3:
input: ['.', 'c', 'c', 'c', 'c', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'a', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        int len = board.length;
        for (int i = 0; i < len / 2; ++i) {
            if (!board[i].equals(".") &&!board[len - i - 1].equals(".")) {
                char c = board[i].charAt(0);
                if (board[i].equals(board[len - i - 1])) {
                    StringBuilder sb = new StringBuilder();
                    while (i + 1 < len && board[i + 1].equals(board[i])) {
                        sb.append(board[++i]);
                    }
                    if (sb.length() > 1) {
                        board[i] = "" + c + sb.length();
                    } else {
                        board[i] = "" + c;
                    }
                    while (--i >= 0) {
                        board[i] = ".";
                    }
                    --i;
                }
            }
        }
        return board;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.296551724137931

cat_success_cnt: 5

cat_success_rate: 0.125

