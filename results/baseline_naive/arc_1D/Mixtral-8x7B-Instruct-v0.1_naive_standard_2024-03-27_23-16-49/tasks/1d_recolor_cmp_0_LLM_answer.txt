
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', '.', 'b', 'b', '.', 'b', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', 'b', '.', 'b', 'b', 'b', '.', 'b', '.']
output: ['.', 'b', '.', 'b', 'b', '.', 'a', 'a', 'a', 'a', '.', '.', '.', 'a', 'a', 'a', 'a', '.', 'b', 'b', 'b', '.', 'b', '.']

Example_2:
input: ['.', 'b', 'b', 'b', 'b', '.', '.', 'b', '.', 'b', 'b', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', 'b', 'b']
output: ['.', 'b', 'b', 'b', 'b', '.', '.', 'b', '.', 'b', 'b', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'a', 'a', 'a', 'a', 'a']

Example_3:
input: ['.', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.']
output: ['.', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.']

Test case:
input: ['.', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.']
*/

public class Solution {
    public String[] solution(String[] input) {
        int len = input.length;
        if (len < 5 || len % 2 == 0) return input;

        for (int i = 0, j = len - 1; i <= j; ) {
            // check the first block of b's
            if (i + 4 <= j && isBlockOfB(input, i)) {
                replaceBlockWithA(input, i);
                i += 5;
            } else if (j >= 5 && isBlockOfB(input, j)) {
                replaceBlockWithA(input, j);
                j -= 5;
            } else {
                i++;
                j--;
            }
        }

        return input;
    }

    private boolean isBlockOfB(String[] arr, int index) {
        return "bbbb".equals(arr[index]);
    }

    private void replaceBlockWithA(String[] arr, int index) {
        arr[index] = "a";
        arr[index + 1] = "a";
        arr[index + 2] = "a";
        arr[index + 3] = "a";
        arr[index + 4] = "a";
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', '.', 'b', 'b', 'b', 'b', 'b', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.20827389443651925

cat_success_cnt: 1

cat_success_rate: 1.0

