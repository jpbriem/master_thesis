
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', 'h', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'h', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', 'b', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'd', '.', '.', '.', '.', '.']

Test case:
input: ['.', 'a', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'd', 'd', 'd', 'd', 'd', 'a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] rearrange(String[] input) {
        if (input == null || input.length <= 1) return input;

        int left = -1, right = -1;
        for (int i = 0; i < input.length; ++i) {
            if (input[i].equals(".")) {
                if (left == -1) left = i;
                else right = i;
            }
        }

        // no need to swap
        if (right == -1) return input;

        for (int i = 0; i < input.length; ++i) {
            if (!input[i].equals(".") && left!= -1) {
                char temp = input[i].charAt(0);
                input[i] = ".";
                input[left] = Character.toString(temp);
                left++;
            }
            else if (input[i].equals(".") && right!= -1) {
                char temp = input[i + 1].charAt(0);
                input[i + 1] = ".";
                input[right] = Character.toString(temp);
                right--;
            }
        }

        return input;
    }
}


###########################################################
Result:
solution: ['.', 'd', 'd', 'd', 'd', 'd', 'a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.365

cat_success_cnt: 31

cat_success_rate: 0.62

