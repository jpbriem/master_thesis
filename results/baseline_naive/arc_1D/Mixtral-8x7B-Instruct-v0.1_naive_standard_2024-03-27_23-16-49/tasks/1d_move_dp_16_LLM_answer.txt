
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', '.', 'i', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'i', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', 'i', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i', '.']

Example_3:
input: ['.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.', '.', '.', 'i']
output: ['.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i']

Test case:
input: ['.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', 'i']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'i']
*/

public class MoveZerosToEnd {
    public static void main(String[] args) {
        char[] input = {'.','.','.','.','d','d','d','d','d','d','d','d','d','d','d','d','d','d','.','.','.','i'} ;
        System.out.println("Input : " + Arrays.toString(input)) ;
        moveZeroesToEnd(input);
        System.out.println("Output : " + Arrays.toString(input));
    }

    private static void moveZeroesToEnd(char[] arr){
        int i=0, j=arr.length-1;
        while (i<j){
            if (arr[i]=='0'){
                swap(arr, i, j--);
            } else {
                i++;
            }
        }
    }

    private static void swap(char[] arr, int i, int j){
        char temp = arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'i']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.23772102161100198

cat_success_cnt: 0

cat_success_rate: 0.0

