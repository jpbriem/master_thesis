
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['g', 'g', 'g', '.', '.', '.', 'i']
output: ['.', '.', '.', 'g', 'g', 'g', 'i']

Example_2:
input: ['c', 'c', 'c', '.', '.', 'i', '.']
output: ['.', '.', 'c', 'c', 'c', 'i', '.']

Example_3:
input: ['h', 'h', 'h', '.', '.', '.', 'i']
output: ['.', '.', '.', 'h', 'h', 'h', 'i']

Test case:
input: ['e', 'e', 'e', '.', '.', 'i', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', 'e', 'e', 'e', 'i']
*/

public class Solution {
    public String move(String s) {
        // Write your solution here
        if (s == null || s.length() <= 1) return s;
        char[] arr = s.toCharArray();
        int i = 0, j = arr.length - 1;
        while (i < j) {
            if (arr[j]!= '.' && arr[i] == '.') {
                swap(arr, i, j);
                i++;
                j--;
            } else if (arr[j]!= '.' && arr[i]!= '.') {
                j--;
            } else {
                i++;
            }
        }
        return new String(arr);
    }

    private void swap(char[] arr, int a, int b) {
        char tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}


###########################################################
Result:
solution: ['.', '.', 'e', 'e', 'e', 'i', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.22592592592592592

cat_success_cnt: 1

cat_success_rate: 0.025

