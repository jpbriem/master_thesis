
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', '.', '.', 'i', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'i', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', 'i', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i', '.', '.', '.']

Example_3:
input: ['.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', 'i', '.', '.', '.']
output: ['.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'i', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', '.', '.', 'i', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        int len = board.length;
        for (int i = 0; i < len - 2; ++i) {
            if (board[i].equals(".") && board[i + 1].equals(".")) {
                boolean flag = false;
                for (int j = i + 2; j < len; ++j) {
                    if (!board[j].equals(".")) {
                        char c = board[j].charAt(0);
                        for (int k = j + 1; k < len; ++k) {
                            if (board[k].equals(".") || board[k].charAt(0)!= c) break;
                            swap(board, j, k);
                        }
                        swap(board, i, j);
                        flag = true;
                        break;
                    }
                }
                if (flag) break;
            }
        }
        return board;
    }

    private void swap(String[] arr, int a, int b) {
        String tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'i', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2665036674816626

cat_success_cnt: 0

cat_success_rate: 0.0

