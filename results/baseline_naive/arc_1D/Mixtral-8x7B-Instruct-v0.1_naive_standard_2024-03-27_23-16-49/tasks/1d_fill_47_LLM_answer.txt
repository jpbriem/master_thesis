
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'c', '.', '.', 'c', '.', '.']
output: ['.', '.', '.', 'c', 'c', 'c', 'c', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'c', '.', '.', 'c', '.']
output: ['.', '.', '.', '.', 'c', 'c', 'c', 'c', '.']

Example_3:
input: ['.', '.', 'h', '.', '.', '.', 'h', '.', '.']
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', '.', '.']

Test case:
input: ['.', '.', '.', 'e', '.', '.', 'e', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', 'e', 'e', 'e', 'e', '.', '.']
*/

public class Solution {
    public String[] fill(String[] input) {
        if (input == null || input.length < 2) return input;

        int len = input.length, idx = -1;
        for (int i = 0; i < len; i++) {
            if (!input[i].equals(".")) {
                idx = i;
                break;
            }
        }

        // no char in the array
        if (idx == -1) return new String[]{};

        boolean isFirstChar = true;
        while (++idx < len) {
            if (input[idx].equals(".")) {
                if (isFirstChar) {
                    input[idx] = input[idx-1];
                    isFirstChar = false;
                } else {
                    input[idx] = input[idx-1];
                }
            } else {
                isFirstChar = true;
            }
        }

        return input;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'e', 'e', 'e', 'e', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2727272727272727

cat_success_cnt: 11

cat_success_rate: 0.2558139534883721

