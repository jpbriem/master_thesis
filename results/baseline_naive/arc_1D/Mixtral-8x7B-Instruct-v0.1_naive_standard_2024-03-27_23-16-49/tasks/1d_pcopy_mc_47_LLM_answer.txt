
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'f', 'f', 'f', '.', '.', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'f', 'f', 'f', '.', '.', '.', 'e', 'e', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', 'd', 'd', 'd', '.', '.', 'i', '.', '.', '.', 'e', '.', '.', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'd', 'd', 'd', '.', 'i', 'i', 'i', '.', 'e', 'e', 'e', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', 'e', 'e', 'e', '.', '.', 'a', '.', '.', '.', '.', '.', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'e', 'e', 'e', '.', 'a', 'a', 'a', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', '.', '.', 'a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'g', 'g', 'g', '.', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] expand(String S) {
        List<String> res = new ArrayList<>();
        int len = S.length();
        for (int i = 0; i < len; ) {
            char c = S.charAt(i);
            if (Character.isLetter(c)) {
                StringBuilder sb = new StringBuilder();
                while (i < len && Character.isLetter(S.charAt(i))) {
                    sb.append(S.charAt(i++));
                }
                res.add(sb.toString());
            } else {
                ++i;
                int j = i;
                while (j < len && Character.isDigit(S.charAt(j))) {
                    ++j;
                }
                int k = Integer.parseInt(S.substring(i, j));
                i = j;
                if (!res.isEmpty()) {
                    String last = res.get(res.size() - 1);
                    StringBuilder sb = new StringBuilder();
                    for (int l = 0; l < k; ++l) {
                        sb.append(last);
                    }
                    res.set(res.size() - 1, sb.toString());
                }
            }
        }
        return res.toArray(new String[res.size()]);
    }
}


###########################################################
Result:
solution: ['.', 'g', 'g', 'g', '.', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2049062049062049

cat_success_cnt: 8

cat_success_rate: 0.18604651162790697

