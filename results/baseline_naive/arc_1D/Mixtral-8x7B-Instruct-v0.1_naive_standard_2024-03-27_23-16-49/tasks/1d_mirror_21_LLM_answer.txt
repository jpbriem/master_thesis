
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.', '.']

Example_2:
input: ['.', 'f', 'f', 'f', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'f', 'f', 'f', '.', '.', '.']

Example_3:
input: ['.', '.', '.', 'e', 'e', 'e', '.', 'i', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'e', 'e', 'e', '.']

Test case:
input: ['a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['a', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.']
*/

public class Solution {
    public String reverse(String s) {
        if (s == null || s.length() <= 1) return s;

        StringBuilder sb = new StringBuilder();
        int indexA = -1, indexI = -1;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == 'a') {
                indexA = i;
            } else if (c == 'i') {
                indexI = i;
            }
            sb.append('.');
        }

        // no a or i found in the string
        if (indexA == -1 && indexI == -1) return s;

        // only one of them is found
        if (indexA!= -1 && indexI == -1) {
            sb.replace(indexA, indexA + 1, ".");
            sb.insert(0, s.substring(0, indexA));
            sb.append("i");
            sb.append(s.substring(indexA + 1));
        } else if (indexA == -1 && indexI!= -1) {
            sb.replace(indexI, indexI + 1, ".");
            sb.insert(0, s.substring(0, indexI));
            sb.append("a");
            sb.append(s.substring(indexI + 1));
        } else {
            sb.replace(indexA, indexA + 1, ".");
            sb.replace(indexI, indexI + 1, ".");
            sb.insert(0, s.substring(0, Math.min(indexA, indexI)));
            sb.append(s.substring(Math.max(indexA, indexI) + 1));
            sb.insert(sb.indexOf(".") + 1, s.charAt(Math.min(indexA, indexI)));
        }

        return sb.toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.30943396226415093

cat_success_cnt: 1

cat_success_rate: 0.06666666666666667

