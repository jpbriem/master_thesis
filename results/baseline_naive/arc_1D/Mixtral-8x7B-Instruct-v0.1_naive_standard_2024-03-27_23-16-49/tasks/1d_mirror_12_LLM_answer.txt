
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', 'd', 'd', 'd', '.']

Test case:
input: ['a', 'a', 'a', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.']
*/

public class Solution {
    public String[] rearrange(String[] input) {
        if (input == null || input.length < 3) return input;

        int i = -1, j = -1;
        for (int k = 0; k < input.length; k++) {
            if (input[k].equals(".")) {
                j++;
                input[j] = input[k];
                input[k] = ".";
            } else if (!input[k].equals("i")) {
                i++;
                input[i] = input[k];
                input[k] = ".";
            }
        }

        for (int k = 0; k <= i && i + 1 < j; k++, j--) {
            char tmp = input[i+1].charAt(0);
            input[i+1] = input[j];
            input[j] = "" + tmp;
        }

        return input;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3176470588235294

cat_success_cnt: 0

cat_success_rate: 0.0

