
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', '.', '.', '.', '.']

Example_2:
input: ['.', '.', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.', '.', '.']

Example_3:
input: ['.', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'c', 'c', 'c', '.', 'i', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'c', 'c', 'c', '.', '.', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        // Write your solution here
        if (board == null || board.length < 2) return board;
        int len = board[0].length();
        for (int i = 0; i < len - 2; i++) {
            if (board[0].charAt(i)!= '.' && board[0].charAt(i + 1) == '.' && board[0].charAt(i + 2) == '.') {
                char temp = board[0].charAt(i);
                for (int j = i + 1; j <= i + 2; j++) {
                    board[0] = board[0].substring(0, j) + "." + board[0].substring(j + 1);
                }
                board[0] = board[0].substring(0, i + 1) + temp + board[0].substring(i + 1);
            }
        }
        for (int i = 1; i < board.length; i++) {
            for (int j = 0; j < len - 2; j++) {
                if (board[i].charAt(j)!= '.' && board[i].charAt(j + 1) == '.' && board[i].charAt(j + 2) == '.') {
                    char temp = board[i].charAt(j);
                    for (int k = j + 1; k <= j + 2; k++) {
                        board[i] = board[i].substring(0, k) + "." + board[i].substring(k + 1);
                    }
                    board[i] = board[i].substring(0, j + 1) + temp + board[i].substring(j + 1);
                }
            }
        }
        return board;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'i', '.', 'c', 'c', 'c', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.29965156794425085

cat_success_cnt: 5

cat_success_rate: 0.13513513513513514

