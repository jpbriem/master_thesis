
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'e', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', '.', '.', '.', '.', 'd', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'd', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', '.', 'g', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'g', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'f', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'f', '.', '.', '.', '.', '.', '.']
*/

public class ReverseWordsInString {
    public static void main(String[] args) {
        char[] input = {'.','.','.','.','.','.','.','.','.','.','.','.','f','g','g','g','g','g','.','.','.','.','.'};
        System.out.println("Input : " + String.valueOf(input));
        reverseWords(input);
        System.out.println("Output : " + String.valueOf(input));
    }

    private static void reverseWords(char[] str){
        int start = 0;
        for (int i = 0; i < str.length; i++) {
            if(str[i] == '.') continue;
            else{
                swap(str,start,i);
                start++;
            }
        }
        //reverse the string
        reverse(str,0,str.length-1);
        //reverse each word in the string
        int end = 0;
        while(end<str.length){
            if(str[end]=='.'){
                end++;
                continue;
            }
            int tempEnd = end+1;
            while(tempEnd<str.length && str[tempEnd]!='.'){
                tempEnd++;
            }
            reverse(str,end,tempEnd-1);
            end = tempEnd;
        }
    }

    private static void reverse(char[] arr,int start,int end){
        while(start<end){
            swap(arr,start,end);
            start++;
            end--;
        }
    }

    private static void swap(char[] arr,int a,int b){
        char temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'f', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3465909090909091

cat_success_cnt: 19

cat_success_rate: 0.7307692307692307

