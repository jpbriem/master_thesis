
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', 'e', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'e', '.', '.', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', 'e', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] solution(String[] input) {
        int start = -1;
        for (int i = 0; i < input.length; ++i) {
            if (start == -1 &&!input[i].equals(".")) {
                start = i;
            } else if (start!= -1 && input[i].equals(".")) {
                break;
            }
        }

        int end = -1;
        for (int i = input.length - 1; i >= 0; --i) {
            if (end == -1 &&!input[i].equals(".")) {
                end = i;
            } else if (end!= -1 && input[i].equals(".")) {
                break;
            }
        }

        if (start == -1 || end == -1) return input;

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i <= start; ++i) {
            sb.append(input[i]);
        }

        char c = input[start + 1];
        for (int i = end; i > start + 1; --i) {
            if (input[i] == c) continue;
            sb.append('.');
            sb.append(c);
            c = input[i];
        }

        sb.append(input[start + 1]);
        for (int i = end + 1; i < input.length; ++i) {
            sb.append(input[i]);
        }

        return sb.toString().split("");
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'e', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.251685393258427

cat_success_cnt: 3

cat_success_rate: 0.06666666666666667

