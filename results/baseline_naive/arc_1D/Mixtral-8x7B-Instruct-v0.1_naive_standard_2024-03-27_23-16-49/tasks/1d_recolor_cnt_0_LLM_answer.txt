
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', '.', '.', '.', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', '.']
output: ['.', 'a', '.', '.', '.', 'h', 'h', '.', '.', '.', 'e', 'e', 'e', '.', '.', '.', 'h', 'h', '.']

Example_2:
input: ['.', 'b', '.', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'b', 'b', 'b', '.', '.']
output: ['.', 'a', '.', 'h', 'h', '.', '.', '.', 'e', 'e', 'e', '.', '.', '.', 'e', 'e', 'e', '.', '.']

Example_3:
input: ['.', '.', 'b', '.', '.', 'b', 'b', 'b', '.', 'b', 'b', '.', '.', '.', 'b', 'b', '.', '.', '.']
output: ['.', '.', 'a', '.', '.', 'e', 'e', 'e', '.', 'h', 'h', '.', '.', '.', 'h', 'h', '.', '.', '.']

Test case:
input: ['.', 'b', '.', '.', 'b', 'b', '.', 'b', 'b', 'b', '.', 'b', 'b', '.', '.', 'b', 'b', 'b', '.']

###########################################################
Sample Outputs:
output: ['.', 'a', '.', '.', 'e', 'h', '.', 'h', 'e', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', '.']
*/

public class Solution {
    public String[] replace(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];
        int len = arr.length;
        for (int i = 0; i < len; i++) {
            char c = arr[i].charAt(0);
            if (c == 'b') {
                if (i + 1 < len && arr[i+1].equals(".")) {
                    arr[i] = "a";
                } else if (i - 1 >= 0 && arr[i-1].equals(".") && i + 1 < len && arr[i+1].equals(".")) {
                    arr[i] = "h";
                } else if (i - 1 >= 0 && arr[i-1].equals(".") && i + 2 < len && arr[i+1].equals(".") && arr[i+2].equals(".")) {
                    arr[i] = "e";
                }
            }
        }
        return arr;
    }
}


###########################################################
Result:
solution: ['.', 'a', '.', '.', 'h', 'h', '.', 'e', 'e', 'e', '.', 'h', 'h', '.', '.', 'e', 'e', 'e', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.20505992010652463

cat_success_cnt: 0

cat_success_rate: 0.0

