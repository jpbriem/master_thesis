
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'a', 'a', 'a', 'a', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'a', 'a', 'a', 'a', '.', '.']

Example_2:
input: ['.', 'g', 'g', 'g', 'g', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'g', 'g', 'g', 'g', '.', '.', '.']

Example_3:
input: ['a', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.', '.']

Test case:
input: ['d', 'd', 'd', 'd', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', 'd', 'd', 'd', 'd', '.', '.', '.']
*/

public class Solution {
    public String move(String s) {
        // Write your solution here
        if (s == null || s.length() <= 1) return s;
        char[] arr = s.toCharArray();
        int i = 0, j = arr.length - 1;
        while (i < j) {
            if (arr[i]!= '.' && arr[j]!= '.') {
                if (arr[i]!= arr[j]) {
                    swap(arr, i, --j);
                } else {
                    ++i;
                }
            } else if (arr[i] == '.') {
                if (arr[j]!= arr[j-1]) {
                    swap(arr, j--, i++);
                } else {
                    ++i;
                }
            } else {
                --j;
            }
        }
        return new String(arr);
    }

    private void swap(char[] arr, int a, int b) {
        char tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'i', '.', '.', 'd', 'd', 'd', 'd', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3076923076923077

cat_success_cnt: 3

cat_success_rate: 0.13043478260869565

