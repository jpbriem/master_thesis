
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'e', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', '.', '.', 'f', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'f', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', '.', 'd', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'd', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'b', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'b', '.', '.', '.']
*/

public class Solution {
    public String reverseOnlyLetters(String S) {
        if (S == null || S.length() <= 1) return S;
        char[] arr = S.toCharArray();
        int left = 0, right = arr.length - 1;
        while (left < right) {
            if (!Character.isAlphabetic(arr[left])) {
                left++;
            } else if (!Character.isAlphabetic(arr[right])) {
                right--;
            } else {
                swap(arr, left++, right--);
            }
        }
        return new String(arr);
    }

    private void swap(char[] arr, int i, int j) {
        char tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'e', 'e', 'e', 'e', 'e', 'e', 'b', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.33136094674556216

cat_success_cnt: 14

cat_success_rate: 0.7368421052631579

