
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', '.', '.']

Example_3:
input: ['.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.']
*/

public class Solution {
    public String move(String s) {
        // Write your solution here
        if (s == null || s.length() < 4) return s;
        StringBuilder sb = new StringBuilder();
        int i = 0, j = s.length() - 1;
        while (i <= j) {
            char c = s.charAt(i);
            if (c!= '.' && c!= 'i') {
                sb.append(c);
            } else if (c == 'i' && j > i + 1 && s.charAt(j)!= '.') {
                sb.append('i');
            }
            i++;
            j--;
        }
        return sb.reverse().toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2972027972027972

cat_success_cnt: 4

cat_success_rate: 0.1111111111111111

