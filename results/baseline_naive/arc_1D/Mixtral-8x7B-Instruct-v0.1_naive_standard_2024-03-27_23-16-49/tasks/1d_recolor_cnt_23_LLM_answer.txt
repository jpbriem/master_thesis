
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'g', 'g', '.', 'g', 'g', 'g', '.', '.', '.', 'g', '.', '.', '.', 'g', 'g', 'g', '.', '.', 'g', 'g']
output: ['.', '.', 'e', 'e', '.', 'b', 'b', 'b', '.', '.', '.', 'a', '.', '.', '.', 'b', 'b', 'b', '.', '.', 'e', 'e']

Example_2:
input: ['.', 'g', '.', '.', '.', 'g', 'g', 'g', '.', '.', '.', 'g', 'g', '.', '.', '.', 'g', 'g', '.', 'g', '.', '.']
output: ['.', 'a', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', 'e', 'e', '.', '.', '.', 'e', 'e', '.', 'a', '.', '.']

Example_3:
input: ['.', '.', 'g', 'g', 'g', '.', 'g', 'g', '.', '.', 'g', '.', 'g', '.', '.', '.', 'g', 'g', 'g', '.', '.', '.']
output: ['.', '.', 'b', 'b', 'b', '.', 'e', 'e', '.', '.', 'a', '.', 'a', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', '.', 'g', 'g', '.', '.', '.', 'g', '.', '.', '.', 'g', 'g', '.', 'g', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'a', 'a', 'a', '.', 'b', 'b', '.', '.', '.', 'e', '.', '.', '.', 'b', 'b', '.', 'a', 'a', '.', '.', '.']
*/

public class Solution {
    public String[] solution(String[] input) {
        int len = input.length;
        if (len == 0 || len % 3!= 0) return new String[0];

        for (int i = 0; i < len / 3; ++i) {
            switch (input[i * 3]) {
                case ".": break;
                case "g": input[i * 3] = "e"; break;
                default: throw new IllegalArgumentException("Invalid character.");
            }
            switch (input[i * 3 + 1]) {
                case ".": break;
                case "g": input[i * 3 + 1] = "b"; break;
                default: throw new IllegalArgumentException("Invalid character.");
            }
            switch (input[i * 3 + 2]) {
                case ".": break;
                case "g": input[i * 3 + 2] = "a"; break;
                default: throw new IllegalArgumentException("Invalid character.");
            }
        }

        return input;
    }
}


###########################################################
Result:
solution: ['.', 'b', 'b', 'b', '.', 'e', 'e', '.', '.', '.', 'a', '.', '.', '.', 'e', 'e', '.', 'a', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.20078226857887874

cat_success_cnt: 0

cat_success_rate: 0.0

