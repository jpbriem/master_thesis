
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.']

Example_2:
input: ['b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.']

Test case:
input: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'h', 'h', 'h', 'h']
*/

public class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i) == 'R') {
                while (i < len && dominoes.charAt(i)!= 'L') {
                    arr[i] = 'R';
                    ++i;
                }
                if (i < len && dominoes.charAt(i) == 'L') {
                    int j = i + 1;
                    while (j < len && dominoes.charAt(j)!= '.') {
                        --j;
                    }
                    if (j > i + 1) {
                        Arrays.fill(arr, i + 1, j, '.');
                    } else {
                        Arrays.fill(arr, i + 1, j, 'R');
                    }
                    i = j;
                }
            } else if (dominoes.charAt(i) == 'L') {
                int j = i - 1;
                while (j >= 0 && dominoes.charAt(j)!= '.') {
                    --j;
                }
                if (j < i - 1) {
                    Arrays.fill(arr, j + 1, i, '.');
                } else {
                    Arrays.fill(arr, j + 1, i, 'L');
                }
            }
        }
        return new String(arr);
    }
}


###########################################################
Result:
solution: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2826666666666667

cat_success_cnt: 2

cat_success_rate: 0.08

