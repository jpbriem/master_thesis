
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'c', 'c', 'c', 'c', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'c', 'c', 'c', 'c', '.']

Example_2:
input: ['f', 'f', 'f', 'f', 'f', '.', '.', '.', '.']
output: ['.', '.', '.', 'f', 'f', 'f', 'f', 'f', '.']

Example_3:
input: ['.', 'a', 'a', 'a', 'a', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'a', 'a', 'a', 'a', '.']

Test case:
input: ['g', 'g', 'g', 'g', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', 'g', 'g', 'g', 'g', '.']
*/

public class MoveZerosToEnd {
    public static void main(String[] args) {
        char[] input = {'g','g','g','g','.','.','.','.'};
        System.out.println("Input : ");
        printArray(input);
        moveZeroesToEnd(input);
        System.out.println("\nOutput :");
        printArray(input);
    }

    private static void moveZeroesToEnd(char[] arr){
        int j=0;
        for (int i = 0; i < arr.length; i++) {
            if(arr[i]!='.'){
                swap(arr,j,i);
                j++;
            }
        }
    }

    private static void swap(char[] arr, int a, int b) {
        char temp = arr[a];
        arr[a]=arr[b];
        arr[b]=temp;
    }

    private static void printArray(char[] arr){
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'g', 'g', 'g', 'g', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.24273858921161826

cat_success_cnt: 3

cat_success_rate: 0.09375

