
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', '.', '.']

Example_2:
input: ['.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.']
output: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Test case:
input: ['.', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.']
*/

public class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        Arrays.fill(arr, '.');
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i)!= '.') {
                arr[i] = dominoes.charAt(i);
            }
        }
        // check left side of each dot
        for (int i = 0; i < len - 1; ++i) {
            if (arr[i] == '.' && arr[i + 1]!= '.') {
                if (arr[i + 1] == 'R') {
                    continue;
                } else {
                    int j = i + 1;
                    while (j < len && arr[j]!= 'L' && arr[j]!= 'R') {
                        arr[j] = 'L';
                        ++j;
                    }
                    if (j >= len || arr[j] == 'L') {
                        continue;
                    } else {
                        --j;
                        while (i <= j) {
                            arr[i] = 'R';
                            i += 2;
                        }
                    }
                }
            }
        }
        return new String(arr);
    }
}


###########################################################
Result:
solution: ['.', '.', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.2974683544303797

cat_success_cnt: 7

cat_success_rate: 0.4375

