
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['a', 'a', 'a', 'a', 'a', '.', '.', 'f', '.']
output: ['.', '.', 'a', 'a', 'a', 'a', 'a', 'f', '.']

Example_2:
input: ['g', 'g', 'g', 'g', '.', '.', 'f', '.', '.']
output: ['.', '.', 'g', 'g', 'g', 'g', 'f', '.', '.']

Example_3:
input: ['b', 'b', 'b', '.', '.', 'f', '.', '.', '.']
output: ['.', '.', 'b', 'b', 'b', 'f', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', '.', '.', 'f', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'g', 'g', 'g', '.', '.', 'f', '.', '.']
*/

// Solution 1:
class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        Arrays.fill(arr, '.');
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i)!= '.') {
                arr[i] = dominoes.charAt(i);
            } else {
                break;
            }
        }
        for (int i = len - 1; i >= 0 && arr[i] == '.'; --i) {
            arr[i] = dominoes.charAt(i);
        }
        // System.out.println(Arrays.toString(arr));
        for (int i = 0; i + 1 < len; ) {
            if (arr[i] == '.' && arr[i+1]!= '.') {
                if (arr[i+1] == 'L' || arr[i+1] == 'R') {
                    arr[i] = arr[i+1];
                    i += 2;
                } else {
                    arr[i] = arr[i+1];
                    while (i + 1 < len && arr[i+1] == '.') {
                        arr[i+1] = arr[i];
                        i++;
                    }
                    i++;
                }
            } else {
                i++;
            }
        }
        return new String(arr);
    }
}

// Solution 2:
class Solution {
    public String pushDominoes(String dominoes) {
        StringBuilder sb = new StringBuilder();
        int f = 0;
        for (char c : dominoes.toCharArray()) {
            if (c == 'L') {
                f = -1;
            } else if (c == 'R') {
                f = 1;
            } else if (f == -1) {
                sb.append('L');
                f = 0;
            } else if (f == 1) {
                sb.append('R');
                f = 0;
            }
            if (f == 0) {
                sb.append('.');
            }
        }
        if (f == -1) {
            int idx = sb.lastIndexOf(".");
            if (idx > 0) {
                sb.replace(idx, idx + 1, "L");
            }
        } else if (f == 1) {
            int idx = sb.indexOf(".");
            if (idx >= 0) {
                sb.replace(idx, idx + 1, "R");
            }
        }
        return sb.toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', 'g', 'g', 'g', 'f', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2589073634204275

cat_success_cnt: 0

cat_success_rate: 0.0

