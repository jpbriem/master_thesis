
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '.', 'c', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.']
output: ['.', '.', 'i', 'i', 'i', 'i', 'i', 'i', 'i', '.', 'c', 'c', 'c', 'c', 'c', 'c', '.', '.', '.', '.']

Example_2:
input: ['.', '.', '.', 'c', 'c', 'c', 'c', '.', 'c', '.', '.', '.', 'c', 'c', 'c', '.', '.', 'c', 'c', '.']
output: ['.', '.', '.', 'i', 'i', 'i', 'i', '.', 'c', '.', '.', '.', 'c', 'c', 'c', '.', '.', 'c', 'c', '.']

Example_3:
input: ['.', 'c', 'c', 'c', 'c', 'c', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', 'c', '.']
output: ['.', 'i', 'i', 'i', 'i', 'i', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', 'c', '.']

Test case:
input: ['.', '.', 'c', 'c', 'c', 'c', '.', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'i', 'i', 'i', 'i', '.', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', '.']
*/

public class Solution {
    public String[] replace(String[] input) {
        if (input == null || input.length <= 0) return new String[0];
        int len = input.length;
        for (int i = 0; i < len; i++) {
            if (input[i].equals(".")) continue;
            else if (input[i].equals("c")) {
                if (i - 1 >= 0 &&!input[i-1].equals(".")) {
                    input[i] = "d";
                }
                else if (i + 1 < len &&!input[i+1].equals(".")) {
                    input[i] = "b";
                }
                else {
                    input[i] = "i";
                }
            }
        }
        // check the first and last element of array, change them to. if they are not.
        if (!input[0].equals(".") && input[0].equals("i")) input[0] = ".";
        if (!input[len-1].equals(".") && input[len-1].equals("i")) input[len-1] = ".";
        return input;
    }
}


###########################################################
Result:
solution: ['.', '.', 'i', 'i', 'i', 'i', '.', '.', 'c', 'c', '.', 'c', '.', '.', 'c', 'c', 'c', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.20596205962059622

cat_success_cnt: 7

cat_success_rate: 0.18421052631578946

