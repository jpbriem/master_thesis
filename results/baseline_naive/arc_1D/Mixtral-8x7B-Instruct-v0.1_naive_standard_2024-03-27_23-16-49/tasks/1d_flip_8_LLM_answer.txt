
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', 'b', 'c', 'c', '.', '.']
output: ['.', '.', '.', '.', 'c', 'c', 'b', '.', '.']

Example_2:
input: ['c', 'd', 'd', 'd', '.', '.', '.', '.', '.']
output: ['d', 'd', 'd', 'c', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', 'c', 'e', 'e', 'e', '.']
output: ['.', '.', '.', '.', 'e', 'e', 'e', 'c', '.']

Test case:
input: ['.', 'd', 'e', 'e', 'e', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'e', 'e', 'e', 'd', '.', '.', '.', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        if (board == null || board.length <= 0) return board;
        int len = board.length, idx = -1;
        for (int i = 0; i < len; ++i) {
            if (!board[i].equals(".")) {
                swap(board, ++idx, i);
            }
        }
        return board;
    }

    private void swap(String[] arr, int a, int b) {
        String tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}


###########################################################
Result:
solution: ['.', 'e', 'e', 'e', 'd', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.36180904522613067

cat_success_cnt: 30

cat_success_rate: 0.6122448979591837

