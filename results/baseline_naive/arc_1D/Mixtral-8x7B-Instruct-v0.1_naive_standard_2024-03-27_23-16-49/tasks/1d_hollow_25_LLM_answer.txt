
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'g', 'g', 'g', '.', '.', '.']
output: ['.', '.', 'g', '.', 'g', '.', '.', '.']

Example_2:
input: ['.', '.', '.', '.', 'f', 'f', 'f', '.']
output: ['.', '.', '.', '.', 'f', '.', 'f', '.']

Example_3:
input: ['.', '.', '.', 'g', 'g', 'g', 'g', '.']
output: ['.', '.', '.', 'g', '.', '.', 'g', '.']

Test case:
input: ['.', 'a', 'a', 'a', 'a', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', 'a', '.', 'a', '.', '.', '.', '.']
*/

public class Solution {
    public String[] solution(String[] strArr) {
        for (int i = 0; i < strArr.length - 1; i++) {
            if (strArr[i].equals(".") &&!strArr[i + 1].equals(".")) {
                int j = i + 1;
                while (!strArr[j].equals(".")) {
                    j++;
                }
                String temp = strArr[i];
                strArr[i] = strArr[j - 1];
                strArr[j - 1] = temp;
            }
        }
        return strArr;
    }
}


###########################################################
Result:
solution: ['.', 'a', '.', '.', 'a', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.3470319634703196

cat_success_cnt: 3

cat_success_rate: 0.15789473684210525

