
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', 'i', '.']
output: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'i', '.']

Example_2:
input: ['f', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.']
output: ['f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'i', '.']

Example_3:
input: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '.', '.', 'i', '.']
output: ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'i', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', '.', '.', '.', 'i']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'i']
*/

public class Solution {
    public String[] expand(String S) {
        List<String> res = new ArrayList<>();
        int len = 0;
        while (len < S.length()) {
            char c = S.charAt(len);
            if (c == '.') break;
            int count = 0;
            StringBuilder sb = new StringBuilder();
            while (len < S.length() && Character.isDigit(S.charAt(len))) {
                count = count * 10 + (S.charAt(len++) - '0');
            }
            for (int i = 0; i < count; ++i) {
                sb.append(c);
            }
            res.add(sb.toString());
            len++;
        }
        if (len < S.length()) {
            res.add(".");
        }
        return res.toArray(new String[res.size()]);
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'i']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.20209059233449478

cat_success_cnt: 5

cat_success_rate: 0.45454545454545453

