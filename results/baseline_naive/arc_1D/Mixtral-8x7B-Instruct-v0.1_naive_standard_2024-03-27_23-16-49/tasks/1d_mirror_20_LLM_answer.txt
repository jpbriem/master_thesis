
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['f', 'f', 'f', 'f', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.']

Example_2:
input: ['.', '.', 'e', 'e', 'e', 'e', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'e', 'e', 'e', 'e', '.', '.', '.']

Example_3:
input: ['.', 'f', 'f', 'f', 'f', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'f', 'f', 'f', 'f', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'g', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.', '.', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        int len = board.length;
        for (int i = 0; i < len / 2; ++i) {
            if (board[i].equals(".")) continue;
            boolean flag = false;
            for (int j = len - 1; j > i; --j) {
                if (!board[j].equals(".") &&!flag) {
                    char tmp = board[i].charAt(0);
                    board[i] = board[j];
                    board[j] = Character.toString(tmp);
                    flag = true;
                } else if (board[j].equals(".")) break;
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < len; ++i) {
            if (i!= 0 && board[i - 1].equals(".")) {
                if (board[i].equals(".")) continue;
                sb.append('.');
            }
            sb.append(board[i]);
        }
        String str = sb.toString();
        String[] res = new String[len];
        for (int i = 0; i < len; ++i) {
            if (i == 0 && str.charAt(i)!= '.') {
                res[i] = Character.toString(str.charAt(i));
                continue;
            }
            if (str.charAt(i)!= '.' && str.charAt(i)!= str.charAt(i - 1)) {
                res[i] = Character.toString(str.charAt(i));
            }
        }
        return res;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.3106060606060606

cat_success_cnt: 1

cat_success_rate: 0.07142857142857142

