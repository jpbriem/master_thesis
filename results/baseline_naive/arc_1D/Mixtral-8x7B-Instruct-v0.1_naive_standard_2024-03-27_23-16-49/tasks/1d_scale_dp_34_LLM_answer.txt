
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', '.', '.', 'f', 'f', 'f', 'f', '.', '.', 'a', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'f', 'a', '.', '.']

Example_2:
input: ['.', 'b', 'b', 'b', '.', '.', 'a', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', 'b', 'b', 'b', 'b', 'b', 'a', '.', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', 'a', '.', '.', '.', '.', '.']
output: ['.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', '.', 'a', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', 'a', '.', '.']
*/

public class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        Arrays.fill(arr, '.');
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i)!= '.') {
                arr[i] = dominoes.charAt(i);
            }
        }
        boolean leftToRight = true;
        for (int i = 0; i < len && arr[i] == '.'; ++i) {}
        if (i % 2 == 1) {
            leftToRight = false;
        }
        int l = -1, r = -1;
        for (int i = 0; i < len; ++i) {
            if (arr[i] == '.' && l >= 0 && r >= 0) {
                if (leftToRight) {
                    int dist = Math.min(r - i, i - l);
                    arr[i - dist] = arr[l + dist] = 'L';
                } else {
                    int dist = Math.min(r - i, i - l);
                    arr[i - dist] = arr[l + dist] = 'R';
                }
            } else if (arr[i]!= '.') {
                if (l == -1) {
                    l = i;
                }
                r = i;
            }
        }
        return new String(arr);
    }
}


###########################################################
Result:
solution: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'a', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2036405005688282

cat_success_cnt: 10

cat_success_rate: 0.3448275862068966

