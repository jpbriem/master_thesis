
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', '.', 'b']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'b']

Example_2:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', 'b']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'b']

Example_3:
input: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', 'b', '.']
output: ['.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'b', '.']

Test case:
input: ['.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', '.', 'b', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'b', '.']
*/

public class Solution {
    public String[] solution(String[] strArr) {
        int len = strArr.length;
        for (int i = 0; i < len / 2; i++) {
            if (strArr[i].equals(".") &&!strArr[len - i - 1].equals(".")) {
                while (!strArr[len - i - 1].equals(".")) {
                    swap(strArr, i, len - i - 1);
                    i++;
                }
            } else if (!strArr[i].equals(".") && strArr[len - i - 1].equals(".")) {
                while (!strArr[i].equals(".")) {
                    swap(strArr, i, len - i - 1);
                    len--;
                }
            }
        }
        return strArr;
    }

    private void swap(String[] arr, int a, int b) {
        String temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'b', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2391304347826087

cat_success_cnt: 0

cat_success_rate: 0.0

