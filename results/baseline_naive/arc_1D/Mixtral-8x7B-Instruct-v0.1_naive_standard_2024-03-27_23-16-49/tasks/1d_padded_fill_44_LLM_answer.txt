
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', '.', '.', 'b', '.', '.', '.', '.', '.', '.', 'b', '.', '.', 'b', '.', '.', '.', '.', '.', '.', 'b', '.', '.', 'b', '.', '.', '.', '.', '.']
output: ['.', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.']

Example_2:
input: ['d', '.', 'd', '.', '.', '.', '.', '.', '.', '.', 'd', '.', 'd', '.', '.', '.', '.', '.', '.', '.', 'd', '.', 'd', '.', '.', '.', '.', '.', '.', '.']
output: ['d', 'd', 'd', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', '.', '.', '.', '.', '.', '.', '.', 'd', 'd', 'd', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.']
output: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', '.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', '.']

Test case:
input: ['.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.', '.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', 'c', 'c', '.', 'c', 'c', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', '.', '.']
*/

public class Solution {
    public String[] merge(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];

        int len = arr.length;
        for (int i = 0; i < len - 1; i++) {
            while (i + 1 < len && ".".equals(arr[i])) {
                i++;
            }
            if (i >= len - 1) break;

            int j = i + 1;
            while (j < len &&!".".equals(arr[j])) {
                j++;
            }

            // update the array
            StringBuilder sb = new StringBuilder();
            for (int k = i; k < j; k++) {
                sb.append(arr[k]);
            }
            char c = sb.charAt(0);
            int count = sb.length();
            for (int k = 0; k < count; k++) {
                arr[i] = "" + c;
                i++;
            }
            i--;
        }

        return arr;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.211864406779661

cat_success_cnt: 1

cat_success_rate: 0.025

