
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['d', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', '.', '.', '.', 'b']
output: ['.', '.', '.', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'b']

Example_2:
input: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '.', '.', '.', '.', 'b']
output: ['.', '.', '.', '.', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'b']

Example_3:
input: ['.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', '.', '.', '.', '.', '.', '.', '.', 'b', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'f', 'f', 'f', 'f', 'f', 'b', '.', '.', '.']

Test case:
input: ['.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', 'b', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.', '.', 'b', '.', '.', '.', '.']
*/

public class MoveZerosToEnd {
    public static void main(String[] args) {
        char[] input = {'d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','.','.','.'};
        System.out.println("Input : " + String.valueOf(input));
        moveZeroesToEnd(input);
        System.out.println("Output : " + String.valueOf(input));
    }

    private static void moveZeroesToEnd(char[] arr){
        int nonZeroIndex = 0;
        for (int i=0;i<arr.length;i++){
            if (arr[i]!= '.'){
                swap(arr,nonZeroIndex++,i);
            }
        }
    }

    private static void swap(char[] arr, int index1, int index2){
        char temp = arr[index1];
        arr[index1] = arr[index2];
        arr[index2] = temp;
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'b', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.22509225092250923

cat_success_cnt: 1

cat_success_rate: 0.023809523809523808

