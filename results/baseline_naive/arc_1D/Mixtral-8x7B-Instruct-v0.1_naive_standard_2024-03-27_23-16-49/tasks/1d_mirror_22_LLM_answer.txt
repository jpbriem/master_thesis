
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', '.', 'e', 'e', 'e', 'e', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'e', 'e', 'e', 'e', '.']

Example_2:
input: ['.', 'a', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', 'a', '.', '.', '.', '.']

Example_3:
input: ['c', 'c', 'c', 'c', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'c', 'c', 'c', 'c', '.', '.', '.', '.', '.']

Test case:
input: ['.', 'g', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.', '.', '.', '.']
*/

public class MoveAllXtoEnd {
    public static void move(char[] arr) {
        int i = 0; // index for non-x elements
        int j = arr.length - 1; // index for x elements

        while (i < j) {
            if (arr[j] == 'x') {
                j--;
            } else if (arr[i]!= 'x') {
                i++;
            } else {
                char temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                i++;
                j--;
            }
        }
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.', '.', '.', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.31203007518796994

cat_success_cnt: 2

cat_success_rate: 0.125

