
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.']
output: ['.', 'b', '.', '.', 'b', '.', '.', '.', '.', '.']

Example_2:
input: ['d', 'd', 'd', '.', '.', '.', '.', '.', '.', '.']
output: ['d', '.', 'd', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', '.']
output: ['.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.']

Test case:
input: ['.', '.', '.', '.', 'c', 'c', 'c', 'c', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', 'c', '.', 'c', '.', '.', '.']
*/

public class Solution {
    public String[] divide(String s) {
        // Write your solution here
        if (s == null || s.length() < 2) return new String[]{s};
        int len = s.length();
        char c = s.charAt(0);
        List<String> res = new ArrayList<>();
        for (int i = 0; i <= len; i++) {
            if (i!= len && s.charAt(i)!= c) {
                res.add(s.substring(0, i));
                s = s.substring(i);
                break;
            }
        }
        String[] ans = divide(s);
        for (String str : ans) {
            res.add(str);
        }
        return res.toArray(new String[res.size()]);
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', 'c', '.', '.', 'c', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.325

cat_success_cnt: 5

cat_success_rate: 0.125

