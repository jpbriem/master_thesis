
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.']

Example_2:
input: ['.', '.', '.', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', '.']

Example_3:
input: ['.', 'a', 'a', 'a', '.', 'i', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', 'i', '.', 'a', 'a', 'a', '.', '.', '.']

Test case:
input: ['g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'g']
*/

// Solution 1:
/*
function moveElementToEnd(array, toMove) {
    let left = 0;
    let right = array.length - 1;

    while (left < right) {
        if (array[right] === toMove && array[left]!== toMove) {
            // swap elements at indexes left and right
            const temp = array[left];
            array[left] = array[right];
            array[right] = temp;
            left++;
            right--;
        } else if (array[right]!== toMove) {
            right--;
        } else if (array[left] === toMove) {
            left++;
        }
    }

    return array;
}
*/

// Solution 2:
const moveElementToEnd = (array, toMove) => {
    let i = 0;
    let j = array.length - 1;

    while (i <= j) {
        if (array[j] === toMove) {
            j--;
        } else if (array[i]!== toMove) {
            i++;
        } else {
            const temp = array[i];
            array[i] = array[j];
            array[j] = temp;
            i++;
            j--;
        }
    }

    return array;
};

console.log(moveElementToEnd(['g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.', '.'], "."));


###########################################################
Result:
solution: ['.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.29553264604810997

cat_success_cnt: 5

cat_success_rate: 0.12195121951219512

