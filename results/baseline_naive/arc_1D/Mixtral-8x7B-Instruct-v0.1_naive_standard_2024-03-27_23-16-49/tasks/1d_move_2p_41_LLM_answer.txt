
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.']
output: ['.', '.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.']

Example_2:
input: ['.', '.', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.', '.']

Example_3:
input: ['.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', 'g', 'g', 'g', 'g', 'g', 'g', '.', '.']

Test case:
input: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.', '.', '.']

Test case:
input: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']
*/

public class Solution {
    public String[] move(String[] board) {
        // Write your solution here
        if (board == null || board.length < 1 || board[0].length() < 1){
            return board;
        }
        int len = board.length;
        for (int i = 0; i < len - 1; i++){
            boolean flag = false;
            for (int j = 0; j < len - 1; j++){
                if (board[j].charAt(i)!= '.' && board[j + 1].charAt(i) == '.'){
                    char temp = board[j].charAt(i);
                    board[j] = board[j + 1];
                    board[j + 1] = Character.toString(temp);
                    flag = true;
                }
            }
            if (!flag){
                break;
            }
        }
        for (int i = 0; i < len; i++){
            if (board[i].charAt(len - 1)!= '.'){
                continue;
            }
            int j = len - 1;
            while (j > 0 && board[j - 1].charAt(len - 1) == '.'){
                j--;
            }
            if (j == 0){
                break;
            }
            char temp = board[j].charAt(len - 1);
            board[j] = board[j - 1];
            board[j - 1] = Character.toString(temp);
        }
        return board;
    }
}


###########################################################
Result:
solution: ['.', '.', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', '.', '.', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.2739018087855297

cat_success_cnt: 2

cat_success_rate: 0.05405405405405406

