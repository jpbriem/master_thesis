
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', 'b', 'b', 'b', 'b', '.', '.', 'd', '.']
output: ['.', 'b', 'b', 'b', 'b', 'b', 'b', 'd', '.']

Example_2:
input: ['.', '.', 'h', 'h', 'h', '.', '.', 'd', '.']
output: ['.', '.', 'h', 'h', 'h', 'h', 'h', 'd', '.']

Example_3:
input: ['h', 'h', 'h', 'h', 'h', '.', '.', 'd', '.']
output: ['h', 'h', 'h', 'h', 'h', 'h', 'h', 'd', '.']

Test case:
input: ['c', 'c', 'c', 'c', 'c', '.', '.', 'd', '.']

###########################################################
Sample Outputs:
output: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', '.']
*/

public class Solution {
    public String[] extend(String[] arr) {
        if (arr == null || arr.length <= 0) return new String[0];
        int len = arr.length;
        for (int i = len - 1; i > 0 && ".".equals(arr[i]); i--) {
            arr[i] = arr[i-1];
        }
        arr[0] = ".";
        String[] result = new String[len + 1];
        System.arraycopy(arr, 0, result, 0, len);
        return result;
    }
}


###########################################################
Result:
solution: ['c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', '.']

success: 1

too_long_prompt: False

tries: 1

success_rate: 0.21444444444444444

cat_success_cnt: 24

cat_success_rate: 0.48

