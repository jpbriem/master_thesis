
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: ['.', '.', '.', 'f', 'f', 'f', 'f', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'f', 'f', 'f', 'f', '.']

Example_2:
input: ['.', '.', '.', 'g', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.']

Example_3:
input: ['.', '.', '.', 'd', 'd', 'd', 'd', '.', 'i', '.', '.', '.', '.', '.', '.']
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'd', 'd', 'd', 'd', '.']

Test case:
input: ['.', '.', 'g', 'g', 'g', 'g', '.', 'i', '.', '.', '.', '.', '.', '.', '.']

###########################################################
Sample Outputs:
output: ['.', '.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.']
*/

public class Solution {
    public String pushDominoes(String dominoes) {
        int len = dominoes.length();
        char[] arr = new char[len];
        for (int i = 0; i < len; ++i) {
            if (dominoes.charAt(i) == '.' || dominoes.charAt(i) == 'R') {
                arr[i] = 'R';
            } else {
                arr[i] = 'L';
            }
        }
        // System.out.println(Arrays.toString(arr));
        for (int i = 0, j = 0; i < len && j < len; ) {
            while (j < len && arr[j]!= 'L') {
                ++j;
            }
            if (j >= len) break;
            int k = j - 1;
            while (k > i && arr[k] == 'R') --k;
            if (k <= i) continue;
            int dist = j - k - 1;
            for (int l = 0; l < dist / 2; ++l) {
                arr[k + 1 + l] = 'R';
                arr[j - l] = 'L';
            }
            if (dist % 2 == 1) {
                arr[k + dist/2 + 1] = 'R';
            }
            i = j + 1;
            // System.out.println(Arrays.toString(arr));
        }
        StringBuilder sb = new StringBuilder();
        for (char c : arr) {
            sb.append(c);
        }
        return sb.toString();
    }
}


###########################################################
Result:
solution: ['.', '.', '.', '.', '.', '.', '.', 'i', '.', 'g', 'g', 'g', 'g', '.', '.']

success: 0

too_long_prompt: False

tries: 1

success_rate: 0.30434782608695654

cat_success_cnt: 3

cat_success_rate: 0.11538461538461539

