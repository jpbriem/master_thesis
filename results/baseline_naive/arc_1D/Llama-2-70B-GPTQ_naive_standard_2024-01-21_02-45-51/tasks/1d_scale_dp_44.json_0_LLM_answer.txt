Input token: 208
Output token: 326
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [7, 7, 7, 0, 0, 4, 0]
output: [7, 7, 7, 7, 7, 4, 0]

Example_2:
input: [3, 3, 3, 0, 0, 4, 0]
output: [3, 3, 3, 3, 3, 4, 0]

Example_3:
input: [8, 8, 8, 0, 0, 0, 4]
output: [8, 8, 8, 8, 8, 8, 4]

Test case:
input: [5, 5, 5, 0, 0, 4, 0]
################################################################

LLM answer:

output: [5, 5, 5, 5, 5, 4, 0]
"""

# @lc code=start
class Solution(object):
    def wiggleSort(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        if len(nums) <= 1 or nums[-1] == 0:
            return
        
        i = j = k = 0
        while True:
            # find first nonzero number from left to right
            while i < len(nums)-1 and nums[i+1] == 0:
                i += 1
            
            # find last nonzero number from right to left
            while j > 0 and nums[j-1] == 0:
                j -= 1
                
            # swap two numbers
            if i!= j:
                nums[i], nums[j] = nums[j], nums[i]
                
            # move forward
            i += 1
            j -= 1
            
            # check whether all elements have been processed
            if i >= j:
                break
    
        for i in range(len(nums)):
            print(nums[i])
# @lc code=end

################################################################

Solution:
[5, 5, 5, 5, 5, 4, 0]

