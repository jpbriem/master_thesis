Input token: 439
Output token: 275
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 9, 0]
output: [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 0]

Example_2:
input: [0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 9, 0]
output: [0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 0]

Example_3:
input: [0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 9, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 9, 0, 0, 0, 0, 0]

Test case:
input: [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 9, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 0, 0, 0, 0, 0, 0]
"""

import unittest
from typing import List
# @lc appveyor:python3
class Solution:
    def wiggleSort(self, nums: List[int]) -> List[int]:
        if not nums or len(nums) <= 1: return nums
        
        left = right = 0
        for i in range(len(nums)):
            if nums[i] == 0: continue
            
            while left < right and nums[left] > nums[right]:
                nums[left], nums[right] = nums[right], nums[left]
                left += 1
                right -= 1
                
            nums[left], nums[i] = nums[i], nums[left]
            left += 1
    
        return nums

if __name__ == "__main__":
    unittest.main()
################################################################

Solution:
[0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 0, 0, 0, 0, 0, 0]

