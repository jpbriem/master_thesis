Input token: 313
Output token: 497
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]

Example_2:
input: [8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 8, 8, 8, 8, 8, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0]

Test case:
input: [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

expected output: [0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0]
"""

# Solution
class Solution(object):
    def rotate(self, A):
        """
        :type A: List[int]
        :rtype: void Do not return anything, modify A in-place instead.
        """
        
        # initialize variables
        n = len(A)
        start = end = 0
        
        # find first nonzero element
        while (start < n - 1) and (A[start] == 0):
            start += 1
            
        # find last nonzero element
        while (end < n - 1) and (A[n - 1 - end] == 0):
            end += 1
        
        # reverse elements between start and end
        for i in range(start, end + 1):
            temp = A[i]
            A[i] = A[n - 1 - i]
            A[n - 1 - i] = temp
                    
        # reverse elements from start to end
        for i in range(start, end + 1):
            temp = A[i]
            A[i] = A[end - start + i]
            A[end - start + i] = temp
        
        # reverse elements from start to end
        for i in range(start, end + 1):
            temp = A[i]
            A[i] = A[start + end - i]
            A[start + end - i] = temp
        
        # reverse elements from start to end
        for i in range(start, end + 1):
            temp = A[i]
            A[i] = A[start + i]
            A[start + i] = temp

# main function
def main():
    solution = Solution()
    print("Input:", A)
    solution.rotate(A)
    print("Output:", A)

if __name__ == "__main__":
    main()
################################################################

Solution:
[0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0]

