Input token: 250
Output token: 281
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 3, 3, 3, 3, 0, 0, 2, 0]
output: [0, 3, 3, 3, 3, 3, 3, 2, 0]

Example_2:
input: [6, 6, 6, 6, 6, 0, 0, 0, 2]
output: [6, 6, 6, 6, 6, 6, 6, 6, 2]

Example_3:
input: [0, 1, 1, 1, 1, 0, 0, 0, 2]
output: [0, 1, 1, 1, 1, 1, 1, 1, 2]

Test case:
input: [7, 7, 7, 7, 0, 0, 0, 0, 2]
################################################################

LLM answer:

output: [7, 7, 7, 7, 7, 7, 7, 7, 2]
"""

# @lc code=start
class Solution(object):
    def transformToHighestMountain(self, A):
        """
        :type A: List[int]
        :rtype: List[int]
        """
        
        # initialize variables
        n = len(A)
        left = right = 0
        max_val = -sys.maxsize
        for i in range(n):
            if A[i] > max_val:
                max_val = A[i]
                
        # find first nonzero element from left to right
        while (left < n) and (A[left] == 0):
            left += 1
            
        # find last nonzero element from right to left
        while (right < n) and (A[right] == 0):
            right -= 1
            
        # fill up with maximum value
        for i in range(left, right+1):
            A[i] = max_val
            
        return A
    
# @lc code=end

################################################################

Solution:
[7, 7, 7, 7, 7, 7, 7, 7, 2]

