Input token: 313
Output token: 488
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]

Example_2:
input: [0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0]
output: [0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0]

Example_3:
input: [4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0]
output: [0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0]

Test case:
input: [0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

expected output: [0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0]
"""

# Solution
class Solution(object):
    def rotate(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        # initialize variables
        n = len(nums)
        start = end = 0
        
        # find first nonzero element
        while (start < n - 1) and (nums[start] == 0):
            start += 1
            
        # find last nonzero element
        while (end < n - 1) and (nums[n - 1 - end] == 0):
            end += 1
        
        # reverse elements between start and end
        for i in range(start, end + 1):
            j = end - i
            temp = nums[i]
            nums[i] = nums[j]
            nums[j] = temp
    
    def rotate(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        # initialize variables
        n = len(nums)
        start = end = 0
        
        # find first nonzero element
        while (start < n - 1) and (nums[start] == 0):
            start += 1
            
        # find last nonzero element
        while (end < n - 1) and (nums[n - 1 - end] == 0):
            end += 1
        
        # reverse elements between start and end
        for i in range(start, end + 1):
            j = end - i
            temp = nums[i]
            nums[i] = nums[j]
            nums[j] = temp

################################################################

Solution:
[0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0]

