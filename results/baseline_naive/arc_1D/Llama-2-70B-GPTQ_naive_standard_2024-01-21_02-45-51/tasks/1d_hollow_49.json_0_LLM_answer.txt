Input token: 271
Output token: 252
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 5, 5, 5, 5, 0, 0, 0, 0, 0]
output: [0, 5, 0, 0, 5, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 3, 3, 3, 3, 0, 0, 0, 0]
output: [0, 0, 3, 0, 0, 3, 0, 0, 0, 0]

Example_3:
input: [7, 7, 7, 7, 7, 0, 0, 0, 0, 0]
output: [7, 0, 0, 0, 7, 0, 0, 0, 0, 0]

Test case:
input: [0, 4, 4, 4, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

expected output: [0, 4, 0, 0, 4, 0, 0, 0, 0, 0]
"""

# Solution
class Solution(object):
    def wiggleSort(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        # initialize variables
        i = j = k = 0
        n = len(nums)
        
        while (i < n - 1) and (j < n - 1):
            if nums[i] > nums[j]:
                nums[k], nums[i] = nums[i], nums[k]
                
                i += 1
                k += 1
            
            elif nums[i] == nums[j]:
                i += 1
                j += 1
                k += 1
            
            else:
                j -= 1
    
        return nums

################################################################

Solution:
[0, 4, 0, 4, 0, 0, 0, 0, 0, 0]

