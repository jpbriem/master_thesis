Input token: 250
Output token: 318
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 2, 2, 2, 2, 0, 0, 4, 0]
output: [0, 2, 2, 2, 2, 2, 2, 4, 0]

Example_2:
input: [0, 0, 8, 8, 8, 0, 0, 4, 0]
output: [0, 0, 8, 8, 8, 8, 8, 4, 0]

Example_3:
input: [8, 8, 8, 8, 8, 0, 0, 4, 0]
output: [8, 8, 8, 8, 8, 8, 8, 4, 0]

Test case:
input: [3, 3, 3, 3, 3, 0, 0, 4, 0]
################################################################

LLM answer:

output: [3, 3, 3, 3, 3, 3, 3, 4, 0]
"""

# @lc code=start
class Solution(object):
    def transformToHighestMountain(self, A):
        """
        :type A: List[int]
        :rtype: List[int]
        """
        
        # Runtime: 56 ms
        # Memory: 17 MB
        return self._transformToHighestMountain(A)
    
    def _transformToHighestMountain(self, A):
        """
        Time complexity: O(n).
        Space complexity: O(1).
        """
        if not A or len(A) == 1:
            return A
            
        left = right = 0
        for i in range(len(A)):
            if A[i]:
                while left < i - 1 and A[left + 1]:
                    left += 1
                while right > i + 1 and A[right - 1]:
                    right -= 1
                if left >= right:
                    A[i] = max(A[i], A[left])
                else:
                    A[i] = min(A[i], A[right])
        return A
# @lc code=end
################################################################

Solution:
[3, 3, 3, 3, 3, 3, 3, 4, 0]

