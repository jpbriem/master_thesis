Input token: 544
Output token: 254
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0]
output: [0, 0, 0, 5, 5, 5, 5, 0, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 5, 5, 5, 5, 0]

Example_2:
input: [0, 0, 2, 2, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2]
output: [0, 0, 2, 2, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 5, 5, 5, 5, 5]

Example_3:
input: [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0]
output: [0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0]

Test case:
input: [0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2]
################################################################

LLM answer:

output: [0, 2, 2, 2, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 2, 2, 2]

Constraints:
1 <= A.length <= 10^5
0 <= A[i] <= 9
*/
class Solution {
public:
    vector<int> sortArrayByParityII(vector<int>& nums) {
        int n = nums.size();
        if (n == 0 || n == 1) return nums;
        int i = 0, j = 1;
        while (j < n && i < n) {
            if ((nums[i] & 1)!= 0) ++i;
            else if ((nums[j] & 1) == 0) ++j;
            else swap(nums[i], nums[j]);
        }
        return nums;
    }
};
################################################################

Solution:
[0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 2, 2, 2]

