Input token: 313
Output token: 213
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]

Example_2:
input: [0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0]
output: [0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0]

Example_3:
input: [4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0]
output: [0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0]

Test case:
input: [0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0]
 */
public class Solution {
    public int[] sortArrayByParityII(int[] A) {
        if (A == null || A.length < 2) return A;
        int i = 0;
        for (int j = 1; j < A.length; j += 2) {
            while (i < j && A[i] % 2!= 0) i++;
            swap(A, i++, j);
        }
        return A;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
################################################################

Solution:
[0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0]

