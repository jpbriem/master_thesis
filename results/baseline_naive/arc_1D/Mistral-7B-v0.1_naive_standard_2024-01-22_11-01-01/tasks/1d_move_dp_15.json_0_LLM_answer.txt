Input token: 313
Output token: 186
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 7]
output: [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 7]

Example_2:
input: [8, 8, 8, 8, 8, 0, 0, 0, 7, 0, 0, 0]
output: [0, 0, 0, 8, 8, 8, 8, 8, 7, 0, 0, 0]

Example_3:
input: [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 7, 0]
output: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 7, 0]

Test case:
input: [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 7, 0]
################################################################

LLM answer:

output: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0]

Constraints:
1 <= arr.length <= 10^5
arr[i] == 0 or arr[i] == 7
 */
public class Solution {
    public int[] replaceElements(int[] arr) {
        if (arr.length < 2) return new int[]{};
        int max = Integer.MIN_VALUE;
        for (int i = arr.length - 1; i >= 0; --i) {
            int temp = arr[i];
            arr[i] = max;
            max = Math.max(temp, max);
        }
        return arr;
    }
}
################################################################

Solution:
[0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 7, 0]

