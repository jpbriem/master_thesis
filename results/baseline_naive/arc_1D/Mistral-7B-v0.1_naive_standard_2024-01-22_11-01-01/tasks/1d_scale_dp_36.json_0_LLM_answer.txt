Input token: 376
Output token: 297
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 7, 0]
output: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 0]

Example_2:
input: [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 7]
output: [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 7]

Example_3:
input: [0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 7, 0, 0]
output: [0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 0, 0]

Test case:
input: [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0]
################################################################

LLM answer:

output: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 0, 0, 0, 0]
 */
public class ReplaceZeroesWithMaximumNumber {
    public static void main(String[] args) {
        int[] arr = new int[]{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 7, 0};
        replaceZerosWithMaximumNumber(arr);
        for (int i : arr) {
            System.out.print(i + " ");
        }
    }

    private static void replaceZerosWithMaximumNumber(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 0) {
                arr[i] = max;
            }
        }
    }
}
################################################################

Solution:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 0, 0, 0, 0]

