Input token: 313
Output token: 249
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]
output: [0, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0]

Example_3:
input: [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0]

Test case:
input: [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0]
 */
public class FlipBits {
    public static void main(String[] args) {
        int[] arr = new int[]{4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0};
        System.out.println(flipBitPattern(arr));
    }

    private static String flipBitPattern(int[] arr) {
        Set<Integer> set = new HashSet<>();
        for (int i : arr) {
            set.add(i);
        }
        if (set.size()!= 2) return "NO";
        int xor = 0;
        for (int i : arr) {
            xor ^= i;
        }
        return Integer.toBinaryString(xor).length() == 1? "YES" : "NO";
    }
}
################################################################

Solution:
[0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0]

