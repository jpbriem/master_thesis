Input token: 355
Output token: 277
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0]
output: [5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0]
output: [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0]

Example_3:
input: [0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0]
*/
class Solution {
public:
    vector<int> replaceZeroes(vector<int>& arr) {
        int n = arr.size();
        for (int i=0;i<n;++i){
            if (arr[i] == 0){
                for (int j=i+1;j<n;++j){
                    arr[j] = -1;
                }
                break;
            }
        }
        int count = 0;
        for (int i=0;i<n;++i){
            if (arr[i]!= -1){
                ++count;
            }
        }
        vector<int> ans(count);
        int index = 0;
        for (int i=0;i<n;++i){
            if (arr[i]!= -1){
                ans[index++] = arr[i];
            }
        }
        return ans;
    }
};
################################################################

Solution:
[0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0]

