Input token: 523
Output token: 318
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 7, 7, 0, 7, 7, 7, 0, 0, 0, 7, 0, 0, 0, 7, 7, 7, 0, 0, 7, 7]
output: [0, 0, 5, 5, 0, 2, 2, 2, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 0, 0, 5, 5]

Example_2:
input: [0, 7, 0, 0, 0, 7, 7, 7, 0, 0, 0, 7, 7, 0, 0, 0, 7, 7, 0, 7, 0, 0]
output: [0, 1, 0, 0, 0, 2, 2, 2, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 1, 0, 0]

Example_3:
input: [0, 0, 7, 7, 7, 0, 7, 7, 0, 0, 7, 0, 7, 0, 0, 0, 7, 7, 7, 0, 0, 0]
output: [0, 0, 2, 2, 2, 0, 5, 5, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 2, 0, 0, 0]

Test case:
input: [0, 7, 7, 7, 0, 7, 7, 0, 0, 0, 7, 0, 0, 0, 7, 7, 0, 7, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 1, 2, 2, 0, 5, 5, 0, 0, 0, 1, 0, 0, 0, 5, 5, 0, 1, 0, 0, 0, 0]

Constraints:
1 <= A.length <= 10^4
A[i] == 0 or A[i] == 7
*/
class Solution {
public:
    vector<int> sortTransformedArray(vector<int>& nums, int a, int b, int c) {
        if (a > 0 && b < 0 || a < 0 && b > 0) return nums;
        int n = nums.size();
        vector<int> ans(n);
        for (int i = 0; i < n; ++i) {
            double x = nums[i];
            double y = sqrt((double)(x * x + 4 * a * b));
            double z = -b / 2.0 / a;
            if (y >= z) {
                ans[i] = (int)((z - x) / a);
            } else {
                ans[i] = (int)((y - x) / a);
            }
        }
        return ans;
    }
};
################################################################

Solution:
[0, 2, 2, 2, 0, 5, 5, 0, 0, 0, 1, 0, 0, 0, 5, 5, 0, 1, 0, 0, 0, 0]

