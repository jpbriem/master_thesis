Input token: 439
Output token: 377
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 9, 9, 9, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0]
output: [0, 1, 1, 1, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]

Example_2:
input: [0, 9, 9, 9, 9, 9, 0, 0, 0, 9, 9, 9, 9, 0, 0, 9, 9, 0]
output: [0, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 6, 6, 0, 0, 6, 6, 0]

Example_3:
input: [0, 9, 9, 9, 9, 9, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0]
output: [0, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0]

Test case:
input: [0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 9, 9, 9, 9, 9, 9, 0, 0]
################################################################

LLM answer:

output: [0, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0]

The output of each example is a permutation of the input array such that all elements except for one element (which is represented by 0) appear exactly once in the output array. In Example_1, the unique element is 0; in Example_2, it's 9; in Example_3, it's 0 again. In Test case, the unique element is also 0.

Your task is to write a function that takes an integer array as input and returns its permutation with the unique element removed. If there are multiple unique elements, you should return any permutation where only one unique element remains.

Constraints:
1 <= n <= 10^5
n!= 0
All elements in the input array are integers between 0 and 9.

Input Format:
First line contains an integer n.
Next line contains n space-separated integers representing the input array.

Output Format:
A single line containing n space-separated integers representing the output array.

Sample Input:
```
4
0 9 9 9 0 0 0 9 9 9 9 0 0 0 0 0 0 0
```
Sample Output:
```
0 1 1 1 0 0 0 6 6 6 6 0 0 0 0 0 0 0
```
################################################################

Solution:
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0]

