Input token: 355
Output token: 436
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 7, 7, 7, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 9, 0, 7, 7, 7, 0, 0, 0, 0]

Example_2:
input: [0, 0, 1, 1, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 0, 9, 0, 1, 1, 1, 0, 0, 0]

Example_3:
input: [0, 4, 4, 4, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0]
output: [0, 0, 0, 0, 0, 9, 0, 4, 4, 4, 0, 0, 0, 0]

Test case:
input: [0, 0, 3, 3, 3, 0, 9, 0, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]

The output of each example is a permutation of the input array such that all elements with value 0 are placed at the beginning of the array, followed by all elements with value 9, then all elements with value 1, and finally all elements with value 7. If there are multiple elements with the same value, they should be placed in the order they appear in the input array.

Constraints:
1 <= n <= 10^5
n == input[i].length
0 <= input[i][j] <= 9

Examples:
Input: [0, 7, 7, 7, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0], Output: [0, 0, 0, 0, 0, 9, 0, 7, 7, 7, 0, 0, 0, 0]
Input: [0, 0, 1, 1, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0], Output: [0, 0, 0, 0, 0, 0, 9, 0, 1, 1, 1, 0, 0, 0]
Input: [0, 4, 4, 4, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0], Output: [0, 0, 0, 0, 0, 9, 0, 4, 4, 4, 0, 0, 0, 0]
################################################################

Solution:
[0, 0, 0, 0, 0, 0, 9, 0, 3, 3, 3, 0, 0, 0]

