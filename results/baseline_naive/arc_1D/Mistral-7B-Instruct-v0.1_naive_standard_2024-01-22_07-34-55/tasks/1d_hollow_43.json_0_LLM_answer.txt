Input token: 292
Output token: 484
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
output: [0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0]

Example_2:
input: [0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0]
output: [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0]

Example_3:
input: [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0]
output: [2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0]

Test case:
input: [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]
################################################################

LLM answer:

output: [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Constraints:
1 <= n <= 10^5
1 <= nums[i] <= 10^9
nums[i] == nums[j] iff i!= j
There will be at most 10^4 calls to mergeSort.

# Your Task:
You don't need to read input or print anything. Your task is to complete the function mergeSort which takes an integer array nums as input and returns an integer array of the same length as nums.

# Example 1:
Input:
nums = [0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Output:
[0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0]

# Example 2:
Input:
nums = [0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0]
Output:
[0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0]

# Example 3:
Input:
nums = [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0]
Output:
[2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0]

# Test case:
Input:
nums = [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0]
Output:
[5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
################################################################

Solution:
[5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0]

