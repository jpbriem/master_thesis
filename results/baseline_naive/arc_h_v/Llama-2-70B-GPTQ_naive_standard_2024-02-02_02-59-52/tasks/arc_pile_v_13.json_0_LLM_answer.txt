Input token: 465
Output token: 289
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['d', 'a', 'e', 'a', 'a'], ['a', 'a', 'e', 'a', 'a'], ['a', 'g', 'a', 'a', 'a'], ['d', 'g', 'e', 'a', 'b'], ['a', 'a', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'e', 'a', 'a'], ['d', 'g', 'e', 'a', 'a'], ['d', 'g', 'e', 'a', 'b']]

Example_2:
input: [['e', 'd', 'a', 'g'], ['a', 'a', 'a', 'a'], ['a', 'd', 'a', 'g'], ['e', 'd', 'a', 'a']]
output: [['a', 'a', 'a', 'a'], ['a', 'd', 'a', 'a'], ['e', 'd', 'a', 'g'], ['e', 'd', 'a', 'g']]

Example_3:
input: [['a', 'a', 'i', 'b'], ['d', 'g', 'i', 'b'], ['d', 'g', 'a', 'a'], ['d', 'a', 'i', 'b']]
output: [['a', 'a', 'a', 'a'], ['d', 'a', 'i', 'b'], ['d', 'g', 'i', 'b'], ['d', 'g', 'i', 'b']]

Test case:
input: [['g', 'a', 'a', 'c'], ['a', 'f', 'b', 'a'], ['g', 'a', 'a', 'a'], ['a', 'a', 'a', 'c']]
################################################################

LLM answer:

output: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a']]
"""

import collections
from typing import List, Tuple


class Solution(object):
    def groupAnagrams(self, strs: List[List[str]]) -> List[List[str]]:
        """
        1. sort each string in list of strings
        2. compare sorted strings to find anagram groups
        :param strs:
        :return:
        """
        if not strs or len(strs) == 0:
            return []

        # create a dictionary with key as sorted string value and value as list of original strings
        d = {}
        for s in strs:
            k = "".join(sorted(s))
            if k in d:
                d[k].append(s)
            else:
                d[k] = [s]

        # convert back to list of lists
        res = []
        for v in d.values():
            res += [[x for x in y] for y in zip(*v)]
        return res

################################################################

Solution:
[['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['g', 'a', 'a', 'c'], ['g', 'f', 'b', 'c']]

