Input token: 478
Output token: 320
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 3, 0, 3, 3], [0, 0, 0, 0, 0], [0, 0, 0, 4, 4], [6, 0, 0, 0, 0], [0, 2, 0, 2, 0]]
output: [[3, 3, 3, 0, 0], [0, 0, 0, 0, 0], [4, 4, 0, 0, 0], [6, 0, 0, 0, 0], [2, 2, 0, 0, 0]]

Example_2:
input: [[0, 1, 1, 1], [9, 0, 0, 9], [0, 4, 0, 0], [0, 2, 0, 0]]
output: [[1, 1, 1, 0], [9, 9, 0, 0], [4, 0, 0, 0], [2, 0, 0, 0]]

Example_3:
input: [[3, 0, 3, 3], [6, 6, 0, 0], [8, 8, 0, 8], [0, 0, 4, 0]]
output: [[3, 3, 3, 0], [6, 6, 0, 0], [8, 8, 8, 0], [4, 0, 0, 0]]

Test case:
input: [[0, 0, 0, 7, 7], [0, 0, 9, 0, 9], [0, 1, 0, 0, 0], [0, 5, 5, 0, 0], [0, 0, 8, 0, 8]]
################################################################

LLM answer:

output: [[0, 0, 7, 7, 7], [0, 0, 9, 9, 9], [0, 1, 0, 0, 0], [0, 5, 5, 0, 0], [0, 0, 8, 8, 8]]
"""
from typing import List
class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int) -> List[List[int]]:
        if not image or len(image) == 0 or len(image[0]) == 0: return []
        
        def dfs(i, j):
            if i < 0 or i >= m or j < 0 or j >= n or image[i][j]!= color:
                return False
            
            image[i][j] = color
            dfs(i - 1, j)
            dfs(i + 1, j)
            dfs(i, j - 1)
            dfs(i, j + 1)
                    
        m, n = len(image), len(image[0])
        for i in range(m):
            for j in range(n):
                if image[i][j] == color:
                    dfs(i, j)
        return image
################################################################

Solution:
[[7, 7, 0, 0, 0], [9, 9, 0, 0, 0], [1, 0, 0, 0, 0], [5, 5, 0, 0, 0], [8, 8, 0, 0, 0]]

