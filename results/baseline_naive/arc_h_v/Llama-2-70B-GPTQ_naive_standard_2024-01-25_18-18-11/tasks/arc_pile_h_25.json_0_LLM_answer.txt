Input token: 397
Output token: 532
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 0], [0, 5, 0, 5], [1, 0, 1, 0], [8, 0, 0, 0]]
output: [[0, 0, 0, 0], [5, 5, 0, 0], [1, 1, 0, 0], [8, 0, 0, 0]]

Example_2:
input: [[0, 0, 9, 0], [0, 1, 0, 0], [0, 0, 0, 0], [2, 0, 0, 0]]
output: [[9, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [2, 0, 0, 0]]

Example_3:
input: [[0, 3, 3, 0], [8, 8, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
output: [[3, 3, 0, 0], [8, 8, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Test case:
input: [[5, 0, 0, 5], [7, 7, 0, 7], [0, 2, 0, 0], [3, 3, 3, 0]]
################################################################

LLM answer:

output: [[5, 0, 0, 5], [7, 7, 0, 7], [2, 2, 0, 0], [3, 3, 3, 0]]
"""
# Definition for a point.
class Point(object):
    def __init__(self, x=None, y=None):
        self.x = x
        self.y = y

def spiralMatrix(matrix):
    """
    :type matrix: List[List[int]]
    :rtype: List[List[int]]
    """
    # Write your code here
    if not matrix or len(matrix) == 0: return []
    
    m = len(matrix)
    n = len(matrix[0])
    result = [[0] * (n + 4)] * (m + 4)
    i, j = 0, 0
    while True:
        for k in range(i - 1, i + 2):
            result[k][j] = matrix[k][j]
            
        for l in range(j - 1, j + 2):
            result[i][l] = matrix[i][l]
        
        if i > 0 and j < n - 1:
            result[i][j+1] = matrix[i][j+1]
        elif i <= 0 and j >= n - 1:
            result[i][j-1] = matrix[i][j-1]
        
        if i < m - 1 and j > 0:
            result[i+1][j] = matrix[i+1][j]
        elif i >= m - 1 and j <= 0:
            result[i-1][j] = matrix[i-1][j]
        
        if i > 0 and j > 0:
            result[i-1][j-1] = matrix[i-1][j-1]
        elif i <= 0 and j <= 0:
            result[i+1][j+1] = matrix[i+1][j+1]
        
        i += 1
        j -= 1
        if i > m - 1 or j < 0: break
    return result
################################################################

Solution:
[[5, 5, 0, 0], [7, 7, 7, 0], [2, 0, 0, 0], [3, 3, 3, 0]]

