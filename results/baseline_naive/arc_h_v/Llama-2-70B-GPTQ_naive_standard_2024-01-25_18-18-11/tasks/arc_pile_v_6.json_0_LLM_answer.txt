Input token: 478
Output token: 356
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 0], [0, 0, 0, 7], [6, 0, 8, 0], [0, 0, 0, 7]]
output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 7], [6, 0, 8, 7]]

Example_2:
input: [[0, 0, 0, 0, 4], [0, 8, 9, 0, 4], [0, 8, 9, 0, 0], [0, 8, 0, 0, 4], [0, 0, 0, 6, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 8, 0, 0, 4], [0, 8, 9, 0, 4], [0, 8, 9, 6, 4]]

Example_3:
input: [[0, 0, 6, 0], [4, 0, 0, 5], [4, 0, 6, 5], [0, 0, 6, 0]]
output: [[0, 0, 0, 0], [0, 0, 6, 0], [4, 0, 6, 5], [4, 0, 6, 5]]

Test case:
input: [[4, 0, 7, 9, 0], [4, 0, 0, 0, 8], [4, 6, 7, 0, 0], [0, 0, 0, 9, 8], [0, 0, 0, 9, 0]]
################################################################

LLM answer:

output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
"""
from typing import List
class Solution:
    def updateMatrix(self, matrix: List[List[int]]) -> List[List[int]]:
        if not matrix or not len(matrix): return []
        
        m = len(matrix)
        n = len(matrix[0])
        dp = [[float('inf') for _ in range(n)] for __ in range(m)]
        for i in range(m):
            for j in range(n):
                if matrix[i][j] == 0: continue
                
                dp[i][j] = float('inf')
                for k in [-1, 0, 1]:
                    for l in [-1, 0, 1]:
                        if (k!= 0 or l!= 0) and \
                           ((i+k >= 0 and i+k < m) and (j+l >= 0 and j+l < n)):
                            
                            dp[i][j] = min(dp[i][j], dp[i+k][j+l]+abs(matrix[i][j] - matrix[i+k][j+l]))
        return dp
################################################################

Solution:
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [4, 0, 0, 9, 0], [4, 0, 7, 9, 8], [4, 6, 7, 9, 8]]

