Input token: 478
Output token: 448
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 7], [0, 0, 0, 0], [2, 0, 2, 0], [0, 9, 9, 9]]
output: [[7, 0, 0, 0], [0, 0, 0, 0], [2, 2, 0, 0], [9, 9, 9, 0]]

Example_2:
input: [[0, 0, 0, 0], [4, 4, 0, 4], [0, 0, 0, 0], [0, 0, 0, 0]]
output: [[0, 0, 0, 0], [4, 4, 4, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Example_3:
input: [[0, 8, 8, 8, 0], [0, 0, 2, 0, 2], [0, 0, 0, 0, 0], [9, 0, 9, 9, 0], [0, 0, 4, 4, 4]]
output: [[8, 8, 8, 0, 0], [2, 2, 0, 0, 0], [0, 0, 0, 0, 0], [9, 9, 9, 0, 0], [4, 4, 4, 0, 0]]

Test case:
input: [[0, 0, 7, 0, 7], [4, 0, 4, 4, 0], [0, 0, 2, 0, 2], [5, 5, 0, 0, 5], [6, 0, 6, 0, 0]]
################################################################

LLM answer:

output: [[7, 0, 7, 0, 0], [4, 4, 4, 0, 0], [2, 2, 0, 0, 0], [5, 5, 5, 0, 0], [6, 0, 6, 0, 0]]
"""
from typing import List
class Solution:
    def rotate(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        
        Time complexity: O(n^2) where n is the number of rows/columns in the matrix.
        Space complexity: O(1).
        """
        # iterate through each row to get the max value for that row
        for i in range(len(matrix)):
            max_value = -float('inf')
            
            # iterate through each column to find the maximum value
            for j in range(len(matrix[i])):
                if matrix[i][j] > max_value:
                    max_value = matrix[i][j]
            
            # store the index of the maximum value
            max_index = len(matrix[i]) - 1 - (max_value % 10)
            
            # swap values with the first element in the row
            temp = matrix[i][0]
            matrix[i][0] = matrix[i][max_index]
            matrix[i][max_index] = temp
    
        # reverse each row
        for i in range(len(matrix)):
            matrix[i].reverse()
        
        # reverse each column
        for i in range(len(matrix[0])):
            for j in range(len(matrix)-1):
                temp = matrix[j][i]
                matrix[j][i] = matrix[-1-j][i]
                matrix[-1-j][i] = temp
################################################################

Solution:
[[7, 7, 0, 0, 0], [4, 4, 4, 0, 0], [2, 2, 0, 0, 0], [5, 5, 5, 0, 0], [6, 6, 0, 0, 0]]

