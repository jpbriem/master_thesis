Input token: 421
Output token: 115
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', 'f', '.', '.], ['.', '.', '.', '.], ['.', 'h', '.', '.], ['g', '.', 'g', '.']]
output: [['f', '.', '.', '.], ['.', '.', '.', '.], ['h', '.', '.', '.], ['g', 'g', '.', '.']]

Example_2:
input: [['.', '.', '.', '.', '.], ['.', 'h', 'h', 'h', '.], ['.', '.', 'i', 'i', '.], ['f', '.', '.', '.', '.], ['.', 'd', '.', 'd', 'd']]
output: [['.', '.', '.', '.', '.], ['h', 'h', 'h', '.', '.], ['i', 'i', '.', '.', '.], ['f', '.', '.', '.', '.], ['d', 'd', 'd', '.', '.']]

Example_3:
input: [['.', 'd', 'd', '.], ['.', '.', '.', '.], ['f', 'f', '.', 'f], ['.', 'e', 'e', '.']]
output: [['d', 'd', '.', '.], ['.', '.', '.', '.], ['f', 'f', 'f', '.], ['e', 'e', '.', '.']]

Test case:
input: [['.', '.', 'd', 'd', 'd], ['.', '.', 'f', '.', '.], ['.', '.', 'g', '.', 'g], ['i', 'i', '.', '.', 'i], ['.', 'h', '.', 'h', '.']]
################################################################

LLM answer:

output: [['.', '.', 'd', 'd', 'd], ['.', '.', 'f', '.', '.], ['.', '.', 'g', '.', 'g], ['i', 'i', '.', '.', 'i], ['.', 'h', '.', 'h', '.']]
'''

def test_case():
    return Solution().transform(test_case) == expected_result

if __name__ == "__main__":
    assert test_case()
################################################################

Solution:
[['d', 'd', 'd', '.', '.], ['f', '.', '.', '.', '.], ['g', 'g', '.', '.', '.], ['i', 'i', 'i', '.', '.], ['h', 'h', '.', '.', '.']]

