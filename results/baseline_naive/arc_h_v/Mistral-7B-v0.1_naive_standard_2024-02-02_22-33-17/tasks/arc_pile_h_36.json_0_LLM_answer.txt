Input token: 519
Output token: 261
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'g'], ['d', 'd', 'a', 'd', 'a'], ['j', 'j', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['g', 'a', 'a', 'a', 'a'], ['d', 'd', 'd', 'a', 'a'], ['j', 'j', 'a', 'a', 'a']]

Example_2:
input: [['h', 'a', 'h', 'h'], ['f', 'f', 'a', 'a'], ['a', 'i', 'a', 'a'], ['a', 'a', 'e', 'a']]
output: [['h', 'h', 'h', 'a'], ['f', 'f', 'a', 'a'], ['i', 'a', 'a', 'a'], ['e', 'a', 'a', 'a']]

Example_3:
input: [['a', 'a', 'a', 'a', 'a'], ['a', 'c', 'a', 'a', 'a'], ['a', 'e', 'a', 'a', 'a'], ['i', 'i', 'a', 'a', 'i'], ['a', 'd', 'd', 'a', 'd']]
output: [['a', 'a', 'a', 'a', 'a'], ['c', 'a', 'a', 'a', 'a'], ['e', 'a', 'a', 'a', 'a'], ['i', 'i', 'i', 'a', 'a'], ['d', 'd', 'd', 'a', 'a']]

Test case:
input: [['a', 'a', 'a', 'b'], ['a', 'h', 'a', 'a'], ['e', 'e', 'a', 'e'], ['a', 'g', 'a', 'a']]
################################################################

LLM answer:

output: [['a', 'a', 'a', 'b'], ['h', 'a', 'a', 'a'], ['e', 'e', 'e', 'e'], ['g', 'a', 'a', 'a']]
*/
public class Solution {
    public List<List<String>> replaceElements(List<List<String>> A) {
        int n = A.size();
        for (int i=0; i<n; ++i){
            String s = A.get(i).get(A.get(i).size() - 1);
            if (!s.equals("?")){
                char c = s.charAt(0);
                for (int j=0; j<n; ++j){
                    if (i!= j &&!A.get(j).get(A.get(j).size() - 1).equals("?"))
                        A.get(j).set(A.get(j).size() - 1, Character.toString((char)(c + 1)));
                }
            }
        }
        return A;
    }
}
################################################################

Solution:
[['b', 'a', 'a', 'a'], ['h', 'a', 'a', 'a'], ['e', 'e', 'e', 'a'], ['g', 'a', 'a', 'a']]

