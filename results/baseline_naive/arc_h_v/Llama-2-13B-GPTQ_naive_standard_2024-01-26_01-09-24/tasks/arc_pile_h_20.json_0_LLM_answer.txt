Input token: 478
Output token: 349
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 7], [0, 0, 0, 0], [2, 0, 2, 0], [0, 9, 9, 9]]
output: [[7, 0, 0, 0], [0, 0, 0, 0], [2, 2, 0, 0], [9, 9, 9, 0]]

Example_2:
input: [[0, 0, 0, 0], [4, 4, 0, 4], [0, 0, 0, 0], [0, 0, 0, 0]]
output: [[0, 0, 0, 0], [4, 4, 4, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Example_3:
input: [[0, 8, 8, 8, 0], [0, 0, 2, 0, 2], [0, 0, 0, 0, 0], [9, 0, 9, 9, 0], [0, 0, 4, 4, 4]]
output: [[8, 8, 8, 0, 0], [2, 2, 0, 0, 0], [0, 0, 0, 0, 0], [9, 9, 9, 0, 0], [4, 4, 4, 0, 0]]

Test case:
input: [[0, 0, 7, 0, 7], [4, 0, 4, 4, 0], [0, 0, 2, 0, 2], [5, 5, 0, 0, 5], [6, 0, 6, 0, 0]]
################################################################

LLM answer:

output: [[0, 0, 7, 0, 7], [4, 4, 4, 4, 0], [0, 0, 2, 0, 2], [5, 5, 0, 0, 5], [6, 6, 0, 0, 0]]
"""

import unittest
from typing import List

class Solution:
    def rotate(self, matrix: List[List[int]]) -> None:
        """
        Do not write additional code here.
        
        Update your answer in the editor below.
        """
        if len(matrix) == 0 or len(matrix[0]) == 0: return
        n = len(matrix)
        m = len(matrix[0])
        for i in range(n):
            for j in range(m):
                matrix[i][j] += (n - i) * (m - j)

if __name__ == '__main__':
    testcase = [
        [0, 0, 7, 0, 7],
        [4, 0, 4, 4, 0],
        [0, 0, 2, 0, 2],
        [5, 5, 0, 0, 5],
        [6, 0, 6, 0, 0]
    ]
    solution = Solution()
    solution.rotate(testcase)
    print(testcase)
################################################################

Solution:
[[7, 7, 0, 0, 0], [4, 4, 4, 0, 0], [2, 2, 0, 0, 0], [5, 5, 5, 0, 0], [6, 6, 0, 0, 0]]

