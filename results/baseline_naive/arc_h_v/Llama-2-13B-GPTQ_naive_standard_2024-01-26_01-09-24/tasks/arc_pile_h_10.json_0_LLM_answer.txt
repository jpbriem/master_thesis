Input token: 631
Output token: 493
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 8, 0, 0], [0, 4, 4, 4, 0, 0], [0, 0, 0, 1, 0, 0], [0, 3, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 7, 0, 0, 7, 0]]
output: [[8, 0, 0, 0, 0, 0], [4, 4, 4, 0, 0, 0], [1, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 0], [9, 9, 9, 0], [0, 0, 0, 0], [4, 4, 0, 4]]
output: [[0, 0, 0, 0], [9, 9, 9, 0], [0, 0, 0, 0], [4, 4, 4, 0]]

Example_3:
input: [[0, 0, 0, 0, 0], [0, 6, 0, 0, 6], [8, 0, 8, 8, 0], [0, 7, 0, 0, 7], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [6, 6, 0, 0, 0], [8, 8, 8, 0, 0], [7, 7, 0, 0, 0], [0, 0, 0, 0, 0]]

Test case:
input: [[0, 7, 0, 0, 7, 7], [0, 3, 0, 3, 3, 0], [0, 2, 2, 0, 0, 2], [0, 0, 0, 9, 9, 0], [0, 0, 0, 8, 0, 0], [4, 0, 0, 4, 0, 0]]
################################################################

LLM answer:

output: [[0, 7, 0, 0, 7, 7], [0, 3, 0, 3, 3, 0], [0, 2, 2, 0, 0, 2], [0, 0, 0, 9, 9, 0], [0, 0, 0, 8, 0, 0], [4, 4, 0, 4, 0, 0]]
"""

import unittest
from typing import List

class Solution:
    def maxSlidingWindow(self, nums: List[int]) -> List[List[int]]:
        if not nums or len(nums) == 0: return []
        n = len(nums)
        window = []
        for i in range(n):
            if i > 0:
                window.append(max(window[-1], nums[i]))
            else:
                window.append(nums[i])
        return window

class TestCase(unittest.TestCase):
    def test_example_1(self):
        self.assertEqual([8, 0, 0, 0, 0, 0], Solution().maxSlidingWindow([0, 0, 0, 8, 0, 0]))

    def test_example_2(self):
        self.assertEqual([9, 9, 9, 0], Solution().maxSlidingWindow([9, 9, 9, 0]))

    def test_example_3(self):
        self.assertEqual([6, 6, 0, 0, 0], Solution().maxSlidingWindow([0, 6, 0, 0, 6]))

    def test_example_4(self):
        self.assertEqual([0, 0, 0, 9, 9, 0], Solution().maxSlidingWindow([0, 0, 0, 9, 9, 0]))

if __name__ == '__main__':
    unittest.main()
################################################################

Solution:
[[7, 7, 7, 0, 0, 0], [3, 3, 3, 0, 0, 0], [2, 2, 2, 0, 0, 0], [9, 9, 0, 0, 0, 0], [8, 0, 0, 0, 0, 0], [4, 4, 0, 0, 0, 0]]

