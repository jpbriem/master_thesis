
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 6, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 5, 0, 5], [0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0], [3, 0, 0, 3, 0, 0]]
output: [[6, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [5, 5, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [3, 3, 0, 0, 0, 0]]

Example_2:
input: [[3, 3, 3, 0, 0, 0], [5, 0, 0, 0, 0, 0], [0, 2, 2, 2, 0, 0], [0, 0, 7, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 9, 9, 9]]
output: [[3, 3, 3, 0, 0, 0], [5, 0, 0, 0, 0, 0], [2, 2, 2, 0, 0, 0], [7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [9, 9, 9, 0, 0, 0]]

Example_3:
input: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 9, 9, 0]]
output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [9, 9, 0, 0]]

Test case:
input: [[0, 3, 0, 3], [6, 6, 6, 0], [0, 0, 5, 5], [0, 8, 8, 8]]

###########################################################
Sample Outputs:
output: [[3, 3, 0, 0], [6, 6, 6, 0], [0, 5, 5, 0], [0, 8, 8, 8]]
*/

#include <iostream>
using namespace std;

void moveZeroesToEnd(int arr[][6]) {
    int row = 6, col = 6;
    for (int i = 0; i < row && i < col; ++i) {
        if (arr[i][i] == 0) {
            for (int j = i + 1; j < row && j < col; ++j) {
                if (arr[j][i]!= 0) {
                    swap(arr[i][i], arr[j][i]);
                    break;
                }
            }
        }
    }
}

int main() {
    int input[][6] = {{0, 3, 0, 3}, {6, 6, 6, 0}, {0, 0, 5, 5}, {0, 8, 8, 8}};
    moveZeroesToEnd(input);
    cout << "Output :" << endl;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << input[i][j] <<'';
        }
        cout << '\n';
    }
    return 0;
}


###########################################################
Result:
solution: [[3, 3, 0, 0], [6, 6, 6, 0], [5, 5, 0, 0], [8, 8, 8, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03070175438596491

cat_success_cnt: 0

cat_success_rate: 0.0

