
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[5, 0, 0, 0], [0, 0, 0, 0], [0, 7, 7, 7], [8, 0, 8, 0]]
output: [[5, 0, 0, 0], [0, 0, 0, 0], [7, 7, 7, 0], [8, 8, 0, 0]]

Example_2:
input: [[0, 7, 0, 0, 0], [0, 0, 0, 0, 5], [0, 0, 4, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 0, 0]]
output: [[7, 0, 0, 0, 0], [5, 0, 0, 0, 0], [4, 0, 0, 0, 0], [0, 0, 0, 0, 0], [1, 1, 0, 0, 0]]

Example_3:
input: [[0, 0, 0, 0, 0, 9], [0, 4, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 0, 3]]
output: [[9, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [3, 3, 3, 0, 0, 0]]

Test case:
input: [[5, 5, 0, 5], [0, 7, 0, 0], [4, 0, 0, 4], [0, 6, 0, 0]]

###########################################################
Sample Outputs:
output: [[5, 5, 0, 5], [7, 0, 0, 0], [4, 0, 0, 4], [6, 0, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroesToEnd(int arr[][4], int n) {
    for (int i = 0; i < n; ++i) {
        bool flag = false;
        for (int j = 0; j < n - 1; ++j) {
            if (arr[i][j] == 0 && arr[i][j + 1]!= 0) {
                swap(arr[i][j], arr[i][j + 1]);
                flag = true;
            }
        }
        if (!flag) break;
    }
}

int main() {
    int testCases;
    cin >> testCases;
    while (testCases--) {
        int n;
        cin >> n;
        int arr[n][n];
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                cin >> arr[i][j];
            }
        }
        moveZeroesToEnd(arr, n);
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }
    }
    return 0;
}


###########################################################
Result:
solution: [[5, 5, 5, 0], [7, 0, 0, 0], [4, 4, 0, 0], [6, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03317535545023697

cat_success_cnt: 0

cat_success_rate: 0.0

