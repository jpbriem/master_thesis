
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[5, 0, 0, 5, 0, 0], [0, 9, 0, 9, 0, 9], [0, 0, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0], [4, 0, 0, 0, 4, 4], [0, 1, 0, 1, 1, 0]]
output: [[5, 5, 0, 0, 0, 0], [9, 9, 9, 0, 0, 0], [0, 0, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0], [4, 4, 4, 0, 0, 0], [1, 1, 1, 0, 0, 0]]

Example_2:
input: [[0, 4, 0, 0, 0, 4], [0, 5, 0, 0, 5, 0], [0, 0, 0, 6, 6, 0], [0, 0, 0, 0, 7, 0], [0, 0, 0, 2, 0, 0], [0, 1, 1, 1, 0, 0]]
output: [[4, 4, 0, 0, 0, 0], [5, 5, 0, 0, 0, 0], [6, 6, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0]]

Example_3:
input: [[6, 6, 0, 0, 0, 6], [0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1], [7, 0, 0, 0, 0, 0]]
output: [[6, 6, 6, 0, 0, 0], [8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0]]

Test case:
input: [[0, 0, 6, 0, 0, 6], [0, 7, 0, 0, 7, 0], [0, 0, 0, 0, 0, 5], [0, 0, 0, 0, 4, 0], [8, 0, 0, 8, 0, 8], [0, 0, 3, 0, 3, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 6, 0, 0, 6], [7, 7, 7, 0, 7, 7], [0, 0, 0, 0, 0, 5], [0, 0, 0, 0, 4, 0], [8, 8, 8, 0, 8, 8], [3, 3, 3, 0, 3, 3]]
*/

#include <iostream>
using namespace std;

void fill(int** arr, int n, int m) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			if (!arr[i][j]) continue;
			for (int k = 0; k < n; ++k) {
				if (k == i &&!arr[k][j]) arr[k][j] = arr[i][j];
			}
			for (int l = 0; l < m; ++l) {
				if (l == j &&!arr[i][l]) arr[i][l] = arr[i][j];
			}
		}
	}
}

void printArr(int** arr, int n, int m) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
}

int main() {
	int n, m;
	cin >> n >> m;
	int** arr = new int* [n];
	for (int i = 0; i < n; ++i) {
		arr[i] = new int[m];
		for (int j = 0; j < m; ++j) cin >> arr[i][j];
	}
	fill(arr, n, m);
	printArr(arr, n, m);
	return 0;
}


###########################################################
Result:
solution: [[6, 6, 0, 0, 0, 0], [7, 7, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0], [8, 8, 8, 0, 0, 0], [3, 3, 0, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.034482758620689655

cat_success_cnt: 1

cat_success_rate: 0.03125

