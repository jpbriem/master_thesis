{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[7, 0, 0, 7], [0, 0, 0, 0], [0, 0, 0, 0], [0, 9, 9, 9]]\noutput: [[7, 7, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [9, 9, 9, 0]]\n\nExample_2:\ninput: [[0, 5, 5, 5, 0], [2, 0, 0, 2, 2], [0, 0, 0, 0, 6], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\noutput: [[5, 5, 5, 0, 0], [2, 2, 2, 0, 0], [6, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\nExample_3:\ninput: [[9, 9, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [7, 0, 7, 7]]\noutput: [[9, 9, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [7, 7, 7, 0]]\n\nTest case:\ninput: [[0, 1, 0, 0], [0, 0, 0, 9], [0, 0, 7, 7], [0, 0, 6, 0]]\n\n###########################################################\nSample Outputs:\noutput: [[0, 1, 0, 0], [0, 9, 7, 0], [0, 0, 7, 0], [0, 0, 6, 0]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid fill(int** arr, int n) {\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tif (arr[i][j] == -1 && i!= 0 && arr[i-1][j]!= -1) {\n\t\t\t\tarr[i][j] = arr[i-1][j];\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid printArr(int** arr, int n) {\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tcout << arr[i][j] << \" \";\n\t\t}\n\t\tcout << endl;\n\t}\n}\n\nvoid solve(int** arr, int n) {\n\t// top row\n\tfor (int j = 0; j < n; ++j) {\n\t\tif (arr[0][j] > 0) {\n\t\t\tarr[0][j]--;\n\t\t} else if (arr[0][j] == 0) {\n\t\t\tarr[0][j] = -1;\n\t\t}\n\t}\n\n\tfill(arr, n);\n\n\t// bottom row\n\tfor (int j = 0; j < n; ++j) {\n\t\tif (arr[n-1][j] > 0) {\n\t\t\tarr[n-1][j]--;\n\t\t} else if (arr[n-1][j] == 0) {\n\t\t\tarr[n-1][j] = -1;\n\t\t}\n\t}\n\n\tfill(arr, n);\n\n\t// left column\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (arr[i][0] > 0) {\n\t\t\tarr[i][0]--;\n\t\t} else if (arr[i][0] == 0) {\n\t\t\tarr[i][0] = -1;\n\t\t}\n\t}\n\n\tfill(arr, n);\n\n\t// right column\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (arr[i][n-1] > 0) {\n\t\t\tarr[i][n-1]--;\n\t\t} else if (arr[i][n-1] == 0) {\n\t\t\tarr[i][n-1] = -1;\n\t\t}\n\t}\n\n\tfill(arr, n);\n}\n\nint main() {\n\tint t; cin >> t;\n\twhile (t--) {\n\t\tint n; cin >> n;\n\t\tint** arr = new int*[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tarr[i] = new int[n];\n\t\t\tfor (int j = 0; j < n; ++j) {\n\t\t\t\tcin >> arr[i][j];\n\t\t\t}\n\t\t}\n\n\t\tsolve(arr, n);\n\t\tprintArr(arr, n);\n\t}\n\n\treturn 0;\n}"
        }
    ],
    "idx": 244,
    "task": "arc_pile_h_49",
    "category": "pile_h",
    "ys": [
        "arc_pile_h_49.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[1, 0, 0, 0], [9, 0, 0, 0], [7, 7, 0, 0], [6, 0, 0, 0]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.0326530612244898,
        "cat_success_cnt": 1,
        "cat_success_rate": 0.022222222222222223
    },
    "usage_so_far": {
        "completion_tokens": 463984,
        "prompt_tokens": 510685,
        "cost": null
    }
}