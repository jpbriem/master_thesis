
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 2, 2, 0], [7, 0, 7, 0, 0], [0, 0, 0, 9, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [2, 2, 0, 0, 0], [7, 7, 0, 0, 0], [9, 0, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 7, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 0, 0], [0, 8, 8, 8, 0, 0]]
output: [[7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [8, 8, 8, 0, 0, 0]]

Example_3:
input: [[0, 0, 0, 7, 0], [0, 1, 0, 1, 1], [0, 0, 0, 0, 9], [5, 0, 5, 5, 0], [0, 0, 0, 0, 0]]
output: [[7, 0, 0, 0, 0], [1, 1, 1, 0, 0], [9, 0, 0, 0, 0], [5, 5, 5, 0, 0], [0, 0, 0, 0, 0]]

Test case:
input: [[7, 7, 0, 7], [0, 0, 6, 6], [3, 0, 3, 3], [0, 2, 0, 0]]

###########################################################
Sample Outputs:
output: [[7, 7, 0, 0], [0, 0, 6, 6], [3, 3, 3, 0], [2, 0, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroes(int** arr, int nRows, int nCols) {
    for (int i = 0; i < nRows; ++i) {
        bool hasNonZero = false;
        for (int j = 0; j < nCols; ++j) {
            if (arr[i][j]!= 0) {
                swap(arr[i][j], arr[i][hasNonZero? j : nCols - 1]);
                hasNonZero = true;
            }
        }
    }
}

int main() {
    // Test cases
    int input[][5] = {{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 2, 2, 0}, {7, 0, 7, 0, 0}, {0, 0, 0, 9, 0}};
    int input2[][6] = {{0, 0, 0, 7, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 5, 0, 0}, {0, 8, 8, 8, 0, 0}};
    int input3[][5] = {{0, 0, 0, 7, 0}, {0, 1, 0, 1, 1}, {0, 0, 0, 0, 9}, {5, 0, 5, 5, 0}, {0, 0, 0, 0, 0}};
    int input4[][4] = {{7, 7, 0, 7}, {0, 0, 6, 6}, {3, 0, 3, 3}, {0, 2, 0, 0}};

    int **arr = new int*[4];
    for (int i = 0; i < 4; ++i) {
        arr[i] = new int[4];
        for (int j = 0; j < 4; ++j) {
            arr[i][j] = input4[i][j];
        }
    }

    moveZeroes(arr, 4, 4);

    cout << "Output:" << endl;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << arr[i][j] <<'';
        }
        cout << endl;
    }

    return 0;
}


###########################################################
Result:
solution: [[7, 7, 7, 0], [6, 6, 0, 0], [3, 3, 3, 0], [2, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03375527426160337

cat_success_cnt: 1

cat_success_rate: 0.02702702702702703

