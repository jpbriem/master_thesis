
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 3, 3, 3], [9, 9, 0, 0], [0, 2, 0, 0], [0, 0, 0, 0]]
output: [[3, 3, 3, 0], [9, 9, 0, 0], [2, 0, 0, 0], [0, 0, 0, 0]]

Example_2:
input: [[0, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 9, 9], [0, 5, 0, 0, 5, 0], [0, 0, 0, 0, 0, 1]]
output: [[8, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [9, 9, 0, 0, 0, 0], [5, 5, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0]]

Example_3:
input: [[6, 0, 6, 0], [0, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 8]]
output: [[6, 6, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [8, 0, 0, 0]]

Test case:
input: [[0, 0, 8, 0, 8, 0], [1, 0, 0, 1, 0, 0], [0, 6, 6, 6, 0, 0], [7, 0, 7, 0, 0, 0], [0, 2, 0, 2, 0, 0], [0, 0, 3, 0, 0, 3]]

###########################################################
Sample Outputs:
output: [[8, 8, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0], [6, 6, 6, 0, 0, 0], [7, 0, 7, 0, 0, 0], [2, 2, 0, 0, 0, 0], [0, 0, 3, 0, 0, 3]]
*/

#include <iostream>
using namespace std;

void moveZeroesToEnd(int arr[][4]) {
    int row = 4, col = 4;
    for (int i = 0; i < row; ++i) {
        bool flag = false;
        for (int j = 0; j < col; ++j) {
            if (arr[i][j]!= 0) {
                swap(arr[i][j], arr[i][col - 1]);
                --col;
                flag = true;
                break;
            }
        }
        if (!flag)
            break;
    }
}

int main() {
    int inputArr[][4] = {{0, 3, 3, 3}, {9, 9, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}};
    cout << "Input array is : \n";
    printArray(inputArr);
    moveZeroesToEnd(inputArr);
    cout << "\nOutput array after moving zeroes to end of each row is :\n";
    printArray(inputArr);
    return 0;
}


###########################################################
Result:
solution: [[8, 8, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0], [6, 6, 6, 0, 0, 0], [7, 7, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0], [3, 3, 0, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03286384976525822

cat_success_cnt: 0

cat_success_rate: 0.0

