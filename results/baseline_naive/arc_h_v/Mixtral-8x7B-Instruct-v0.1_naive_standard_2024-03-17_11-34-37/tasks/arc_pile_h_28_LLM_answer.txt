
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 0, 0], [0, 9, 9, 0, 0, 0], [0, 0, 4, 0, 4, 0], [0, 0, 0, 0, 6, 6], [1, 0, 0, 0, 0, 1], [8, 0, 8, 0, 0, 8]]
output: [[0, 0, 0, 0, 0, 0], [9, 9, 0, 0, 0, 0], [4, 4, 0, 0, 0, 0], [6, 6, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0], [8, 8, 8, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 0], [0, 0, 0, 3], [0, 1, 1, 1], [0, 0, 0, 4]]
output: [[0, 0, 0, 0], [3, 0, 0, 0], [1, 1, 1, 0], [4, 0, 0, 0]]

Example_3:
input: [[7, 7, 0, 7], [0, 1, 1, 1], [0, 0, 0, 0], [5, 0, 5, 0]]
output: [[7, 7, 7, 0], [1, 1, 1, 0], [0, 0, 0, 0], [5, 5, 0, 0]]

Test case:
input: [[0, 0, 0, 8, 8, 8], [0, 0, 0, 7, 7, 0], [0, 0, 0, 3, 0, 3], [5, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 4]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 8, 8, 8], [0, 0, 0, 7, 7, 0], [0, 0, 0, 3, 0, 3], [5, 5, 5, 0, 0, 0], [6, 6, 6, 0, 0, 0], [0, 0, 0, 4, 4, 4]]
*/

#include <iostream>
using namespace std;

void fill(int** arr, int n, int m) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			if (!arr[i][j]) continue;
			for (int k = 0; k < n; ++k) {
				if (k == i) continue;
				arr[k][j] = 0;
			}
			for (int k = 0; k < m; ++k) {
				if (k == j) continue;
				arr[i][k] = 0;
			}
		}
	}
}

void printArr(int** arr, int n, int m) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
}

int main() {
	int n, m;
	cin >> n >> m;
	int** arr = new int* [n];
	for (int i = 0; i < n; ++i) {
		arr[i] = new int[m];
		for (int j = 0; j < m; ++j) {
			cin >> arr[i][j];
		}
	}
	fill(arr, n, m);
	printArr(arr, n, m);
	return 0;
}


###########################################################
Result:
solution: [[8, 8, 8, 0, 0, 0], [7, 7, 0, 0, 0, 0], [3, 3, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0], [4, 4, 4, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03153153153153153

cat_success_cnt: 0

cat_success_rate: 0.0

