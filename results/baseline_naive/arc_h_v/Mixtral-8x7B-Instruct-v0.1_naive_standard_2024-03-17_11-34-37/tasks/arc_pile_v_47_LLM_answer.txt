
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 0, 5], [0, 7, 0, 0, 0, 0], [0, 7, 0, 0, 0, 0], [0, 0, 0, 3, 8, 5], [0, 0, 0, 3, 8, 5], [4, 7, 0, 3, 8, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 7, 0, 3, 8, 5], [0, 7, 0, 3, 8, 5], [4, 7, 0, 3, 8, 5]]

Example_2:
input: [[9, 8, 2, 0, 0, 0], [0, 0, 0, 3, 0, 7], [0, 0, 0, 3, 0, 7], [0, 0, 0, 0, 0, 0], [9, 8, 2, 3, 0, 0], [0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0], [9, 8, 2, 3, 0, 7], [9, 8, 2, 3, 0, 7]]

Example_3:
input: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0], [0, 0, 9, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 9, 0, 0, 7]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 9, 0, 0, 0], [0, 0, 9, 0, 4, 7]]

Test case:
input: [[0, 0, 0, 0], [0, 1, 5, 0], [0, 1, 5, 0], [8, 0, 5, 9]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0], [0, 1, 5, 0], [0, 1, 5, 0], [8, 1, 5, 9]]
*/

public class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        if (image == null || image.length == 0 || image[sr][sc] == newColor) return image;
        dfs(image, sr, sc, image[sr][sc], newColor);
        return image;
    }

    private void dfs(int[][] image, int r, int c, int oldColor, int newColor) {
        if (r < 0 || r >= image.length || c < 0 || c >= image[0].length || image[r][c]!= oldColor) return;
        image[r][c] = newColor;
        dfs(image, r + 1, c, oldColor, newColor);
        dfs(image, r - 1, c, oldColor, newColor);
        dfs(image, r, c + 1, oldColor, newColor);
        dfs(image, r, c - 1, oldColor, newColor);
    }
}


###########################################################
Result:
solution: [[0, 0, 0, 0], [0, 0, 5, 0], [0, 1, 5, 0], [8, 1, 5, 9]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.027303754266211604

cat_success_cnt: 0

cat_success_rate: 0.0

