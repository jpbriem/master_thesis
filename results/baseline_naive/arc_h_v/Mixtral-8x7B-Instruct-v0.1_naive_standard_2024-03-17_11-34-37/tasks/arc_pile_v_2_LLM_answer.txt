
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[3, 0, 0, 0], [3, 0, 0, 0], [3, 9, 2, 0], [0, 9, 0, 0]]
output: [[0, 0, 0, 0], [3, 0, 0, 0], [3, 9, 0, 0], [3, 9, 2, 0]]

Example_2:
input: [[0, 2, 0, 9, 0, 1], [0, 0, 0, 9, 5, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [8, 0, 0, 0, 5, 0], [0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 9, 5, 0], [8, 2, 0, 9, 5, 1]]

Example_3:
input: [[0, 0, 0, 8], [6, 1, 0, 0], [0, 1, 0, 0], [6, 0, 0, 0]]
output: [[0, 0, 0, 0], [0, 0, 0, 0], [6, 1, 0, 0], [6, 1, 0, 8]]

Test case:
input: [[0, 0, 0, 0, 0, 3], [8, 0, 0, 0, 0, 0], [0, 1, 6, 0, 2, 0], [8, 0, 6, 7, 0, 3], [0, 0, 6, 0, 2, 0], [0, 1, 0, 7, 0, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0, 0, 3], [8, 0, 0, 0, 0, 0], [0, 1, 6, 0, 2, 0], [8, 0, 6, 7, 0, 3], [0, 0, 6, 0, 2, 0], [0, 1, 0, 7, 0, 0]]
*/

public class Solution {
    public int[][] Fill(int[][] matrix) {
        if (matrix == null || matrix.Length == 0 || matrix[0].Length == 0) return new int[0][];

        for (int i = 0; i < matrix.Length; i++) {
            if (matrix[i][0]!= 0) continue;
            DFS(matrix, i, 0);
        }

        for (int j = 0; j < matrix[0].Length; j++) {
            if (matrix[0][j]!= 0) continue;
            DFS(matrix, 0, j);
        }

        return matrix;
    }

    private void DFS(int[][] matrix, int row, int col) {
        if (row < 0 || row >= matrix.Length || col < 0 || col >= matrix[0].Length) return;

        if (matrix[row][col]!= 0) return;

        matrix[row][col] = -1;

        if (row > 0 && matrix[row-1][col] == 0) DFS(matrix, row-1, col);
        if (row + 1 < matrix.Length && matrix[row+1][col] == 0) DFS(matrix, row+1, col);
        if (col > 0 && matrix[row][col-1] == 0) DFS(matrix, row, col-1);
        if (col + 1 < matrix[0].Length && matrix[row][col+1] == 0) DFS(matrix, row, col+1);
    }
}


###########################################################
Result:
solution: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 6, 0, 0, 0], [8, 1, 6, 7, 2, 3], [8, 1, 6, 7, 2, 3]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.030418250950570342

cat_success_cnt: 0

cat_success_rate: 0.0

