{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[0, 3, 0, 3, 3], [0, 0, 0, 0, 0], [0, 0, 0, 4, 4], [6, 0, 0, 0, 0], [0, 2, 0, 2, 0]]\noutput: [[3, 3, 3, 0, 0], [0, 0, 0, 0, 0], [4, 4, 0, 0, 0], [6, 0, 0, 0, 0], [2, 2, 0, 0, 0]]\n\nExample_2:\ninput: [[0, 1, 1, 1], [9, 0, 0, 9], [0, 4, 0, 0], [0, 2, 0, 0]]\noutput: [[1, 1, 1, 0], [9, 9, 0, 0], [4, 0, 0, 0], [2, 0, 0, 0]]\n\nExample_3:\ninput: [[3, 0, 3, 3], [6, 6, 0, 0], [8, 8, 0, 8], [0, 0, 4, 0]]\noutput: [[3, 3, 3, 0], [6, 6, 0, 0], [8, 8, 8, 0], [4, 0, 0, 0]]\n\nTest case:\ninput: [[0, 0, 0, 7, 7], [0, 0, 9, 0, 9], [0, 1, 0, 0, 0], [0, 5, 5, 0, 0], [0, 0, 8, 0, 8]]\n\n###########################################################\nSample Outputs:\noutput: [[0, 0, 0, 7, 7], [0, 0, 9, 0, 9], [1, 5, 5, 0, 0], [5, 5, 8, 0, 0], [8, 0, 0, 0, 0]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid printArray(int arr[][5]) {\n    for (int i = 0; i < 5; ++i) {\n        cout << \"[\";\n        for (int j = 0; j < 5; ++j) {\n            if (j!= 0) cout << \", \";\n            cout << arr[i][j];\n        }\n        cout << \"]\" << endl;\n    }\n}\n\nvoid moveZeroToEnd(int arr[][5]) {\n    int rowLen = 5;\n    int colLen = 5;\n    // iterate through each element in the array\n    for (int i = 0; i < rowLen; ++i) {\n        for (int j = 0; j < colLen; ++j) {\n            // check if current element is zero and there are non-zero elements after it\n            if (arr[i][j] == 0 && hasNonZeroAfter(arr, i, j)) {\n                swapWithNextNonZero(arr, i, j);\n            }\n        }\n    }\n}\n\nbool hasNonZeroAfter(int arr[][5], int row, int col) {\n    int rowLen = 5;\n    int colLen = 5;\n    // iterate through all columns to right of current column\n    for (int c = col + 1; c < colLen; ++c) {\n        // if any non-zero found return true\n        if (arr[row][c]!= 0) return true;\n    }\n    // no non-zero found so return false\n    return false;\n}\n\nvoid swapWithNextNonZero(int arr[][5], int row, int col) {\n    int rowLen = 5;\n    int colLen = 5;\n    // find next non-zero element\n    while (++col < colLen && arr[row][col] == 0);\n    // swap with current element\n    swap(arr[row][--col], arr[row][col]);\n}\n\nint main() {\n    int testCase1[][5] = {{0, 3, 0, 3, 3}, {0, 0, 0, 0, 0}, {0, 0, 0, 4, 4}, {6, 0, 0, 0, 0}, {0, 2, 0, 2, 0}};\n    int testCase2[][5] = {{0, 1, 1, 1}, {9, 0, 0, 9}, {0, 4, 0, 0}, {0, 2, 0, 0}};\n    int testCase3[][5] = {{3, 0, 3, 3}, {6, 6, 0, 0}, {8, 8, 0, 8}, {0, 0, 4, 0}};\n    int testCase4[][5] = {{0, 0, 0, 7, 7}, {0, 0, 9, 0, 9}, {0, 1, 0, 0, 0}, {0, 5, 5, 0, 0}, {0, 0, 8, 0, 8}};\n\n    cout << \"Test Case 1:\" << endl;\n    printArray(testCase1);\n    moveZeroToEnd(testCase1);\n    cout << \"Result:\" << endl;\n    printArray(testCase1);\n\n    cout << \"\\nTest Case 2:\" << endl;\n    printArray(testCase2);\n    moveZeroToEnd(testCase2);\n    cout << \"Result:\" << endl;\n    printArray(testCase2);\n\n    cout << \"\\nTest Case 3:\" << endl;\n    printArray(testCase3);\n    moveZeroToEnd(testCase3);\n    cout << \"Result:\" << endl;\n    printArray(testCase3);\n\n    cout << \"\\nTest Case 4:\" << endl;\n    printArray(testCase4);\n    moveZeroToEnd(testCase4);\n    cout << \"Result:\" << endl;\n    printArray(testCase4);\n\n    return 0;\n}"
        }
    ],
    "idx": 243,
    "task": "arc_pile_h_48",
    "category": "pile_h",
    "ys": [
        "arc_pile_h_48.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[7, 7, 0, 0, 0], [9, 9, 0, 0, 0], [1, 0, 0, 0, 0], [5, 5, 0, 0, 0], [8, 8, 0, 0, 0]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.03278688524590164,
        "cat_success_cnt": 1,
        "cat_success_rate": 0.022727272727272728
    },
    "usage_so_far": {
        "completion_tokens": 463139,
        "prompt_tokens": 510251,
        "cost": null
    }
}