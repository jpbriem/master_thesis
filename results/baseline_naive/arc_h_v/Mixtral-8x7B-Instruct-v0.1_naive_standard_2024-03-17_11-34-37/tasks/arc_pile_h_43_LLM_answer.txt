
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[8, 0, 0, 0], [3, 3, 3, 0], [0, 0, 2, 0], [0, 1, 1, 0]]
output: [[8, 0, 0, 0], [3, 3, 3, 0], [2, 0, 0, 0], [1, 1, 0, 0]]

Example_2:
input: [[2, 0, 0, 0], [7, 0, 7, 7], [0, 0, 0, 0], [0, 0, 0, 0]]
output: [[2, 0, 0, 0], [7, 7, 7, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Example_3:
input: [[0, 4, 4, 4], [1, 0, 0, 0], [0, 5, 5, 0], [0, 0, 0, 0]]
output: [[4, 4, 4, 0], [1, 0, 0, 0], [5, 5, 0, 0], [0, 0, 0, 0]]

Test case:
input: [[9, 0, 0, 0], [0, 6, 6, 6], [0, 0, 5, 0], [0, 3, 0, 0]]

###########################################################
Sample Outputs:
output: [[9, 6, 6, 6], [0, 6, 5, 0], [0, 0, 5, 0], [0, 3, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroesToEnd(int arr[][4], int n) {
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n - 1; ++j) {
            if (arr[i][j] == 0 && arr[i][j + 1]!= 0) {
                swap(arr[i][j], arr[i][j + 1]);
            }
        }
    }
}

int main() {
    int inputArr[][4] = {{8, 0, 0, 0}, {3, 3, 3, 0}, {0, 0, 2, 0}, {0, 1, 1, 0}};
    moveZeroesToEnd(inputArr, 4);
    cout << "Output array is : \n";
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << inputArr[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}


###########################################################
Result:
solution: [[9, 0, 0, 0], [6, 6, 6, 0], [5, 0, 0, 0], [3, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.03347280334728033

cat_success_cnt: 1

cat_success_rate: 0.02564102564102564

