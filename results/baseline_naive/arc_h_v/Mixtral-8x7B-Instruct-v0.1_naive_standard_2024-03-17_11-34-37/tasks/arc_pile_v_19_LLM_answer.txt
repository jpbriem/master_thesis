
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 1, 0, 0], [0, 1, 2, 0], [0, 0, 0, 0], [0, 1, 0, 0]]
output: [[0, 0, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 2, 0]]

Example_2:
input: [[1, 0, 0, 0], [1, 0, 2, 5], [1, 0, 0, 5], [0, 0, 0, 0]]
output: [[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 5], [1, 0, 2, 5]]

Example_3:
input: [[8, 0, 0, 0, 0], [0, 0, 0, 9, 0], [0, 0, 0, 0, 4], [0, 0, 0, 9, 0], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 9, 0], [8, 0, 0, 9, 4]]

Test case:
input: [[0, 3, 0, 6], [0, 3, 0, 0], [5, 3, 0, 0], [0, 0, 7, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0], [0, 3, 0, 0], [5, 3, 0, 0], [0, 0, 7, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroes(int arr[][4]) {
    int zeroRow = -1; // index of row with all zeros.
    for (int i=0; i<4; ++i) {
        if (arr[i][0] == 0 && arr[i][3] == 0) {
            if (zeroRow == -1)
                zeroRow = i;
        } else if (arr[i][0]!= 0 || arr[i][3]!= 0) {
            if (zeroRow!= -1) {
                swap(arr[zeroRow], arr[i]);
                zeroRow = -1;
            }
        }
    }
}

// Driver code
int main() {
    int arr[][4] = {{0, 3, 0, 6}, {0, 3, 0, 0}, {5, 3, 0, 0}, {0, 0, 7, 0}};
    moveZeroes(arr);
    cout << "Resultant array is:\n";
    for (int i=0; i<4; ++i) {
        for (int j=0; j<4; ++j)
            cout << arr[i][j] <<'';
        cout << '\n';
    }
    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0], [0, 3, 0, 0], [0, 3, 0, 0], [5, 3, 7, 6]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.030534351145038167

cat_success_cnt: 0

cat_success_rate: 0.0

