
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [5, 3, 0, 1, 0], [0, 3, 0, 0, 4], [0, 3, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0], [0, 3, 0, 1, 0], [5, 3, 0, 1, 4]]

Example_2:
input: [[9, 0, 3, 0, 0], [0, 5, 3, 1, 0], [9, 0, 0, 0, 0], [0, 5, 0, 0, 8], [0, 5, 3, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 5, 3, 0, 0], [9, 5, 3, 0, 0], [9, 5, 3, 1, 8]]

Example_3:
input: [[0, 0, 2, 6, 0], [0, 0, 0, 6, 0], [0, 0, 2, 0, 0], [0, 0, 0, 6, 0], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 6, 0], [0, 0, 2, 6, 0], [0, 0, 2, 6, 0]]

Test case:
input: [[0, 6, 5, 0], [8, 0, 5, 0], [0, 6, 0, 3], [0, 6, 5, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0], [8, 0, 5, 0], [0, 6, 0, 3], [0, 6, 5, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroes(int arr[][5]) {
    int row = 5, col = 5;
    for (int i = 0; i < row; ++i) {
        if (arr[i][col - 1] == 0) {
            bool flag = false;
            for (int j = 0; j < col; ++j) {
                if (arr[row - 1][j]!= 0 &&!flag) {
                    swap(arr[i][j], arr[row - 1][j]);
                    flag = true;
                }
            }
        }
    }
}

int main() {
    int input[][5] = {{0, 6, 5, 0}, {8, 0, 5, 0}, {0, 6, 0, 3}, {0, 6, 5, 0}};
    moveZeroes(input);
    cout << "Output:\n";
    for (int i = 0; i < 5; ++i) {
        for (int j = 0; j < 5; ++j) {
            cout << input[i][j] <<'';
        }
        cout << '\n';
    }
    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0], [0, 6, 5, 0], [0, 6, 5, 0], [8, 6, 5, 3]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.02909090909090909

cat_success_cnt: 0

cat_success_rate: 0.0

