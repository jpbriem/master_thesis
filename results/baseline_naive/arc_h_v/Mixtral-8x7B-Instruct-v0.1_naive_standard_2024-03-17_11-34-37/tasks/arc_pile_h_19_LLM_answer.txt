
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0], [1, 0, 1, 1], [0, 0, 2, 0], [0, 0, 0, 0]]
output: [[0, 0, 0, 0], [1, 1, 1, 0], [2, 0, 0, 0], [0, 0, 0, 0]]

Example_2:
input: [[0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 2, 0], [0, 5, 5, 0]]
output: [[1, 1, 1, 0], [0, 0, 0, 0], [2, 0, 0, 0], [5, 5, 0, 0]]

Example_3:
input: [[0, 0, 0, 0, 8], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 9, 0, 9, 0], [0, 0, 4, 0, 0]]
output: [[8, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [9, 9, 0, 0, 0], [4, 0, 0, 0, 0]]

Test case:
input: [[0, 5, 0, 0], [0, 3, 3, 3], [7, 0, 0, 0], [0, 0, 0, 6]]

###########################################################
Sample Outputs:
output: [[5, 0, 0, 0], [3, 3, 3, 0], [0, 0, 0, 0], [0, 0, 0, 6]]
*/

#include <iostream>
using namespace std;

void printArray(int arr[][4]) {
    for (int i = 0; i < 4; ++i) {
        cout << "[";
        for (int j = 0; j < 4; ++j) {
            if (j!= 0) cout << ", ";
            cout << arr[i][j];
        }
        cout << "]" << endl;
    }
}

void moveZeroesToLeft(int arr[][4]) {
    int zeroCount = 0;
    // count the number of zeros in each row and store them at the beginning of that row.
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0) {
                ++zeroCount;
                break;
            }
        }
        arr[i][0] = zeroCount;
    }

    // shift all non-zeros to right side of array
    for (int i = 0; i < 4; ++i) {
        for (int j = 3; j >= 0; --j) {
            if (arr[i][j] > 0 && j + arr[i][0] <= 3) {
                swap(arr[i][j], arr[i][j + arr[i][0]]);
            }
        }
    }
}

int main() {
    int testCases[][4] = {{0, 0, 0, 0}, {1, 0, 1, 1}, {0, 0, 2, 0}, {0, 0, 0, 0}};
    printArray(testCases);
    moveZeroesToLeft(testCases);
    cout << "\nAfter moving zeroes to left:" << endl;
    printArray(testCases);

    return 0;
}


###########################################################
Result:
solution: [[5, 0, 0, 0], [3, 3, 3, 0], [7, 0, 0, 0], [6, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0330188679245283

cat_success_cnt: 0

cat_success_rate: 0.0

