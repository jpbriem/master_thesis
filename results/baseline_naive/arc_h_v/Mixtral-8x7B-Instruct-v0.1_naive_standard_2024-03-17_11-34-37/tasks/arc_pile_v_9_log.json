{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[7, 0, 3, 0], [7, 2, 0, 8], [0, 0, 0, 0], [0, 0, 0, 0]]\noutput: [[0, 0, 0, 0], [0, 0, 0, 0], [7, 0, 0, 0], [7, 2, 3, 8]]\n\nExample_2:\ninput: [[0, 2, 0, 0, 0, 0], [1, 0, 3, 0, 0, 0], [1, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 0]]\noutput: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6], [1, 0, 0, 0, 0, 6], [1, 2, 3, 0, 0, 6]]\n\nExample_3:\ninput: [[2, 0, 0, 0, 0], [0, 0, 0, 0, 0], [2, 0, 6, 9, 5], [2, 0, 6, 0, 5], [0, 0, 0, 0, 5]]\noutput: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [2, 0, 0, 0, 5], [2, 0, 6, 0, 5], [2, 0, 6, 9, 5]]\n\nTest case:\ninput: [[0, 0, 0, 0, 0], [7, 0, 9, 0, 4], [0, 2, 0, 0, 0], [7, 0, 0, 8, 4], [0, 0, 0, 8, 0]]\n\n###########################################################\nSample Outputs:\noutput: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 2, 0, 0, 0], [7, 0, 9, 0, 4], [0, 0, 0, 8, 0]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid moveZeroesToEnd(int arr[][5]) {\n    int row = 5, col = 5;\n    for (int i = 0; i < row; ++i) {\n        if (arr[i][col - 1] == 0) {\n            bool flag = false;\n            for (int j = 0; j < col; ++j) {\n                if (arr[row - 1][j]!= 0 &&!flag) {\n                    swap(arr[i][j], arr[row - 1][j]);\n                    flag = true;\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    int inputArr[][5] = {{7, 0, 3, 0}, {7, 2, 0, 8}, {0, 0, 0, 0}, {0, 0, 0, 0}};\n    cout << \"Input array is : \\n\";\n    printArray(inputArr);\n    moveZeroesToEnd(inputArr);\n    cout << \"\\nOutput array after moving zeroes to end of each row is :\\n\";\n    printArray(inputArr);\n    return 0;\n}"
        }
    ],
    "idx": 299,
    "task": "arc_pile_v_9",
    "category": "pile_v",
    "ys": [
        "arc_pile_v_9.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [7, 0, 0, 8, 4], [7, 2, 9, 8, 4]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.02666666666666667,
        "cat_success_cnt": 0,
        "cat_success_rate": 0.0
    },
    "usage_so_far": {
        "completion_tokens": 519453,
        "prompt_tokens": 542760,
        "cost": null
    }
}