{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[0, 0, 4, 0, 0], [2, 0, 0, 2, 2], [0, 0, 6, 0, 0], [1, 1, 1, 0, 0], [0, 0, 5, 5, 0]]\noutput: [[4, 0, 0, 0, 0], [2, 2, 2, 0, 0], [6, 0, 0, 0, 0], [1, 1, 1, 0, 0], [5, 5, 0, 0, 0]]\n\nExample_2:\ninput: [[0, 2, 0, 2], [0, 1, 0, 0], [6, 0, 0, 0], [7, 7, 0, 0]]\noutput: [[2, 2, 0, 0], [1, 0, 0, 0], [6, 0, 0, 0], [7, 7, 0, 0]]\n\nExample_3:\ninput: [[0, 0, 0, 2, 0], [0, 0, 0, 9, 0], [0, 1, 0, 0, 0], [0, 0, 4, 4, 4], [0, 0, 0, 6, 6]]\noutput: [[2, 0, 0, 0, 0], [9, 0, 0, 0, 0], [1, 0, 0, 0, 0], [4, 4, 4, 0, 0], [6, 6, 0, 0, 0]]\n\nTest case:\ninput: [[0, 0, 0, 8, 8], [0, 2, 0, 0, 0], [0, 0, 9, 9, 0], [1, 0, 1, 0, 1], [0, 0, 0, 0, 4]]\n\n###########################################################\nSample Outputs:\noutput: [[8, 8, 0, 0, 0], [2, 0, 0, 0, 0], [9, 9, 0, 0, 0], [1, 0, 0, 0, 0], [4, 0, 0, 0, 0]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid moveZeroesToEnd(int arr[][5], int row) {\n    for (int i = 0; i < row; ++i) {\n        bool flag = false;\n        for (int j = 0; j < 5; ++j) {\n            if (arr[i][j]!= 0) {\n                swap(arr[i][j], arr[i][flag? j : 4]);\n                flag = true;\n            }\n        }\n    }\n}\n\nint main() {\n    int inputArr[][5] = {{0, 0, 0, 8, 8}, {0, 2, 0, 0, 0}, {0, 0, 9, 9, 0}, {1, 0, 1, 0, 1}, {0, 0, 0, 0, 4}};\n    moveZeroesToEnd(inputArr, 5);\n    cout << \"Output array is:\" << endl;\n    for (int i = 0; i < 5; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            cout << inputArr[i][j] << \" \";\n        }\n        cout << endl;\n    }\n    return 0;\n}"
        }
    ],
    "idx": 233,
    "task": "arc_pile_h_39",
    "category": "pile_h",
    "ys": [
        "arc_pile_h_39.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[8, 8, 0, 0, 0], [2, 0, 0, 0, 0], [9, 9, 0, 0, 0], [1, 1, 1, 0, 0], [4, 0, 0, 0, 0]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.03418803418803419,
        "cat_success_cnt": 1,
        "cat_success_rate": 0.029411764705882353
    },
    "usage_so_far": {
        "completion_tokens": 449404,
        "prompt_tokens": 504264,
        "cost": null
    }
}