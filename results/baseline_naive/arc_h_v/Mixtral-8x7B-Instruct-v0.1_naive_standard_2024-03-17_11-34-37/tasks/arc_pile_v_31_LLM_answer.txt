
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 5, 1, 0, 0, 0], [0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7], [8, 0, 0, 0, 4, 0], [0, 0, 0, 0, 4, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 7], [8, 5, 1, 0, 4, 7]]

Example_2:
input: [[7, 1, 9, 0, 0], [0, 0, 0, 0, 0], [7, 0, 9, 8, 0], [0, 0, 0, 0, 0], [7, 0, 9, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [7, 0, 9, 0, 0], [7, 0, 9, 0, 0], [7, 1, 9, 8, 0]]

Example_3:
input: [[0, 0, 0, 0], [0, 0, 0, 6], [9, 0, 0, 6], [0, 7, 0, 6]]
output: [[0, 0, 0, 0], [0, 0, 0, 6], [0, 0, 0, 6], [9, 7, 0, 6]]

Test case:
input: [[0, 8, 9, 0, 0], [0, 8, 0, 1, 0], [0, 8, 9, 1, 0], [6, 0, 9, 1, 2], [0, 0, 0, 0, 0]]

###########################################################
Sample Outputs:
output: [[0, 8, 9, 0, 0], [0, 8, 0, 1, 0], [0, 8, 9, 1, 0], [6, 0, 9, 1, 2], [0, 0, 0, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroesToEnd(int arr[][6]) {
    int row = 6, col = 6;
    for (int i = 0; i < row && i < col; ++i) {
        if (arr[i][i] == 0) {
            for (int j = i + 1; j < row && j < col; ++j) {
                if (arr[j][i]!= 0) {
                    swap(arr[i][i], arr[j][i]);
                    break;
                }
            }
        }
    }
}

int main() {
    int inputArr[][6] = {{0, 8, 9, 0, 0}, {0, 8, 0, 1, 0}, {0, 8, 9, 1, 0}, {6, 0, 9, 1, 2}, {0, 0, 0, 0, 0}};
    cout << "Input array is : \n";
    for (int i = 0; i < 5; ++i) {
        for (int j = 0; j < 5; ++j) {
            cout << inputArr[i][j] << "\t";
        }
        cout << endl;
    }
    moveZeroesToEnd(inputArr);
    cout << "Output array after moving zeroes to end of each row and column is : \n";
    for (int i = 0; i < 5; ++i) {
        for (int j = 0; j < 5; ++j) {
            cout << inputArr[i][j] << "\t";
        }
        cout << endl;
    }
    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 8, 9, 1, 0], [0, 8, 9, 1, 0], [6, 8, 9, 1, 2]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.028985507246376812

cat_success_cnt: 0

cat_success_rate: 0.0

