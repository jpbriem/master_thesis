{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[3, 0, 4, 0, 0], [3, 0, 4, 0, 2], [0, 0, 0, 0, 0], [3, 0, 0, 0, 2], [0, 0, 0, 6, 0]]\noutput: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [3, 0, 0, 0, 0], [3, 0, 4, 0, 2], [3, 0, 4, 6, 2]]\n\nExample_2:\ninput: [[1, 9, 0, 0], [1, 0, 0, 0], [1, 0, 4, 2], [0, 9, 0, 0]]\noutput: [[0, 0, 0, 0], [1, 0, 0, 0], [1, 9, 0, 0], [1, 9, 4, 2]]\n\nExample_3:\ninput: [[3, 0, 8, 0], [3, 0, 0, 4], [0, 6, 8, 0], [3, 6, 8, 0]]\noutput: [[0, 0, 0, 0], [3, 0, 8, 0], [3, 6, 8, 0], [3, 6, 8, 4]]\n\nTest case:\ninput: [[7, 9, 0, 0, 8], [7, 0, 0, 0, 0], [0, 9, 0, 5, 8], [0, 0, 1, 5, 0], [0, 0, 0, 0, 0]]\n\n###########################################################\nSample Outputs:\noutput: [[0, 0, 0, 0, 0], [7, 0, 0, 0, 0], [0, 9, 0, 5, 0], [0, 0, 1, 5, 0], [0, 0, 0, 0, 8]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid moveZeroes(int** arr, int nRows, int nCols) {\n    // Write your code here.\n\tfor (int i = 0; i < nRows; ++i){\n        for (int j = 0; j < nCols - 1; ++j){\n            if (arr[i][j] == 0 && arr[i][j + 1]!= 0){\n                swap(arr[i][j], arr[i][j + 1]);\n            }\n        }\n    }\n}\n\n// Don't change the main function\nint main() {\n    int nRows, nCols;\n    cin >> nRows >> nCols;\n    int **arr = new int*[nRows];\n    for (int i = 0; i < nRows; i++) {\n        arr[i] = new int[nCols];\n        for (int j = 0; j < nCols; j++) {\n            cin >> arr[i][j];\n        }\n    }\n    moveZeroes(arr, nRows, nCols);\n    for (int i = 0; i < nRows; i++) {\n        for (int j = 0; j < nCols; j++) {\n            cout << arr[i][j] << \" \";\n        }\n        cout << endl;\n    }\n    return 0;\n}"
        }
    ],
    "idx": 293,
    "task": "arc_pile_v_48",
    "category": "pile_v",
    "ys": [
        "arc_pile_v_48.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [7, 9, 0, 5, 8], [7, 9, 1, 5, 8]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.027210884353741496,
        "cat_success_cnt": 0,
        "cat_success_rate": 0.0
    },
    "usage_so_far": {
        "completion_tokens": 515911,
        "prompt_tokens": 539370,
        "cost": null
    }
}