
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 4, 2], [5, 0, 0, 2], [5, 0, 4, 2], [5, 0, 4, 0]]
output: [[0, 0, 0, 0], [5, 0, 4, 2], [5, 0, 4, 2], [5, 0, 4, 2]]

Example_2:
input: [[0, 2, 0, 0, 1], [0, 2, 0, 0, 0], [0, 0, 0, 4, 0], [0, 0, 0, 4, 0], [3, 0, 0, 0, 1]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 2, 0, 4, 1], [3, 2, 0, 4, 1]]

Example_3:
input: [[9, 0, 4, 3, 0], [0, 5, 0, 0, 0], [0, 5, 4, 0, 0], [9, 5, 0, 3, 0], [0, 0, 4, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 5, 4, 0, 0], [9, 5, 4, 3, 0], [9, 5, 4, 3, 0]]

Test case:
input: [[0, 0, 0, 0, 0], [0, 7, 0, 0, 9], [8, 7, 0, 0, 9], [0, 0, 0, 5, 0], [0, 7, 2, 0, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0, 0], [0, 7, 0, 0, 9], [8, 7, 0, 0, 9], [0, 0, 0, 5, 0], [0, 7, 2, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroes(vector<vector<int>>& grid) {
    int m = grid.size();
    int n = grid[0].size();
    for (int i = 0; i < m; ++i) {
        bool hasNonZero = false;
        for (int j = 0; j < n; ++j) {
            if (grid[i][j]!= 0) {
                swap(grid[i][j], grid[i][hasNonZero]);
                hasNonZero++;
            }
        }
    }
}

int main() {
    vector<vector<int>> input_1 = {{0, 0, 4, 2}, {5, 0, 0, 2}, {5, 0, 4, 2}, {5, 0, 4, 0}};
    vector<vector<int>> output_1 = {{0, 0, 0, 0}, {5, 0, 4, 2}, {5, 0, 4, 2}, {5, 0, 4, 2}};
    moveZeroes(input_1);
    cout << "Example_1:" << endl;
    printGrid(input_1);
    cout << endl;

    vector<vector<int>> input_2 = {{0, 2, 0, 0, 1}, {0, 2, 0, 0, 0}, {0, 0, 0, 4, 0}, {0, 0, 0, 4, 0}, {3, 0, 0, 0, 1}};
    vector<vector<int>> output_2 = {{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 2, 0, 4, 1}, {3, 2, 0, 4, 1}};
    moveZeroes(input_2);
    cout << "Example_2:" << endl;
    printGrid(input_2);
    cout << endl;

    vector<vector<int>> input_3 = {{9, 0, 4, 3, 0}, {0, 5, 0, 0, 0}, {0, 5, 4, 0, 0}, {9, 5, 0, 3, 0}, {0, 0, 4, 0, 0}};
    vector<vector<int>> output_3 = {{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 5, 4, 0, 0}, {9, 5, 4, 3, 0}, {9, 5, 4, 3, 0}};
    moveZeroes(input_3);
    cout << "Example_3:" << endl;
    printGrid(input_3);
    cout << endl;

    vector<vector<int>> input_4 = {{0, 0, 0, 0, 0}, {0, 7, 0, 0, 9}, {8, 7, 0, 0, 9}, {0, 0, 0, 5, 0}, {0, 7, 2, 0, 0}};
    vector<vector<int>> output_4 = {{0, 0, 0, 0, 0}, {0, 7, 0, 0, 9}, {8, 7, 0, 0, 9}, {0, 0, 0, 5, 0}, {0, 7, 2, 0, 0}};
    moveZeroes(input_4);
    cout << "Test case:" << endl;
    printGrid(input_4);
    cout << endl;

    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 7, 0, 0, 0], [0, 7, 0, 0, 9], [8, 7, 2, 5, 9]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0311284046692607

cat_success_cnt: 0

cat_success_rate: 0.0

