{
    "steps": [
        {
            "prompt_log": "Sample Prompt:\nExample_1:\ninput: [[5, 2, 0, 9], [0, 2, 0, 9], [0, 2, 3, 0], [0, 0, 0, 9]]\noutput: [[0, 0, 0, 0], [0, 2, 0, 9], [0, 2, 0, 9], [5, 2, 3, 9]]\n\nExample_2:\ninput: [[3, 0, 0, 2], [0, 5, 0, 2], [3, 5, 1, 2], [3, 0, 1, 0]]\noutput: [[0, 0, 0, 0], [3, 0, 0, 2], [3, 5, 1, 2], [3, 5, 1, 2]]\n\nExample_3:\ninput: [[5, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 1], [0, 0, 8, 0, 4, 0], [5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0]]\noutput: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [5, 0, 8, 0, 4, 0], [5, 0, 8, 0, 4, 1]]\n\nTest case:\ninput: [[0, 3, 0, 2], [0, 3, 8, 2], [0, 0, 8, 2], [6, 0, 8, 0]]\n\n###########################################################\nSample Outputs:\noutput: [[0, 0, 0, 0], [0, 3, 0, 2], [0, 3, 8, 2], [6, 0, 8, 0]]\n*/\n\n#include <iostream>\nusing namespace std;\n\nvoid moveZeroesToEnd(int arr[][4], int n) {\n    for (int i = 0; i < n; ++i) {\n        bool flag = false;\n        for (int j = 0; j < n; ++j) {\n            if (arr[i][j]!= 0 &&!flag) {\n                swap(arr[i][j], arr[i][0]);\n                flag = true;\n            } else if (arr[i][j] == 0 && flag) {\n                swap(arr[i][j], arr[i][n - 1]);\n            }\n        }\n    }\n}\n\nint main() {\n    int testCases;\n    cin >> testCases;\n    while (testCases--) {\n        int n;\n        cin >> n;\n        int arr[4][4];\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                cin >> arr[i][j];\n            }\n        }\n        moveZeroesToEnd(arr, n);\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                cout << arr[i][j] << \" \";\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
        }
    ],
    "idx": 250,
    "task": "arc_pile_v_0",
    "category": "pile_v",
    "ys": [
        "arc_pile_v_0.json-Node_1(Level: 1, Phase: abstraction, Thought: , Value: 0, Parent_ID: 0, Spread: False, Children_ID: [], is_root: False, is_leaf: True)"
    ],
    "result": {
        "solution": "[[0, 0, 0, 0], [0, 0, 8, 2], [0, 3, 8, 2], [6, 3, 8, 2]]\n",
        "success": 0,
        "too_long_prompt": false,
        "tries": 1,
        "success_rate": 0.03187250996015936,
        "cat_success_cnt": 0,
        "cat_success_rate": 0.0
    },
    "usage_so_far": {
        "completion_tokens": 467425,
        "prompt_tokens": 514141,
        "cost": null
    }
}