
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 5, 2, 0], [0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 7]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 2, 0], [0, 1, 0, 5, 2, 7]]

Example_2:
input: [[0, 0, 3, 0], [0, 2, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0]]
output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 2, 3, 0]]

Example_3:
input: [[0, 0, 0, 5], [3, 0, 0, 5], [0, 0, 0, 0], [3, 0, 0, 5]]
output: [[0, 0, 0, 0], [0, 0, 0, 5], [3, 0, 0, 5], [3, 0, 0, 5]]

Test case:
input: [[0, 0, 0, 7, 0], [9, 1, 5, 0, 0], [9, 1, 0, 7, 4], [0, 1, 5, 0, 0], [9, 0, 0, 7, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0, 0], [9, 1, 5, 0, 0], [9, 1, 0, 7, 4], [0, 1, 5, 0, 0], [0, 0, 0, 0, 0]]
*/

#include <iostream>
using namespace std;

void moveZeroes(vector<vector<int>>& grid) {
    int m = grid.size(), n = grid[0].size();
    for (int i = 0; i < m; ++i) {
        bool hasNonZero = false;
        for (int j = 0; j < n; ++j) {
            if (grid[i][j]!= 0) {
                swap(grid[i][j], grid[i][hasNonZero]);
                hasNonZero++;
            }
        }
    }
}

int main() {
    vector<vector<int>> input = {{0, 0, 0, 7, 0}, {9, 1, 5, 0, 0}, {9, 1, 0, 7, 4}, {0, 1, 5, 0, 0}, {9, 0, 0, 7, 0}};
    moveZeroes(input);
    cout << "Output:" << endl;
    for (auto &row : input) {
        for (auto &num : row) {
            cout << num <<'';
        }
        cout << endl;
    }
    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [9, 1, 0, 7, 0], [9, 1, 5, 7, 0], [9, 1, 5, 7, 4]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.027586206896551724

cat_success_cnt: 0

cat_success_rate: 0.0

