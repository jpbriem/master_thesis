
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 2, 0, 0, 0], [0, 2, 0, 0, 5], [4, 0, 6, 1, 5], [0, 0, 0, 1, 0], [0, 2, 0, 1, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 2, 0, 1, 0], [0, 2, 0, 1, 5], [4, 2, 6, 1, 5]]

Example_2:
input: [[2, 0, 0, 0], [0, 0, 0, 0], [2, 1, 0, 7], [0, 0, 6, 7]]
output: [[0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 0, 7], [2, 1, 6, 7]]

Example_3:
input: [[0, 0, 0, 4, 6], [2, 9, 0, 4, 6], [0, 0, 0, 4, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 4, 0], [0, 0, 0, 4, 6], [2, 9, 1, 4, 6]]

Test case:
input: [[8, 0, 0, 1, 4], [8, 0, 9, 0, 0], [0, 0, 9, 1, 0], [0, 2, 0, 0, 0], [0, 0, 0, 1, 0]]

###########################################################
Sample Outputs:
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 2, 0, 0, 0], [8, 0, 9, 1, 4]]
*/

#include <iostream>
using namespace std;

void moveZeroes(vector<vector<int>>& grid) {
    int m = grid.size(), n = grid[0].size();
    for (int i = 0; i < m; ++i) {
        bool hasNonZero = false;
        for (int j = 0; j < n; ++j) {
            if (grid[i][j]!= 0) {
                swap(grid[i][j], grid[i][hasNonZero]);
                hasNonZero++;
            }
        }
    }
}

int main() {
    vector<vector<int>> input = {{0, 2, 0, 0, 0}, {0, 2, 0, 0, 5}, {4, 0, 6, 1, 5}, {0, 0, 0, 1, 0}, {0, 2, 0, 1, 0}};
    moveZeroes(input);
    cout << "[";
    for (auto &row : input) {
        cout << "[";
        for (auto &num : row) {
            cout << num << ", ";
        }
        cout << "]\n";
    }
    cout << "]" << endl;
    return 0;
}


###########################################################
Result:
solution: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [8, 0, 9, 1, 0], [8, 2, 9, 1, 4]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.028169014084507043

cat_success_cnt: 0

cat_success_rate: 0.0

