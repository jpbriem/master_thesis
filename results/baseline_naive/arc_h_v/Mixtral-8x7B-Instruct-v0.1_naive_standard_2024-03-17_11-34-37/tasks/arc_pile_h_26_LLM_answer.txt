
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 9, 0, 9], [0, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
output: [[6, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [9, 9, 0, 0, 0, 0], [8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]

Example_2:
input: [[0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0], [3, 3, 3, 0, 0, 0], [9, 0, 0, 9, 9, 0], [0, 0, 6, 6, 6, 0], [0, 8, 8, 0, 0, 8]]
output: [[2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [3, 3, 3, 0, 0, 0], [9, 9, 9, 0, 0, 0], [6, 6, 6, 0, 0, 0], [8, 8, 8, 0, 0, 0]]

Example_3:
input: [[3, 0, 3, 3, 0], [8, 0, 8, 0, 0], [0, 0, 5, 5, 0], [0, 1, 0, 0, 1], [0, 0, 0, 0, 9]]
output: [[3, 3, 3, 0, 0], [8, 8, 0, 0, 0], [5, 5, 0, 0, 0], [1, 1, 0, 0, 0], [9, 0, 0, 0, 0]]

Test case:
input: [[0, 0, 9, 0, 0], [3, 0, 0, 0, 0], [6, 0, 0, 6, 6], [0, 0, 5, 0, 5], [0, 0, 1, 0, 0]]

###########################################################
Sample Outputs:
output: [[9, 0, 9, 0, 0], [3, 0, 0, 0, 0], [6, 0, 6, 6, 6], [5, 0, 5, 0, 5], [1, 0, 1, 0, 1]]
*/

#include <iostream>
using namespace std;

void fill(int** arr, int n) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j) {
			if (!arr[i][j]) continue;
			for (int k = 0; k < n; ++k) {
				if (k == j ||!arr[i][k] && arr[i][j]!= -1) {
					arr[i][k] = arr[i][j];
				}
			}
			for (int k = 0; k < n; ++k) {
				if (k == i ||!arr[k][j] && arr[i][j]!= -1) {
					arr[k][j] = arr[i][j];
				}
			}
			arr[i][j] = -1;
		}
	}
}

void printArr(int** arr, int n) {
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j) {
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
}

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int** arr = new int* [n];
		for (int i = 0; i < n; ++i) {
			arr[i] = new int[n];
			for (int j = 0; j < n; ++j) {
				cin >> arr[i][j];
			}
		}
		fill(arr, n);
		printArr(arr, n);
		for (int i = 0; i < n; ++i) delete[] arr[i];
		delete[] arr;
	}
	return 0;
}


###########################################################
Result:
solution: [[9, 0, 0, 0, 0], [3, 0, 0, 0, 0], [6, 6, 6, 0, 0], [5, 5, 0, 0, 0], [1, 0, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.031818181818181815

cat_success_cnt: 0

cat_success_rate: 0.0

