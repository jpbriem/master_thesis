
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['a', 'a', 'a', 'a', 'c', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'e', 'j', 'c', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'i']]
output: [['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'c', 'a'], ['a', 'a', 'e', 'j', 'c', 'i']]

Example_2:
input: [['i', 'a', 'a', 'a', 'a'], ['i', 'e', 'a', 'a', 'a'], ['i', 'a', 'c', 'a', 'a'], ['a', 'e', 'c', 'a', 'g'], ['a', 'a', 'c', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['i', 'a', 'c', 'a', 'a'], ['i', 'e', 'c', 'a', 'a'], ['i', 'e', 'c', 'a', 'g']]

Example_3:
input: [['a', 'a', 'a', 'a', 'a'], ['b', 'a', 'a', 'a', 'a'], ['a', 'a', 'e', 'i', 'g'], ['b', 'a', 'a', 'a', 'g'], ['b', 'd', 'a', 'i', 'a']]
output: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['b', 'a', 'a', 'a', 'a'], ['b', 'a', 'a', 'i', 'g'], ['b', 'd', 'e', 'i', 'g']]

Test case:
input: [['f', 'a', 'a', 'a'], ['a', 'h', 'g', 'a'], ['a', 'a', 'a', 'b'], ['a', 'a', 'g', 'b']]

###########################################################
Sample Outputs:
output: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['a', 'h', 'g', 'a'], ['f', 'a', 'g', 'b']]
*/

public class Solution {
    public String[][] expand(String[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return matrix;
        int m = matrix.length, n = matrix[0].length;
        boolean[] rowFlag = new boolean[m];
        boolean[] colFlag = new boolean[n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (matrix[i][j]!= 'a') {
                    rowFlag[i] = true;
                    colFlag[j] = true;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            if (!rowFlag[i]) continue;
            for (int j = 0; j < n; j++) {
                if (colFlag[j]) matrix[i][j] = matrix[i][0];
            }
        }
        for (int j = 0; j < n; j++) {
            if (!colFlag[j]) continue;
            for (int i = 0; i < m; i++) {
                if (rowFlag[i]) matrix[i][j] = matrix[0][j];
            }
        }
        return matrix;
    }
}


###########################################################
Result:
solution: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['a', 'a', 'g', 'b'], ['f', 'h', 'g', 'b']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.015037593984962405

cat_success_cnt: 0

cat_success_rate: 0.0

