
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', 'b', 'b', '.'], ['g', '.', 'g', '.', '.'], ['.', '.', '.', 'i', '.']]
output: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['b', 'b', '.', '.', '.'], ['g', 'g', '.', '.', '.'], ['i', '.', '.', '.', '.']]

Example_2:
input: [['.', '.', '.', 'g', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', 'e', '.', '.'], ['.', 'h', 'h', 'h', '.', '.']]
output: [['g', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['e', '.', '.', '.', '.', '.'], ['h', 'h', 'h', '.', '.', '.']]

Example_3:
input: [['.', '.', '.', 'g', '.'], ['.', 'a', '.', 'a', 'a'], ['.', '.', '.', '.', 'i'], ['e', '.', 'e', 'e', '.'], ['.', '.', '.', '.', '.']]
output: [['g', '.', '.', '.', '.'], ['a', 'a', 'a', '.', '.'], ['i', '.', '.', '.', '.'], ['e', 'e', 'e', '.', '.'], ['.', '.', '.', '.', '.']]

Test case:
input: [['g', 'g', '.', 'g'], ['.', '.', 'f', 'f'], ['c', '.', 'c', 'c'], ['.', 'b', '.', '.']]

###########################################################
Sample Outputs:
output: [['g', 'g', '.', 'g'], ['.', '.', 'f', 'f'], ['c', 'c', 'c', '.'], ['.', 'b', '.', '.']]
*/

public class Solution {
    public char[][] rotate(char[][] matrix) {
        int n = matrix.length;
        for (int i = 0; i < n / 2 + 1; ++i) {
            for (int j = i; j < n - i - 1; ++j) {
                char tmp = matrix[i][j];
                matrix[i][j] = matrix[n - j - 1][i];
                matrix[n - j - 1][i] = matrix[n - i - 1][n - j - 1];
                matrix[n - i - 1][n - j - 1] = matrix[j][n - i - 1];
                matrix[j][n - i - 1] = tmp;
            }
        }
        return matrix;
    }
}


###########################################################
Result:
solution: [['g', 'g', 'g', '.'], ['f', 'f', '.', '.'], ['c', 'c', 'c', '.'], ['b', '.', '.', '.']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.008438818565400843

cat_success_cnt: 1

cat_success_rate: 0.02702702702702703

