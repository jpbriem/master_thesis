
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['.', '.', '.', '.', '.'], ['.', 'g', 'g', 'g', '.'], ['a', 'a', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.'], ['g', 'g', 'g', '.', '.'], ['a', 'a', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]

Example_2:
input: [['d', '.', '.', 'd', 'd'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['h', '.', 'h', 'h', '.'], ['.', '.', '.', '.', '.']]
output: [['d', 'd', 'd', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['h', 'h', 'h', '.', '.'], ['.', '.', '.', '.', '.']]

Example_3:
input: [['d', '.', '.', '.', 'd'], ['c', '.', '.', '.', '.'], ['h', '.', '.', '.', '.'], ['i', '.', '.', 'i', '.'], ['a', 'a', '.', '.', '.']]
output: [['d', 'd', '.', '.', '.'], ['c', '.', '.', '.', '.'], ['h', '.', '.', '.', '.'], ['i', 'i', '.', '.', '.'], ['a', 'a', '.', '.', '.']]

Test case:
input: [['.', 'i', 'i', '.', '.', '.'], ['.', '.', '.', 'c', 'c', 'c'], ['.', '.', '.', 'g', '.', 'g'], ['.', '.', 'd', 'd', '.', 'd'], ['.', '.', 'b', '.', 'b', '.'], ['f', '.', '.', '.', '.', '.']]

###########################################################
Sample Outputs:
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', 'c', 'c', 'c'], ['.', '.', '.', 'g', '.', 'g'], ['.', '.', 'd', 'd', '.', 'd'], ['.', '.', 'b', '.', 'b', '.'], ['f', 'f', '.', '.', '.', '.']]
*/

// Solution 1:
/*
function moveElementToEnd(array) {
    let left = 0;
    let right = array.length - 1;

    while (left < right) {
        if (array[right] === ".") {
            right--;
        } else if (array[left]!== ".") {
            [array[left], array[right]] = [array[right], array[left]];
            left++;
            right--;
        } else {
            left++;
        }
    }

    return array;
}
*/

// Solution 2:
const moveElementToEnd = arr => {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i]!== ".") {
            let j = i + 1;
            while (j < arr.length && arr[j] === ".") {
                j++;
            }
            if (j < arr.length) {
                [arr[i], arr[j]] = [arr[j], arr[i]];
            }
        }
    }
    return arr;
};

console.log(moveElementToEnd([['.', '.', '.', '.', '.'], ['.', 'g', 'g', 'g', '.'], ['a', 'a', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']])) // [['.', '.', '.', '.', '.'], ['g', 'g', 'g', '.', '.'], ['a', 'a', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]
console.log(moveElementToEnd([['d', '.', '.', 'd', 'd'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['h', '.', 'h', 'h', '.'], ['.', '.', '.', '.', '.']])) // [['d', 'd', 'd', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['h', 'h', 'h', '.', '.'], ['.', '.', '.', '.', '.']]
console.log(moveElementToEnd([['d', '.', '.', '.', 'd'], ['c', '.', '.', '.', '.'], ['h', '.', '.', '.', '.'], ['i', '.', '.', 'i', '.'], ['a', 'a', '.', '.', '.']])) // [['d', 'd', '.', '.', '.'], ['c', '.', '.', '.', '.'], ['h', '.', '.', '.', '.'], ['i', 'i', '.', '.', '.'], ['a', 'a', '.', '.', '.']]
console.log(moveElementToEnd([['.', 'i', 'i', '.', '.', '.'], ['.', '.', '.', 'c', 'c', 'c'], ['.', '.', '.', 'g', '.', 'g'], ['.', '.', 'd', 'd', '.', 'd'], ['.', '.', 'b', '.', 'b', '.'], ['f', '.', '.', '.', '.', '.']])) // [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', 'c', 'c', 'c'], ['.', '.', '.', 'g', '.', 'g'], ['.', '.', 'd', 'd', '.', 'd'], ['.', '.', 'b', '.', 'b', '.'], ['f', 'f', '.', '.', '.', '.']]


###########################################################
Result:
solution: [['i', 'i', '.', '.', '.', '.'], ['c', 'c', 'c', '.', '.', '.'], ['g', 'g', '.', '.', '.', '.'], ['d', 'd', 'd', '.', '.', '.'], ['b', 'b', '.', '.', '.', '.'], ['f', '.', '.', '.', '.', '.']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.004405286343612335

cat_success_cnt: 0

cat_success_rate: 0.0

