
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['c', '.', 'd', '.', '.'], ['.', '.', 'd', '.', '.'], ['.', 'f', '.', '.', '.'], ['c', 'f', 'd', '.', 'a'], ['.', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', 'd', '.', '.'], ['c', 'f', 'd', '.', '.'], ['c', 'f', 'd', '.', 'a']]

Example_2:
input: [['d', 'c', '.', 'f'], ['.', '.', '.', '.'], ['.', 'c', '.', 'f'], ['d', 'c', '.', '.']]
output: [['.', '.', '.', '.'], ['.', 'c', '.', '.'], ['d', 'c', '.', 'f'], ['d', 'c', '.', 'f']]

Example_3:
input: [['.', '.', 'h', 'a'], ['c', 'f', 'h', 'a'], ['c', 'f', '.', '.'], ['c', '.', 'h', 'a']]
output: [['.', '.', '.', '.'], ['c', '.', 'h', 'a'], ['c', 'f', 'h', 'a'], ['c', 'f', 'h', 'a']]

Test case:
input: [['f', '.', '.', 'b'], ['.', 'e', 'a', '.'], ['f', '.', '.', '.'], ['.', '.', '.', 'b']]

###########################################################
Sample Outputs:
output: [['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', 'e', 'a', 'b']]
*/

public class Solution {
    public String[][] removeInvalid(String[][] input) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < input.length; ++i) {
            boolean isValid = true;
            int j = 0;
            while (j < input[i].length && isValid) {
                if (input[i][j].equals(".")) {
                    ++j;
                } else {
                    char c = input[i][j].charAt(0);
                    if (!stack.isEmpty() && stack.peek() == c - 1) {
                        stack.pop();
                        ++j;
                    } else if (j + 1 < input[i].length && input[i][j+1].equals(".") && input[i][j+2]!= ".") {
                        stack.push((int)(input[i][j+2].charAt(0)));
                        j += 3;
                    } else {
                        isValid = false;
                    }
                }
            }
            if (isValid) {
                StringBuilder sb = new StringBuilder();
                while (!stack.isEmpty()) {
                    sb.append((char)(stack.pop()));
                }
                sb.reverse().insert(0, "[");
                sb.append(",.");
                sb.append(input[i]);
                sb.append("]");
                System.out.println(sb.toString());
            }
        }
        return null;
    }
}


###########################################################
Result:
solution: [['.', '.', '.', '.'], ['.', '.', '.', '.'], ['f', '.', '.', 'b'], ['f', 'e', 'a', 'b']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.01171875

cat_success_cnt: 0

cat_success_rate: 0.0

