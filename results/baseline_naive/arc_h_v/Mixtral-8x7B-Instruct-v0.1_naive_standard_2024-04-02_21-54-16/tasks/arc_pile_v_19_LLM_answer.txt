
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['.', 'a', '.', '.'], ['.', 'a', 'b', '.'], ['.', '.', '.', '.'], ['.', 'a', '.', '.']]
output: [['.', '.', '.', '.'], ['.', 'a', '.', '.'], ['.', 'a', '.', '.'], ['.', 'a', 'b', '.']]

Example_2:
input: [['a', '.', '.', '.'], ['a', '.', 'b', 'e'], ['a', '.', '.', 'e'], ['.', '.', '.', '.']]
output: [['.', '.', '.', '.'], ['a', '.', '.', '.'], ['a', '.', '.', 'e'], ['a', '.', 'b', 'e']]

Example_3:
input: [['h', '.', '.', '.', '.'], ['.', '.', '.', 'i', '.'], ['.', '.', '.', '.', 'd'], ['.', '.', '.', 'i', '.'], ['.', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', 'i', '.'], ['h', '.', '.', 'i', 'd']]

Test case:
input: [['.', 'c', '.', 'f'], ['.', 'c', '.', '.'], ['e', 'c', '.', '.'], ['.', '.', 'g', '.']]

###########################################################
Sample Outputs:
output: [[.,.,., f], [., c,.,.], [., c, g,.], [.,.,.,.]]
*/

// Solution 1:
class Solution {
    public void moveZeroes(int[] nums) {
        int len = nums.length;
        if (len == 0 || len == 1) return;

        // find the first zero index
        for (int i=0; i<len-1 && nums[i]!= 0; ++i);
        int j = i+1;

        while (j < len) {
            if (nums[j]!= 0) {
                swap(nums, i++, j);
            }
            j++;
        }
    }

    private void swap(int[] arr, int a, int b) {
        int tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}

// Solution 2:
class Solution {
    public void moveZeroes(int[] nums) {
        int len = nums.length;
        if (len == 0 || len == 1) return;

        int lastNonZeroIndex = -1;
        for (int i=0; i<len; ++i) {
            if (nums[i]!= 0) {
                lastNonZeroIndex++;
                swap(nums, lastNonZeroIndex, i);
            }
        }
    }

    private void swap(int[] arr, int a, int b) {
        int tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}


###########################################################
Result:
solution: [['.', '.', '.', '.'], ['.', 'c', '.', '.'], ['.', 'c', '.', '.'], ['e', 'c', 'g', 'f']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.011450381679389313

cat_success_cnt: 0

cat_success_rate: 0.0

