Input token: 645
Output token: 447
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'h], ['i', 'e', 'b', 'a', 'a', 'a], ['a', 'e', 'a', 'a', 'c', 'a], ['a', 'e', 'a', 'd', 'a', 'h], ['a', 'a', 'a', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'e', 'a', 'a', 'a', 'a], ['a', 'e', 'a', 'a', 'a', 'h], ['i', 'e', 'b', 'd', 'c', 'h']]

Example_2:
input: [['a', 'a', 'a', 'e], ['a', 'j', 'a', 'a], ['a', 'j', 'a', 'e], ['a', 'j', 'a', 'e']]
output: [['a', 'a', 'a', 'a], ['a', 'j', 'a', 'e], ['a', 'j', 'a', 'e], ['a', 'j', 'a', 'e']]

Example_3:
input: [['a', 'g', 'a', 'h', 'a], ['a', 'a', 'i', 'a', 'a], ['a', 'a', 'i', 'a', 'a], ['a', 'g', 'a', 'h', 'a], ['a', 'a', 'i', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a], ['a', 'a', 'i', 'a', 'a], ['a', 'g', 'i', 'h', 'a], ['a', 'g', 'i', 'h', 'a']]

Test case:
input: [['h', 'a', 'c', 'a', 'a', 'a], ['h', 'd', 'a', 'j', 'a', 'a], ['a', 'd', 'a', 'j', 'i', 'e], ['a', 'a', 'c', 'a', 'a', 'a], ['h', 'd', 'c', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'e']]
################################################################

LLM answer:

output: [['h', 'a', 'c', 'a', 'a', 'a], ['h', 'd', 'a', 'j', 'a', 'a'], ['a', 'd', 'a', 'j', 'i', 'e'], ['a', 'a', 'c', 'a', 'a', 'a]]
"""
import sys
from collections import defaultdict, deque
from typing import List, Tuple


def get_input(filename):
    with open(filename) as f:
        return list(f.readlines())


def get_output(filename):
    with open(filename) + '.out' as f:
        return list(f.readlines())


def part1():
    """
    :return: int
    """
    input = get_input('./day05/input')
    output = get_output('./day05/output')
    result = 0
    for i in range(len(input)):
        if (input[i][0] == 'a'):
            result += 1
        elif (input[i][0] == 'h'):
            result -= 1
        else:
            continue
    print("Part 1:", result)
    return result


def part2():
    """
    :return: int
    """
    input = get_input('./day05/input')
    output = get_output('./day05/output')
    result = 0
    for i in range(len(input)):
        if (input[i][0] == 'a'):
            result += 1
        elif (input[i][0] == 'h'):
            result -= 1
        else:
            continue
    print("Part 2:", result)
    return result


if __name__ == "__main__":
    # part1()
    # part2()

################################################################

Solution:
[['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['h', 'd', 'c', 'a', 'a', 'a], ['h', 'd', 'c', 'j', 'a', 'e], ['h', 'd', 'c', 'j', 'i', 'e']]

