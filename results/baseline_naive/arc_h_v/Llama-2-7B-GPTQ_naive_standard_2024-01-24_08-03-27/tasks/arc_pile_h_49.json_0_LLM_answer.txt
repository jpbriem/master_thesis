Input token: 465
Output token: 314
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['h', 'a', 'a', 'h], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'j', 'j', 'j']]
output: [['h', 'h', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['j', 'j', 'j', 'a']]

Example_2:
input: [['a', 'f', 'f', 'f', 'a], ['c', 'a', 'a', 'c', 'c], ['a', 'a', 'a', 'a', 'g], ['a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a']]
output: [['f', 'f', 'f', 'a', 'a], ['c', 'c', 'c', 'a', 'a], ['g', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a']]

Example_3:
input: [['j', 'j', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['h', 'a', 'h', 'h']]
output: [['j', 'j', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['h', 'h', 'h', 'a']]

Test case:
input: [['a', 'b', 'a', 'a], ['a', 'a', 'a', 'j], ['a', 'a', 'h', 'h], ['a', 'a', 'g', 'a']]
################################################################

LLM answer:

output: [['a', 'b', 'a', 'a], ['a', 'a', 'a', 'j'], ['a', 'a', 'h', 'h'], ['a', 'a', 'g', 'a']]
"""
import collections
from typing import List, Optional, Tuple


def get_transformed(inputs: List[str]) -> List[Tuple[int, str]]:
    """Return a list of transformed indices."""
    return [(i + 1) for i in range(len(inputs))]


def get_untransformed(indices: List[Tuple[int, str]]) -> List[str]:
    """Return a list of untransformed strings."""
    return ["".join([char if char!= "a" else "j" for char in s]) for s in inputs]


if __name__ == "__main__":
    print("Input:")
    print("\t", "\n".join(["\t".join(map(lambda x: f'{x}'.center(4), x)) for x in inputs]))
    print()
    print("Output:")
    print("\t", "\n".join(["\t".join(map(lambda x: f'{x}' if x < len(inputs) - 1 else "", x)) for x in outputs]))

################################################################

Solution:
[['b', 'a', 'a', 'a], ['j', 'a', 'a', 'a], ['h', 'h', 'a', 'a], ['g', 'a', 'a', 'a']]

