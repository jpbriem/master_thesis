Input token: 651
Output token: 461
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'a', 'f', 'a', 'a', 'a], ['a', 'a', 'a', 'b', 'a', 'a], ['g', 'a', 'f', 'a', 'a', 'd], ['a', 'c', 'a', 'b', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'd']]
output: [['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'f', 'b', 'a', 'd], ['g', 'c', 'f', 'b', 'a', 'd']]

Example_2:
input: [['a', 'a', 'a', 'a', 'a', 'j], ['a', 'a', 'a', 'a', 'a', 'j], ['a', 'a', 'c', 'a', 'a', 'j], ['d', 'a', 'c', 'h', 'a', 'a], ['d', 'a', 'c', 'a', 'a', 'a], ['d', 'f', 'a', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a', 'a], ['d', 'a', 'c', 'a', 'a', 'j], ['d', 'a', 'c', 'a', 'a', 'j], ['d', 'f', 'c', 'h', 'a', 'j']]

Example_3:
input: [['a', 'a', 'a', 'a], ['a', 'a', 'a', 'j], ['a', 'a', 'a', 'j], ['a', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'j], ['a', 'a', 'a', 'j']]

Test case:
input: [['d', 'a', 'f', 'i], ['a', 'g', 'f', 'i], ['d', 'g', 'a', 'i], ['a', 'g', 'a', 'a']]
################################################################

LLM answer:

output: [['d', 'a', 'f', 'i'], ['a', 'g', 'f', 'i'], ['d', 'g', 'a', 'i'], ['a', 'g', 'a', 'a']]
"""
import sys
from collections import defaultdict, deque
from typing import List, Tuple


def get_input(filename):
    with open(filename) as f:
        return list(map(''.join, map(lambda x: tuple(x), f)))


def get_output(filename):
    with open(filename) + '.out' as f:
        return list(map(''.join, map(lambda x: tuple(x), f)))


def main():
    filename = sys.argv[1] if len(sys.argv) > 1 else "input.txt"
    input_list = get_input(filename)
    output_list = get_output(filename)

    # 0. 입력과 출력의 길이가 일치하는지 확인한다.
    assert len(input_list) == len(output_list)

    # 1. 첫 번째 요소를 기준으로 비교해서 동일한 경우에만 연산자를 사용한다.
    for i in range(len(input_list)):
        if input_list[i][0]!= output_list[i][0]:
            break
        elif input_list[i][0] == output_list[i][0]:
            if input_list[i][1:]!= output_list[i][1:]:
                print("Input", input_list[i])
                print("Output", output_list[i])
                raise ValueError()


if __name__ == '__main__':
    main()
################################################################

Solution:
[['a', 'a', 'a', 'a], ['a', 'g', 'a', 'i], ['d', 'g', 'f', 'i], ['d', 'g', 'f', 'i']]

