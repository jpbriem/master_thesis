Input token: 411
Output token: 199
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['i', 'a', 'a', 'a], ['d', 'd', 'd', 'a], ['a', 'a', 'c', 'a], ['a', 'b', 'b', 'a']]
output: [['i', 'a', 'a', 'a], ['d', 'd', 'd', 'a], ['c', 'a', 'a', 'a], ['b', 'b', 'a', 'a']]

Example_2:
input: [['c', 'a', 'a', 'a], ['h', 'a', 'h', 'h], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a']]
output: [['c', 'a', 'a', 'a], ['h', 'h', 'h', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a']]

Example_3:
input: [['a', 'e', 'e', 'e], ['b', 'a', 'a', 'a], ['a', 'f', 'f', 'a], ['a', 'a', 'a', 'a']]
output: [['e', 'e', 'e', 'a], ['b', 'a', 'a', 'a], ['f', 'f', 'a', 'a], ['a', 'a', 'a', 'a']]

Test case:
input: [['j', 'a', 'a', 'a], ['a', 'g', 'g', 'g], ['a', 'a', 'f', 'a], ['a', 'd', 'a', 'a']]
################################################################

LLM answer:

output: [['j', 'a', 'a', 'a], ['a', 'g', 'g', 'g], ['f', 'a', 'a', 'a], ['d', 'a', 'a', 'a']]
*/
public class Solution {
    public int[][] sortTheStudents(int[][] students, String[] sorts) {
        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < sorts.length; i++) {
            if (!map.containsKey(sorts[i])) {
                map.put(sorts[i], i);
            }
        }
        Arrays.sort((students), Comparator.comparingInt(o -> map.get(o[1])).thenComparingInt(o -> o[0]));
        return students;
    }
}
################################################################

Solution:
[['j', 'a', 'a', 'a], ['g', 'g', 'g', 'a], ['f', 'a', 'a', 'a], ['d', 'a', 'a', 'a']]

