Input token: 411
Output token: 245
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'f', 'a', 'a], ['a', 'a', 'b', 'a], ['a', 'f', 'a', 'a], ['a', 'a', 'b', 'i']]
output: [['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'f', 'b', 'a], ['a', 'f', 'b', 'i']]

Example_2:
input: [['a', 'a', 'a', 'a], ['j', 'a', 'a', 'a], ['a', 'b', 'a', 'a], ['a', 'a', 'a', 'c']]
output: [['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['j', 'b', 'a', 'c']]

Example_3:
input: [['a', 'a', 'a', 'a], ['d', 'a', 'a', 'a], ['d', 'i', 'a', 'a], ['a', 'i', 'a', 'a']]
output: [['a', 'a', 'a', 'a], ['a', 'a', 'a', 'a], ['d', 'i', 'a', 'a], ['d', 'i', 'a', 'a']]

Test case:
input: [['f', 'h', 'a', 'a], ['a', 'a', 'a', 'd], ['a', 'h', 'c', 'd], ['f', 'h', 'a', 'd']]
################################################################

LLM answer:

output: [['f', 'h', 'a', 'a], ['a', 'a', 'a', 'd], ['a', 'h', 'c', 'd], ['f', 'h', 'a', 'd']]
*/
public class Solution {
    public List<List<String>> replaceWords(List<List<String>> dict, String sentence) {
        Set<String> set = new HashSet<>();
        for (List<String> list : dict) {
            set.add(list.get(0));
        }
        StringBuilder sb = new StringBuilder();
        List<List<String>> res = new ArrayList<>();
        for (int i = 0; i < sentence.length(); i++) {
            if (set.contains(sb.toString())) {
                res.add(Arrays.asList(sentence.substring(0, i + 1)));
                break;
            } else {
                sb.append(sentence.charAt(i));
            }
        }
        return res;
    }
}
################################################################

Solution:
[['a', 'a', 'a', 'a], ['a', 'h', 'a', 'd], ['f', 'h', 'a', 'd], ['f', 'h', 'c', 'd']]

