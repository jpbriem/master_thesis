Input token: 465
Output token: 247
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'a', 'a', 'a], ['b', 'a', 'b', 'b], ['a', 'a', 'c', 'a], ['a', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a], ['b', 'b', 'b', 'a], ['c', 'a', 'a', 'a], ['a', 'a', 'a', 'a']]

Example_2:
input: [['a', 'b', 'b', 'b], ['a', 'a', 'a', 'a], ['a', 'a', 'c', 'a], ['a', 'f', 'f', 'a']]
output: [['b', 'b', 'b', 'a], ['a', 'a', 'a', 'a], ['c', 'a', 'a', 'a], ['f', 'f', 'a', 'a']]

Example_3:
input: [['a', 'a', 'a', 'a', 'i], ['a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a], ['a', 'j', 'a', 'j', 'a], ['a', 'a', 'e', 'a', 'a']]
output: [['i', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a], ['a', 'a', 'a', 'a', 'a], ['j', 'j', 'a', 'a', 'a], ['e', 'a', 'a', 'a', 'a']]

Test case:
input: [['a', 'f', 'a', 'a], ['a', 'd', 'd', 'd], ['h', 'a', 'a', 'a], ['a', 'a', 'a', 'g']]
################################################################

LLM answer:

output: [['f', 'f', 'a', 'a'], ['d', 'd', 'd', 'd'], ['h', 'h', 'a', 'a'], ['g', 'g', 'a', 'a']]
*/
public class Solution {
    public List<List<String>> replaceElements(List<List<String>> A) {
        int n = A.size();
        for (int i=0; i<n; ++i){
            String max = "";
            for (int j=0; j<A.get(i).size(); ++j){
                if (!max.equals("")){
                    if (A.get(i).get(j).compareTo(max)>0){
                        max = A.get(i).get(j);
                    }
                }else{
                    max = A.get(i).get(j);
                }
            }
            A.set(i, new ArrayList<>(Arrays.asList(max)));
        }
        return A;
    }
}
################################################################

Solution:
[['f', 'a', 'a', 'a], ['d', 'd', 'd', 'a], ['h', 'a', 'a', 'a], ['g', 'a', 'a', 'a']]

