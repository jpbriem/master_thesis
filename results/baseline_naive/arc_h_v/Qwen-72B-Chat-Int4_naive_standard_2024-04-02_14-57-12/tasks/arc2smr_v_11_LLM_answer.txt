
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.', '.'], ['e', '.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.', '.'], ['e', '.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.', '.'], ['e', '.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.', '.'], ['e', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.', '.'], ['e', '.', 'g', '.', '.', '.'], ['g', '.', 'e', '.', '.', '.'], ['e', '.', 'g', '.', '.', '.'], ['g', '.', 'e', '.', '.', '.'], ['e', '.', 'g', '.', '.', '.'], ['g', '.', 'e', '.', '.', '.'], ['e', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', 'g', '.'], ['.', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.']]

Example_2:
input: [['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', 'e', 'e', '.'], ['e', '.', '.', '.'], ['.', 'e', 'e', '.'], ['e', '.', '.', '.'], ['.', 'e', 'e', '.'], ['e', '.', '.', '.'], ['.', 'e', 'e', '.'], ['e', '.', '.', '.'], ['.', '.', 'e', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.']]
output: [['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', 'e', 'e', '.'], ['e', 'g', 'g', '.'], ['g', 'e', 'e', '.'], ['e', 'g', 'g', '.'], ['g', 'e', 'e', '.'], ['e', 'g', 'g', '.'], ['g', 'e', 'e', '.'], ['e', '.', 'g', '.'], ['.', '.', 'e', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', '.']]

Example_3:
input: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.'], ['e', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.'], ['e', '.', '.', '.', '.'], ['.', '.', 'e', 'e', '.'], ['e', '.', '.', '.', '.'], ['.', '.', 'e', 'e', '.'], ['e', '.', '.', '.', '.'], ['.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', 'e', '.', '.'], ['e', '.', 'g', '.', '.'], ['g', '.', 'e', '.', '.'], ['e', '.', 'g', '.', '.'], ['g', '.', 'e', 'e', '.'], ['e', '.', 'g', 'g', '.'], ['g', '.', 'e', 'e', '.'], ['e', '.', '.', 'g', '.'], ['.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]

Test case:
input: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', 'e', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', 'e', '.', '.', '.', '.'], ['e', '.', '.', '.', '.', '.'], ['.', 'e', '.', '.', 'e', '.'], ['e', '.', 'e', '.', '.', '.'], ['.', 'e', '.', '.', 'e', '.'], ['e', '.', 'e', '.', '.', '.'], ['.', 'e', '.', '.', 'e', '.'], ['e', '.', 'e', '.', '.', '.'], ['.', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.']]



###########################################################
Sample Outputs:
```python
def boggle_grid(grid):
    # Your code here
    pass

# Test cases
print(boggle_grid([['.', '.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.', '.'],
                   ['.', 'e', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.', '.'],
                   ['.', 'e', '.', '.', '.', '.'],
                   ['e', '.', '.', '.', '.', '.'],
                   ['.', 'e', '.', '.', 'e', '.'],
                   ['e', '.', 'e', '.', '.', '.'],
                   ['.', 'e', '.', '.', 'e', '.'],
                   ['e', '.', 'e', '.', '.', '.'],
                   ['.', 'e', '.', '.', 'e', '.'],
                   ['e', '.', 'e', '.', '.', '.'],
                   ['.', '.', '.', '.', 'e', '.'],
                   ['.', '.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.', '.']]))

print(boggle_grid([['.', '.', '.', '.'],
                   ['.', '.', '.', '.'],
                   ['.', '.', '.', '.'],
                   ['.', '.', '.', '.'],
                   ['.', 'e', 'e', '.'],
                   ['e', '.', '.', '.'],
                   ['.', 'e', 'e', '.'],
                   ['e', '.', '.', '.'],
                   ['.', 'e', 'e', '.'],
                   ['e', '.', '.', '.'],
                   ['.', 'e', 'e', '.'],
                   ['e', '.', '.', '.'],
                   ['.', '.', 'e', '.'],
                   ['.', '.', '.', '.'],
                   ['.', '.', '.', '.'],
                   ['.', '.', '.', '.']]))

print(boggle_grid([['.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.'],
                   ['.', '.', 'e', '.', '.'],
                   ['e', '.', '.', '.', '.'],
                   ['.', '.', 'e', '.', '.'],
                   ['e', '.', '.', '.', '.'],
                   ['.', '.', 'e', 'e', '.'],
                   ['e', '.', '.', '.', '.'],
                   ['.', '.', 'e', 'e', '.'],
                   ['e', '.', '.', '.', '.'],
                   ['.', '.', '.', 'e', '.'],
                   ['.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.']]))
```

The above code is a stub for the `boggle_grid` function. You need to implement the function to solve the problem and remove the `pass` statement.


###########################################################
Result:
solution: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', 'e', '.', '.', '.', '.'], ['.', 'g', '.', '.', '.', '.'], ['.', 'e', '.', '.', '.', '.'], ['e', 'g', '.', '.', '.', '.'], ['g', 'e', '.', '.', 'e', '.'], ['e', 'g', 'e', '.', 'g', '.'], ['g', 'e', 'g', '.', 'e', '.'], ['e', 'g', 'e', '.', 'g', '.'], ['g', 'e', 'g', '.', 'e', '.'], ['e', '.', 'e', '.', 'g', '.'], ['.', '.', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.']]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.037037037037037035

cat_success_cnt: 0

cat_success_rate: 0.0

