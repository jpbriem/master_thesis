Input token: 341
Output token: 265
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', '.], ['.', 'e', '.', 'e], ['a', '.', 'a', '.], ['h', '.', '.', '.']]
output: [['.', '.', '.', '.], ['e', 'e', '.', '.], ['a', 'a', '.', '.], ['h', '.', '.', '.']]

Example_2:
input: [['.', '.', 'i', '.], ['.', 'a', '.', '.], ['.', '.', '.', '.], ['b', '.', '.', '.']]
output: [['i', '.', '.', '.], ['a', '.', '.', '.], ['.', '.', '.', '.], ['b', '.', '.', '.']]

Example_3:
input: [['.', 'c', 'c', '.], ['h', 'h', '.', '.], ['.', '.', '.', '.], ['.', '.', '.', '.']]
output: [['c', 'c', '.', '.], ['h', 'h', '.', '.], ['.', '.', '.', '.], ['.', '.', '.', '.']]

Test case:
input: [['e', '.', '.', 'e], ['g', 'g', '.', 'g], ['.', 'b', '.', '.], ['c', 'c', 'c', '.']]
################################################################

LLM answer:

output: [['e', '.', '.', 'e'], ['g', 'g', '.', 'g'], ['.', 'b', '.', '.'], ['c', 'c', 'c', '.']]
'''
class Solution(object):
    def rotate(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: None Do not return anything, modify matrix in-place instead.
        """
        if len(matrix) == 0 or len(matrix[0]) == 0:
            return
        n = len(matrix)
        for i in range((n+1)/2):
            for j in range(i, n - i):
                tmp = matrix[j][i]
                matrix[j][i] = matrix[n-i-1][j]
                matrix[n-i-1][j] = matrix[n-j-1][n-i-1]
                matrix[n-j-1][n-i-1] = matrix[i][n-j-1]
                matrix[i][n-j-1] = tmp
################################################################

Solution:
[['e', 'e', '.', '.], ['g', 'g', 'g', '.], ['b', '.', '.', '.], ['c', 'c', 'c', '.']]

