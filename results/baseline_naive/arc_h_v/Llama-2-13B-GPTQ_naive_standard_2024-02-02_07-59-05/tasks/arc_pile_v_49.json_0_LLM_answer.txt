Input token: 465
Output token: 481
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['h', 'a', 'a', 'j'], ['a', 'a', 'a', 'j'], ['a', 'a', 'a', 'j'], ['h', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'j'], ['h', 'a', 'a', 'j'], ['h', 'a', 'a', 'j']]

Example_2:
input: [['a', 'c', 'g', 'a', 'a'], ['f', 'c', 'a', 'a', 'a'], ['f', 'a', 'a', 'a', 'a'], ['f', 'a', 'a', 'a', 'a'], ['a', 'c', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a'], ['f', 'c', 'a', 'a', 'a'], ['f', 'c', 'a', 'a', 'a'], ['f', 'c', 'g', 'a', 'a']]

Example_3:
input: [['a', 'a', 'a', 'h'], ['a', 'a', 'a', 'h'], ['j', 'a', 'a', 'a'], ['j', 'a', 'a', 'h']]
output: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'h'], ['j', 'a', 'a', 'h'], ['j', 'a', 'a', 'h']]

Test case:
input: [['a', 'j', 'h', 'a'], ['a', 'a', 'h', 'g'], ['b', 'a', 'a', 'a'], ['a', 'a', 'a', 'a']]
################################################################

LLM answer:

output: [['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'h'], ['b', 'a', 'a', 'a'], ['a', 'a', 'a', 'a']]
"""

import unittest
from typing import List, Tuple

class Solution:
    def sortArrayByFrequency(self, nums: List[List[str]]) -> None:
        """
        Time complexity: O(n)
        Space complexity: O(n)
        """
        # Write your code here
        if not nums: return
        
        freq = {}  # type: Dict[str, int]
        for word in nums:
            freq[word] += 1
            
        result = []
        for key, value in sorted(freq.items(), key=lambda x: -x[1], reverse=True):
            result.append([key]*value)
        
        for i in range(len(nums)):
            nums[i] = result[i]

if __name__ == "__main__":
    solution = Solution()
    testcase = [
        ["h","a","a","j"],["a","a","a","j"],["a","a","a","j"],["h","a","a","a"]],
        ["a","c","g","a","a"],["f","c","a","a","a"],["f","a","a","a","a"],["f","a","a","a","a"],["a","c","a","a","a"]],
        ["a","a","a","h"],["a","a","a","h"],["j","a","a","a"],["j","a","a","h"]],
        ["a","j","h","a"],["a","a","h","g"],["b","a","a","a"],["a","a","a","a"]]
    
    for tc in testcase:
        print("Input:",tc,"\nOutput:",solution.sortArrayByFrequency(tc))
################################################################

Solution:
[['a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a'], ['a', 'a', 'h', 'a'], ['b', 'j', 'h', 'g']]

