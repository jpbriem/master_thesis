Input token: 651
Output token: 375
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['a', 'a', 'a', 'a', 'f', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'f', 'a'], ['e', 'a', 'a', 'i', 'f', 'a'], ['e', 'a', 'g', 'a', 'a', 'a'], ['a', 'a', 'a', 'i', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'f', 'a'], ['e', 'a', 'a', 'i', 'f', 'a'], ['e', 'a', 'g', 'i', 'f', 'a']]

Example_2:
input: [['a', 'a', 'a', 'b'], ['a', 'c', 'a', 'a'], ['a', 'c', 'h', 'a'], ['a', 'c', 'a', 'a']]
output: [['a', 'a', 'a', 'a'], ['a', 'c', 'a', 'a'], ['a', 'c', 'a', 'a'], ['a', 'c', 'h', 'b']]

Example_3:
input: [['a', 'b', 'a', 'a', 'a', 'a'], ['a', 'b', 'j', 'a', 'a', 'a'], ['a', 'a', 'a', 'h', 'a', 'a'], ['a', 'a', 'j', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'c'], ['a', 'a', 'j', 'a', 'a', 'a']]
output: [['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'a', 'a', 'a', 'a'], ['a', 'a', 'j', 'a', 'a', 'a'], ['a', 'b', 'j', 'a', 'a', 'a'], ['a', 'b', 'j', 'h', 'a', 'c']]

Test case:
input: [['i', 'a', 'a', 'g'], ['i', 'd', 'e', 'g'], ['i', 'd', 'e', 'a'], ['a', 'd', 'e', 'a']]
################################################################

LLM answer:

output: [['i', 'a', 'a', 'a'], ['i', 'd', 'e', 'a'], ['i', 'd', 'e', 'a'], ['a', 'd', 'e', 'a']]
'''

from collections import defaultdict, deque
import sys

def read():
    return sys.stdin.readline().strip()

def solve(input):
    n = len(input)
    dp = [[0 for _ in range(n)] for _ in range(n)]
    for i in range(n):
        if input[i][0] == 'a':
            dp[i][0] = 1
        elif input[i][0] == 'b':
            dp[i][0] = 0
        else:
            dp[i][0] = -1
        for j in range(1, n):
            if input[i][j] == 'a' or input[i][j] == 'b':
                dp[i][j] = max(dp[i][j], dp[i][j-1])
    ans = []
    for i in range(n):
        ans.append(''.join([str(x) for x in dp[i]]))
    return ans

if __name__ == "__main__":
    t = int(read())
    for _ in range(t):
        print("Case #%d:" % (t-_), end="")
        input = list(map(list, read().split()))
        print("\n".join(solve(input)))
################################################################

Solution:
[['a', 'a', 'a', 'a'], ['i', 'd', 'e', 'a'], ['i', 'd', 'e', 'g'], ['i', 'd', 'e', 'g']]

