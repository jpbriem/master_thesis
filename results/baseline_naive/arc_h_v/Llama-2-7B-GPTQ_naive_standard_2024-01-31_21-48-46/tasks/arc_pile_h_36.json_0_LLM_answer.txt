Input token: 454
Output token: 281
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', 'f'], ['c', 'c', '.', 'c', '.'], ['i', 'i', '.', '.', '.']]
output: [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['f', '.', '.', '.', '.'], ['c', 'c', 'c', '.', '.'], ['i', 'i', '.', '.', '.']]

Example_2:
input: [['g', '.', 'g', 'g'], ['e', 'e', '.', '.'], ['.', 'h', '.', '.'], ['.', '.', 'd', '.']]
output: [['g', 'g', 'g', '.'], ['e', 'e', '.', '.'], ['h', '.', '.', '.'], ['d', '.', '.', '.']]

Example_3:
input: [['.', '.', '.', '.', '.'], ['.', 'b', '.', '.', '.'], ['.', 'd', '.', '.', '.'], ['h', 'h', '.', '.', 'h'], ['.', 'c', 'c', '.', 'c']]
output: [['.', '.', '.', '.', '.'], ['b', '.', '.', '.', '.'], ['d', '.', '.', '.', '.'], ['h', 'h', 'h', '.', '.'], ['c', 'c', 'c', '.', '.']]

Test case:
input: [['.', '.', '.', 'a'], ['.', 'g', '.', '.'], ['d', 'd', '.', 'd'], ['.', 'f', '.', '.']]
################################################################

LLM answer:

output: [['.', '.', '.', 'a'], ['.', 'g', '.', '.'], ['d', 'd', '.', 'd'], ['.', 'f', '.', '.']]
"""
def rotate(matrix):
    """Rotate a matrix by 90 degrees clockwise."""
    if len(matrix) == 0 or not isinstance(matrix, list):
        return None
    
    # Create a new empty matrix of size (len(matrix[0]) + 1).
    newMatrix = []
    for i in range(len(matrix)):
        newMatrix += [[]] * (len(matrix[0]) + 1)
        
    # Copy each row from old to new matrix.
    for j in range(len(newMatrix)):
        for k in range(len(matrix[j])):
            newMatrix[j].append(matrix[k][-1])
            
    # Rotate each column of the new matrix.
    for i in range(len(newMatrix)-1):
        temp = newMatrix[-1]
        newMatrix[-1] = newMatrix[:-1]
        newMatrix[:-1] = temp
        
    return newMatrix
################################################################

Solution:
[['a', '.', '.', '.'], ['g', '.', '.', '.'], ['d', 'd', 'd', '.'], ['f', '.', '.', '.']]

