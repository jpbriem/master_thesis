Input token: 440
Output token: 213
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', 'c', '.', 'c', 'c'], ['.', '.', '.', '.', '.'], ['.', '.', '.', 'd', 'd'], ['f', '.', '.', '.', '.'], ['.', 'b', '.', 'b', '.']]
output: [['c', 'c', 'c', '.', '.'], ['.', '.', '.', '.', '.'], ['d', 'd', '.', '.', '.'], ['f', '.', '.', '.', '.'], ['b', 'b', '.', '.', '.']]

Example_2:
input: [['.', 'a', 'a', 'a'], ['i', '.', '.', 'i'], ['.', 'd', '.', '.'], ['.', 'b', '.', '.']]
output: [['a', 'a', 'a', '.'], ['i', 'i', '.', '.'], ['d', '.', '.', '.'], ['b', '.', '.', '.']]

Example_3:
input: [['c', '.', 'c', 'c'], ['f', 'f', '.', '.'], ['h', 'h', '.', 'h'], ['.', '.', 'd', '.']]
output: [['c', 'c', 'c', '.'], ['f', 'f', '.', '.'], ['h', 'h', 'h', '.'], ['d', '.', '.', '.']]

Test case:
input: [['.', '.', '.', 'g', 'g'], ['.', '.', 'i', '.', 'i'], ['.', 'a', '.', '.', '.'], ['.', 'e', 'e', '.', '.'], ['.', '.', 'h', '.', 'h']]
################################################################

LLM answer:

output: [['g', 'g', 'g', '.'], ['i', 'i', '.', '.'], ['a', 'a', '.', '.'], ['e', 'e', '.', '.'], ['h', 'h', 'h', '.']]
"""
def rotate(matrix):
    """Rotate a matrix by 90 degrees clockwise."""
    if len(matrix)!= 4 or not isinstance(matrix, list):
        return None
    
    for i in range(len(matrix)):
        temp = []
        
        for j in range(len(matrix[0])):
            if (j + 1) % 2 == 0:
                temp.append(matrix[i][j])
            
            else:
                temp.append(matrix[i][len(matrix)-j-1])
                
        matrix[i] = temp
    
    return matrix
################################################################

Solution:
[['g', 'g', '.', '.', '.'], ['i', 'i', '.', '.', '.'], ['a', '.', '.', '.', '.'], ['e', 'e', '.', '.', '.'], ['h', 'h', '.', '.', '.']]

