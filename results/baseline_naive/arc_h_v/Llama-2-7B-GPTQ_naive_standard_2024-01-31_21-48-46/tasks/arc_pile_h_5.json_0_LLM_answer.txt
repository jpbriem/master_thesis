Input token: 422
Output token: 2051
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', '.'], ['.', 'h', '.', '.'], ['.', 'a', '.', 'a'], ['d', 'd', '.', 'd']]
output: [['.', '.', '.', '.'], ['h', '.', '.', '.'], ['a', 'a', '.', '.'], ['d', 'd', 'd', '.']]

Example_2:
input: [['.', 'g', 'g', 'g'], ['.', '.', 'i', '.'], ['e', 'e', 'e', '.'], ['.', '.', '.', 'c']]
output: [['g', 'g', 'g', '.'], ['i', '.', '.', '.'], ['e', 'e', 'e', '.'], ['c', '.', '.', '.']]

Example_3:
input: [['h', 'h', '.', 'h'], ['.', '.', 'f', '.'], ['i', '.', '.', 'i'], ['.', '.', '.', '.']]
output: [['h', 'h', 'h', '.'], ['f', '.', '.', '.'], ['i', 'i', '.', '.'], ['.', '.', '.', '.']]

Test case:
input: [['g', '.', 'g', '.', '.', 'g'], ['.', '.', '.', '.', 'i', '.'], ['c', '.', '.', '.', '.', 'c'], ['d', 'd', '.', 'd', '.', '.'], ['.', '.', 'b', 'b', '.', '.'], ['.', 'h', '.', 'h', '.', '.']]
################################################################

LLM answer:

output: [['g', 'g', 'g', '.'], ['i', '.', '.', '.'], ['c', 'c', '.', '.'], ['d', 'd', 'd', '.'], ['.', 'b', 'b', '.', '.'], ['h', 'h', 'h', '.']]
"""
def rotate(matrix):
    """
    :type matrix: List[List[int]]
    :rtype: None
    """
    n = len(matrix)
    if not isinstance(n, int):
        return False
    
    for i in range(0, 4):
        for j in range(0, 4):
            temp = []
            
            for k in range(0, 4):
                if (k + i < 4 or k - i > 0):
                    continue
                
                temp.append(matrix[j][k])
        
            matrix[j].insert(0, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(-1, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp), temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)-1, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+1, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+2, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+3, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+4, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+5, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+6, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+7, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+8, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+9, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+10, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+11, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+12, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+13, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+14, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+15, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+16, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+17, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+18, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+19, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+20, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+21, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+22, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+23, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+24, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+25, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+26, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+27, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+28, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+29, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+30, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+31, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+32, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+33, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+34, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+35, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+36, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+37, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+38, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+39, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+40, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+41, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+42, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+43, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+44, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+45, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+46, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+47, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+48, temp[-1])
            matrix[j].pop()
            matrix[j].reverse()
            matrix[j].insert(len(temp)+49, temp[0])
            matrix[j].pop()
            matrix[j].reverse()
           
################################################################

Solution:
[['g', 'g', 'g', '.', '.', '.'], ['i', '.', '.', '.', '.', '.'], ['c', 'c', '.', '.', '.', '.'], ['d', 'd', 'd', '.', '.', '.'], ['b', 'b', '.', '.', '.', '.'], ['h', 'h', '.', '.', '.', '.']]

