Input token: 691
Output token: 507
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 1, 0, 0], [0, 0, 3, 0, 3, 0], [8, 0, 0, 0, 0, 0], [0, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5], [0, 2, 2, 2, 0, 0]]
output: [[1, 0, 0, 0, 0, 0], [3, 3, 0, 0, 0, 0], [8, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0], [2, 2, 2, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0], [0, 7, 7, 7, 0, 0], [0, 0, 4, 0, 4, 4], [0, 0, 0, 5, 0, 5], [0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0], [7, 7, 7, 0, 0, 0], [4, 4, 4, 0, 0, 0], [5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]

Example_3:
input: [[0, 0, 0, 0, 0], [4, 4, 0, 4, 0], [0, 0, 2, 0, 0], [0, 0, 0, 0, 9], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [4, 4, 4, 0, 0], [2, 0, 0, 0, 0], [9, 0, 0, 0, 0], [0, 0, 0, 0, 0]]

Test case:
input: [[1, 0, 1, 0], [0, 0, 9, 9], [0, 0, 0, 3], [0, 0, 0, 7]]
################################################################

LLM answer:

output: [[1, 0, 1, 0], [0, 0, 9, 9], [0, 0, 0, 3], [0, 0, 0, 7]]
'''
class Solution(object):
    def updateMatrix(self, mat):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        if not mat or len(mat) == 0: return mat
        m = len(mat)
        n = len(mat[0])
        for i in range(m):
            for j in range(n):
                if mat[i][j]!= 0:
                    continue
                # up
                if i > 0 and mat[i - 1][j] == 0:
                    mat[i][j] = min(mat[i - 1][j] + 1, mat[i][j])
                else:
                    mat[i][j] = mat[i][j] + 1
                # down
                if i < m - 1 and mat[i + 1][j] == 0:
                    mat[i][j] = min(mat[i + 1][j] + 1, mat[i][j])
                else:
                    mat[i][j] = mat[i][j] + 1
                # left
                if j > 0 and mat[i][j - 1] == 0:
                    mat[i][j] = min(mat[i][j - 1] + 1, mat[i][j])
                else:
                    mat[i][j] = mat[i][j] + 1
                # right
                if j < n - 1 and mat[i][j + 1] == 0:
                    mat[i][j] = min(mat[i][j + 1] + 1, mat[i][j])
                else:
                    mat[i][j] = mat[i][j] + 1
        return mat
################################################################

Solution:
[[1, 1, 0, 0], [9, 9, 0, 0], [3, 0, 0, 0], [7, 0, 0, 0]]

