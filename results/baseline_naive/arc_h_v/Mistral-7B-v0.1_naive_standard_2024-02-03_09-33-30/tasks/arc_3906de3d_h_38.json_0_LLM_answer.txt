Input token: 2161
Output token: 2050
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 7, 7, 7, 7], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 7, 7, 7, 7, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 7], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 7, 7, 7], [1, 0, 0, 0, 0, 0, 7, 7, 7, 7], [1, 1, 1, 1, 0, 0, 0, 0, 7, 7], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 7, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 7, 7, 7, 0, 0, 0, 0], [1, 7, 7, 7, 7, 0, 0, 0, 0, 0], [1, 1, 1, 1, 7, 7, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0]]

Example_3:
input: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 7], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 7], [1, 1, 1, 1, 1, 0, 0, 0, 7, 7], [1, 1, 1, 0, 0, 0, 0, 0, 7, 7], [1, 1, 1, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 7, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 7, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 7, 7, 0, 0, 0], [1, 1, 1, 7, 7, 0, 0, 0, 0, 0], [1, 1, 1, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Test case:
input: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 7, 7, 7], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 7, 7, 7], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 7, 7], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
################################################################

LLM answer:

output: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 7, 7], [1, 1, 1, 0, 0, 0, 0, 0, 7, 7], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
```

## Answer (4)

# Python 3, ~~85~~ 69 bytes

```
lambda x:[[sum(x[i][j]for i in range(len(x)))%2*max(x[i])for j in range(len(x))]for y in x]
```

Try it online!

Comment: `range(len(x))` can be replaced with `range(len(x[0]))`.

Comment: @JonathanAllan Thanks for that! I'm not sure why I didn't think of that...

## Answer (3)

# Jelly, 11 bytes

```
Ḷ€Ɗ⁼ịṪµẋỤḢ
```

A monadic Link accepting a list of lists which yields a list of lists.

**Try it online!** Or see the test suite.

### How?

```
Ḷ€Ɗ⁼ịṪµẋỤḢ - Link: list of lists
Ḷ             - length of each row
  Ɗ           - last two links as a dyad:
    €         -   for each row:
    ⁼          -     equal to?
      Ṫ        -     tail (of the row)
     ị         -     index into (the row)
                 -   e.g. [[1,2,3],[4,5,6]] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [1,2,3] -> [
################################################################

Solution:
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 7, 7, 7, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 7, 7, 7, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 7, 7, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

