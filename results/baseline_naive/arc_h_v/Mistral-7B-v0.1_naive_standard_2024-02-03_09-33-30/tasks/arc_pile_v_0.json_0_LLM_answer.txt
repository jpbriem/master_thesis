Input token: 517
Output token: 177
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[5, 2, 0, 9], [0, 2, 0, 9], [0, 2, 3, 0], [0, 0, 0, 9]]
output: [[0, 0, 0, 0], [0, 2, 0, 9], [0, 2, 0, 9], [5, 2, 3, 9]]

Example_2:
input: [[3, 0, 0, 2], [0, 5, 0, 2], [3, 5, 1, 2], [3, 0, 1, 0]]
output: [[0, 0, 0, 0], [3, 0, 0, 2], [3, 5, 1, 2], [3, 5, 1, 2]]

Example_3:
input: [[5, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 1], [0, 0, 8, 0, 4, 0], [5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [5, 0, 8, 0, 4, 0], [5, 0, 8, 0, 4, 1]]

Test case:
input: [[0, 3, 0, 2], [0, 3, 8, 2], [0, 0, 8, 2], [6, 0, 8, 0]]
################################################################

LLM answer:

output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [6, 0, 8, 0]]
'''
class Solution(object):
    def updateMatrix(self, mat):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        m = len(mat)
        n = len(mat[0])
        visited = set()
        for i in range(m):
            for j in range(n):
                if mat[i][j] == 0:
                    self.bfs(mat, i, j, visited)
        return mat
################################################################

Solution:
[[0, 0, 0, 0], [0, 0, 8, 2], [0, 3, 8, 2], [6, 3, 8, 2]]

