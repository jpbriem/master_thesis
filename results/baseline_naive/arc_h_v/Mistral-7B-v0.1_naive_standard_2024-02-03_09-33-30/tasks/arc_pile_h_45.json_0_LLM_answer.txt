Input token: 718
Output token: 380
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 4, 0, 0, 4, 4], [0, 0, 0, 1, 0, 0], [0, 0, 0, 5, 5, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 6, 0, 0, 6, 6]]
output: [[4, 4, 4, 0, 0, 0], [1, 0, 0, 0, 0, 0], [5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [6, 6, 6, 0, 0, 0]]

Example_2:
input: [[0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 3], [0, 0, 6, 6, 0, 6], [0, 0, 0, 0, 0, 0], [4, 0, 0, 4, 4, 0], [0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0], [3, 3, 0, 0, 0, 0], [6, 6, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0], [4, 4, 4, 0, 0, 0], [0, 0, 0, 0, 0, 0]]

Example_3:
input: [[9, 0, 0, 0, 0], [0, 0, 0, 6, 0], [0, 4, 4, 4, 0], [0, 0, 0, 0, 0], [0, 8, 0, 0, 8]]
output: [[9, 0, 0, 0, 0], [6, 0, 0, 0, 0], [4, 4, 4, 0, 0], [0, 0, 0, 0, 0], [8, 8, 0, 0, 0]]

Test case:
input: [[4, 0, 0, 0, 0], [9, 0, 9, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 5, 0], [0, 6, 6, 0, 0]]
################################################################

LLM answer:

output: [[4, 0, 0, 0, 0], [9, 0, 9, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 5, 0], [0, 6, 6, 0, 0]]

Constraints:
1 <= matrix.length == matrix[i].length <= 100
matrix[i][j] is either 0 or in the range from 1 to 9.
 */
public class SpiralMatrix {
    public int[][] spiralOrder(int[][] matrix) {
        if (matrix == null || matrix.length == 0) return new int[0][];
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] res = new int[m * n][];
        int i = 0, j = 0, k = 0;
        while (k < m * n) {
            for (; j < n && k < m * n; ++j) res[k++] = matrix[i++][j];
            for (; i < m && k < m * n; ++i) res[k++] = matrix[i][n - 1 - j--];
            for (; j >= 0 && k < m * n; --j) res[k++] = matrix[m - 1 - i][j];
            for (; i > 0 && k < m * n; --i) res[k++] = matrix[i][j + 1];
        }
        return res;
    }
}
################################################################

Solution:
[[4, 0, 0, 0, 0], [9, 9, 0, 0, 0], [1, 0, 0, 0, 0], [5, 0, 0, 0, 0], [6, 6, 0, 0, 0]]

