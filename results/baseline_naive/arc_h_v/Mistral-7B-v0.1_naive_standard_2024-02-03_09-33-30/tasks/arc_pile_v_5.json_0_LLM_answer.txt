Input token: 457
Output token: 361
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[0, 0, 1, 4], [0, 0, 0, 0], [0, 8, 1, 4], [0, 0, 0, 4]]
output: [[0, 0, 0, 0], [0, 0, 0, 4], [0, 0, 1, 4], [0, 8, 1, 4]]

Example_2:
input: [[7, 0, 0, 3], [7, 9, 5, 0], [7, 0, 5, 0], [0, 0, 5, 0]]
output: [[0, 0, 0, 0], [7, 0, 5, 0], [7, 0, 5, 0], [7, 9, 5, 3]]

Example_3:
input: [[8, 0, 9, 0], [0, 6, 0, 0], [8, 0, 0, 0], [8, 0, 9, 0]]
output: [[0, 0, 0, 0], [8, 0, 0, 0], [8, 0, 9, 0], [8, 6, 9, 0]]

Test case:
input: [[7, 0, 3, 0, 0, 0], [0, 9, 0, 0, 0, 0], [0, 0, 0, 4, 2, 8], [7, 0, 0, 0, 2, 0], [0, 0, 0, 4, 0, 8], [7, 0, 3, 4, 0, 0]]
################################################################

LLM answer:

output: [[0, 0, 0, 0, 0, 0], [7, 0, 3, 0, 0, 0], [0, 0, 0, 4, 2, 8], [7, 0, 0, 0, 2, 0], [0, 0, 0, 4, 0, 8], [7, 0, 3, 4, 0, 0]]
'''
class Solution(object):
    def updateMatrix(self, mat):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        m = len(mat)
        n = len(mat[0])
        visited = set()
        for i in range(m):
            for j in range(n):
                if mat[i][j] == 0:
                    queue = deque([(i, j)])
                    while queue:
                        x, y = queue.popleft()
                        for dx, dy in ((x+1,y), (x-1,y), (x,y+1), (x,y-1)):
                            if 0 <= dx < m and 0 <= dy < n and (dx,dy) not in visited:
                                mat[dx][dy] += 1 + mat[x][y]
                                visited.add((dx,dy))
                                queue.append((dx,dy))
        return mat
################################################################

Solution:
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [7, 0, 0, 4, 0, 0], [7, 0, 3, 4, 2, 8], [7, 9, 3, 4, 2, 8]]

