Input token: 434
Output token: 155
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', '.', '.], ['.', '.', '.', '.', '.], ['.', '.', '.', '.', 'f], ['c', 'c', '.', 'c', '.], ['i', 'i', '.', '.', '.']]
output: [['.', '.', '.', '.', '.], ['.', '.', '.', '.', '.], ['f', '.', '.', '.', '.], ['c', 'c', 'c', '.', '.], ['i', 'i', '.', '.', '.']]

Example_2:
input: [['g', '.', 'g', 'g], ['e', 'e', '.', '.], ['.', 'h', '.', '.], ['.', '.', 'd', '.']]
output: [['g', 'g', 'g', '.], ['e', 'e', '.', '.], ['h', '.', '.', '.], ['d', '.', '.', '.']]

Example_3:
input: [['.', '.', '.', '.', '.], ['.', 'b', '.', '.', '.], ['.', 'd', '.', '.', '.], ['h', 'h', '.', '.', 'h], ['.', 'c', 'c', '.', 'c']]
output: [['.', '.', '.', '.', '.], ['b', '.', '.', '.', '.], ['d', '.', '.', '.', '.], ['h', 'h', 'h', '.', '.], ['c', 'c', 'c', '.', '.']]

Test case:
input: [['.', '.', '.', 'a], ['.', 'g', '.', '.], ['d', 'd', '.', 'd], ['.', 'f', '.', '.']]
################################################################

LLM answer:

output: [['.', '.', '.', 'a'], ['.', 'g', '.', '.], ['d', 'd', '.', 'd'], ['.', 'f', '.', '.]]
"""
def rotate(matrix):
    """Rotate a matrix by 90 degrees clockwise."""
    if len(matrix)!= 4 or not isinstance(matrix, list):
        return None
    
    for i in range(len(matrix)):
        temp = []
        
        for j in range(len(matrix[0])):
            temp.append([matrix[j][i]])
            
        matrix = temp
    
    return matrix

################################################################

Solution:
[['a', '.', '.', '.], ['g', '.', '.', '.], ['d', 'd', 'd', '.], ['f', '.', '.', '.']]

