Input token: 1440
Output token: 504
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', 'e', 'g', 'e', 'g', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.']]

Example_2:
input: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', 'g', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', 'e', 'g', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.']]

Example_3:
input: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.']]

Test case:
input: [['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.', 'g', '.', '.', '.']]
################################################################

LLM answer:

output
\end{code}

Comment: I've tried to use `for` loop, but it doesn't work as expected.

Answer: You can do this with a simple nested for loop like so:

\begin{code}
#include <iostream>
using namespace std;
int main() {
    int n = 0;
    cin >> n;
    if (n == 0) return 0;
    cout << "Input: ";
    vector<string> v(n);
    for (auto& s : v) {
        cin >> s;
    }
    for (size_t i = 0; i < v.size(); ++i) {
        string s = v[i];
        size_t j = 0;
        while (j < s.length()) {
            char c = s[j++];
            switch (c) {
                case '.':
                    break;
                case 'g':
                    cout << endl;
                    break;
                default:
                    cout << s[j - 1];
            }
        }
    }
    return 0;
}
\end{code}
################################################################

Solution:
[['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', 'g', 'e', 'g', 'e', 'g', 'e', 'g', 'e', 'g', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', 'g', 'e', 'g', 'e', 'g', 'e', 'g', '.', '.', '.], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.], ['.', '.', '.', '.', '.', 'g', 'e', 'g', 'e', 'g', 'e', 'g', 'e', 'g', '.', '.', '.']]

