Input token: 451
Output token: 366
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [[3, 0, 4, 0, 0], [0, 0, 4, 0, 0], [0, 6, 0, 0, 0], [3, 6, 4, 0, 1], [0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 4, 0, 0], [3, 6, 4, 0, 0], [3, 6, 4, 0, 1]]

Example_2:
input: [[4, 3, 0, 6], [0, 0, 0, 0], [0, 3, 0, 6], [4, 3, 0, 0]]
output: [[0, 0, 0, 0], [0, 3, 0, 0], [4, 3, 0, 6], [4, 3, 0, 6]]

Example_3:
input: [[0, 0, 8, 1], [3, 6, 8, 1], [3, 6, 0, 0], [3, 0, 8, 1]]
output: [[0, 0, 0, 0], [3, 0, 8, 1], [3, 6, 8, 1], [3, 6, 8, 1]]

Test case:
input: [[6, 0, 0, 2], [0, 5, 1, 0], [6, 0, 0, 0], [0, 0, 0, 2]]
################################################################

LLM answer:

output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
"""
import sys
from typing import List

class Solution(object):
    def rotateColors(self, A: List[List[int]]) -> None:
        """
        :type A: List[List[int]]
        :rtype: None Do not edit, generated by AC solver.
        """
        
        n = len(A)
        if n == 0 or n == 1: return
        
        for i in range(n - 1):
            temp = []
            
            for j in range(i + 1, n):
                if A[j][i]!= A[i][i]:
                    temp.append(A[j][i])
                    
            A[i].extend(temp)
            
        for i in range(len(A)):
            for j in range(i+1, len(A)):
                if A[i][i]!= A[j][i]:
                    A[i].insert(0, A[j][i])
                    break
                
if __name__ == '__main__':
    fptr = open(sys.argv[1], 'r')
    n = int(fptr.readline())
    A = list(map(list, map(int, fptr.readline().split())))
    Solution().rotateColors(A)
################################################################

Solution:
[[0, 0, 0, 0], [0, 0, 0, 0], [6, 0, 0, 2], [6, 5, 1, 2]]

