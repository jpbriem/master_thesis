Input token: 516
Output token: 317
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', '.', 'f', 'a', 'h'], ['.', '.', 'd', 'f', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', 'i', 'd', '.', '.', 'h'], ['.', 'i', '.', '.', '.', '.'], ['.', '.', '.', '.', 'a', 'h']]
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', 'h'], ['.', 'i', 'd', 'f', 'a', 'h'], ['.', 'i', 'd', 'f', 'a', 'h']]

Example_2:
input: [['.', 'c', 'a', 'd'], ['.', '.', 'a', '.'], ['.', '.', 'a', '.'], ['.', '.', '.', '.']]
output: [['.', '.', '.', '.'], ['.', '.', 'a', '.'], ['.', '.', 'a', '.'], ['.', 'c', 'a', 'd']]

Example_3:
input: [['g', 'a', '.', '.'], ['.', 'a', '.', 'e'], ['g', 'a', '.', '.'], ['g', '.', '.', 'e']]
output: [['.', '.', '.', '.'], ['g', 'a', '.', '.'], ['g', 'a', '.', 'e'], ['g', 'a', '.', 'e']]

Test case:
input: [['h', '.', 'c', '.', '.', 'd'], ['h', 'g', '.', '.', '.', 'd'], ['h', 'g', 'c', '.', '.', 'd'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', 'e', 'f', '.']]
################################################################

LLM answer:

output: [['.', '.', '.', '.', '.', '.'], ['h', '.', 'c', '.', '.', 'd'], ['h', 'g', '.', '.', '.', 'd'], ['h', 'g', 'c', '.', '.', 'd'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', 'e', 'f', '.']]

Constraints:
1 <= matrix.length, matrix[0].length <= 50
matrix[i][j] is either '.' or a lowercase English letter.
 */
public class RotateImage {
    public void rotate(char[][] matrix) {
        int n = matrix.length;
        for (int i=0; i<n/2; i++) {
            for (int j=i; j<n-i-1; j++) {
                char temp = matrix[i][j];
                matrix[i][j] = matrix[n-j-1][i];
                matrix[n-j-1][i] = matrix[n-i-1][n-j-1];
                matrix[n-i-1][n-j-1] = matrix[j][n-i-1];
                matrix[j][n-i-1] = temp;
            }
        }
    }
}
################################################################

Solution:
[['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['h', '.', '.', '.', '.', 'd'], ['h', 'g', 'c', '.', '.', 'd'], ['h', 'g', 'c', 'e', 'f', 'd']]

