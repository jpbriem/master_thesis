Input token: 508
Output token: 270
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', 'c', 'c', 'c'], ['i', 'i', '.', '.'], ['.', 'b', '.', '.'], ['.', '.', '.', '.']]
output: [['c', 'c', 'c', '.'], ['i', 'i', '.', '.'], ['b', '.', '.', '.'], ['.', '.', '.', '.']]

Example_2:
input: [['.', 'h', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', 'b'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', 'i', 'i'], ['.', 'e', '.', '.', 'e', '.'], ['.', '.', '.', '.', '.', 'a']]
output: [['h', '.', '.', '.', '.', '.'], ['b', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['i', 'i', '.', '.', '.', '.'], ['e', 'e', '.', '.', '.', '.'], ['a', '.', '.', '.', '.', '.']]

Example_3:
input: [['f', '.', 'f', '.'], ['.', 'a', 'a', '.'], ['.', '.', '.', '.'], ['.', '.', '.', 'h']]
output: [['f', 'f', '.', '.'], ['a', 'a', '.', '.'], ['.', '.', '.', '.'], ['h', '.', '.', '.']]

Test case:
input: [['.', '.', 'h', '.', 'h', '.'], ['a', '.', '.', 'a', '.', '.'], ['.', 'f', 'f', 'f', '.', '.'], ['g', '.', 'g', '.', '.', '.'], ['.', 'b', '.', 'b', '.', '.'], ['.', '.', 'c', '.', '.', 'c']]
################################################################

LLM answer:

output: [['h', '.', 'h', '.', '.', '.'], ['a', '.', '.', 'a', '.', '.'], ['f', 'f', 'f', '.', '.', '.'], ['g', '.', 'g', '.', '.', '.'], ['b', '.', '.', 'b', '.', '.'], ['.', 'c', '.', '.', 'c', '.']]

Constraints:
1 <= board.length, board[i].length <= 50
board[i][j] is either 'W' or 'B'.
 */
public class Solution {
    public char[][] flipAndInvertImage(char[][] A) {
        int n = A.length;
        for (int i=0; i<n; ++i){
            for (int j=0; j<n/2; ++j){
                if (A[i][j] == 'W'){
                    A[i][j] = 'B';
                } else {
                    A[i][j] = 'W';
                }
            }
        }
        return A;
    }
}
################################################################

Solution:
[['h', 'h', '.', '.', '.', '.'], ['a', 'a', '.', '.', '.', '.'], ['f', 'f', 'f', '.', '.', '.'], ['g', 'g', '.', '.', '.', '.'], ['b', 'b', '.', '.', '.', '.'], ['c', 'c', '.', '.', '.', '.']]

