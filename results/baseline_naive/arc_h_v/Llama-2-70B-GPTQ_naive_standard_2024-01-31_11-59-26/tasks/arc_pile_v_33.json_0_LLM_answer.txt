Input token: 553
Output token: 300
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['.', '.', 'e', '.', '.', '.'], ['.', '.', '.', 'a', '.', '.'], ['f', '.', 'e', '.', '.', 'c'], ['.', 'b', '.', 'a', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', 'c']]
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', 'e', 'a', '.', 'c'], ['f', 'b', 'e', 'a', '.', 'c']]

Example_2:
input: [['.', '.', '.', '.', '.', 'i'], ['.', '.', '.', '.', '.', 'i'], ['.', '.', 'b', '.', '.', 'i'], ['c', '.', 'b', 'g', '.', '.'], ['c', '.', 'b', '.', '.', '.'], ['c', 'e', '.', '.', '.', '.']]
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['c', '.', 'b', '.', '.', 'i'], ['c', '.', 'b', '.', '.', 'i'], ['c', 'e', 'b', 'g', '.', 'i']]

Example_3:
input: [['.', '.', '.', '.'], ['.', '.', '.', 'i'], ['.', '.', '.', 'i'], ['.', '.', '.', '.']]
output: [['.', '.', '.', '.'], ['.', '.', '.', '.'], ['.', '.', '.', 'i'], ['.', '.', '.', 'i']]

Test case:
input: [['c', '.', 'e', 'h'], ['.', 'f', 'e', 'h'], ['c', 'f', '.', 'h'], ['.', 'f', '.', '.']]
################################################################

LLM answer:

output: [['c', '.', 'e', 'h'], ['.', 'f', 'e', 'h'], ['c', 'f', 'e', 'h'], ['.', 'f', 'e', 'h']]
"""
from typing import List, Optional

class Solution:
    def reconstructQueue(self, people: List[List[str]]) -> List[List[str]]:
        """
        1. 从后往前扫描，记录每个人的位置和顺序号。
        2. 根据顺序号对列表进行重新排序。
        3. 返回结果。
        """
        if not people or len(people) == 0: return []
        queue = collections.deque() # 双端队列
        for i in range(len(people)):
            person = people[i][::-1].split('')
            queue.appendleft([person[-1], i])
        result = list(queue)[::-1]
        for i in range(len(result)):
            result[i] = result[i][0] + ''.join(list(reversed(result[i][1:])))
        return result

################################################################

Solution:
[['.', '.', '.', '.'], ['.', 'f', '.', 'h'], ['c', 'f', 'e', 'h'], ['c', 'f', 'e', 'h']]

