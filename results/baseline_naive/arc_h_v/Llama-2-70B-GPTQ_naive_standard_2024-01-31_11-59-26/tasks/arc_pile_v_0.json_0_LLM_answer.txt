Input token: 469
Output token: 325
################################################################

LLM prompt:
The following input-output pairs are examples and share the same underlying transformation pattern.
Example_1:
input: [['e', 'b', '.', 'i'], ['.', 'b', '.', 'i'], ['.', 'b', 'c', '.'], ['.', '.', '.', 'i']]
output: [['.', '.', '.', '.'], ['.', 'b', '.', 'i'], ['.', 'b', '.', 'i'], ['e', 'b', 'c', 'i']]

Example_2:
input: [['c', '.', '.', 'b'], ['.', 'e', '.', 'b'], ['c', 'e', 'a', 'b'], ['c', '.', 'a', '.']]
output: [['.', '.', '.', '.'], ['c', '.', '.', 'b'], ['c', 'e', 'a', 'b'], ['c', 'e', 'a', 'b']]

Example_3:
input: [['e', '.', 'h', '.', '.', '.'], ['.', '.', '.', '.', '.', 'a'], ['.', '.', 'h', '.', 'd', '.'], ['e', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', 'd', '.']]
output: [['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.'], ['e', '.', 'h', '.', 'd', '.'], ['e', '.', 'h', '.', 'd', 'a']]

Test case:
input: [['.', 'c', '.', 'b'], ['.', 'c', 'h', 'b'], ['.', '.', 'h', 'b'], ['f', '.', 'h', '.']]
################################################################

LLM answer:

output: [['.', 'c', '.', 'b'], ['.', 'c', 'h', 'b'], ['.', '.', 'h', 'b'], ['f', '.', 'h', 'b']]
"""
from typing import List, Optional

class Solution:
    def reconstructQueue(self, people: List[List[str]]) -> List[List[str]]:
        """
        1. 从后往前扫描，记录每个人的位置和颜色。
        2. 如果有相同颜色的人在前面，则将其移动到后面。
        3. 重复第二步直至没有相同颜色的人在前面。
        4. 最终得到一组不同颜色的人。
        """
        if not people or len(people) == 0: return []
        queue = collections.deque()
        for i in range(len(people)):
            person = people[i][::-1].copy()
            queue.appendleft(person)
        while True:
            front = queue.popleft()
            back = queue[-1]
            if front!= back: break
            queue.remove(back)
        result = list(queue)[::-1]
        return result

################################################################

Solution:
[['.', '.', '.', '.'], ['.', '.', 'h', 'b'], ['.', 'c', 'h', 'b'], ['f', 'c', 'h', 'b']]

