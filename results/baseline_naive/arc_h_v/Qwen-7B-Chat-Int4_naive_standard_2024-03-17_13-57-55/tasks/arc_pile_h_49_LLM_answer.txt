
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[7, 0, 0, 7], [0, 0, 0, 0], [0, 0, 0, 0], [0, 9, 9, 9]]
output: [[7, 7, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [9, 9, 9, 0]]

Example_2:
input: [[0, 5, 5, 5, 0], [2, 0, 0, 2, 2], [0, 0, 0, 0, 6], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
output: [[5, 5, 5, 0, 0], [2, 2, 2, 0, 0], [6, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]

Example_3:
input: [[9, 9, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [7, 0, 7, 7]]
output: [[9, 9, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [7, 7, 7, 0]]

Test case:
input: [[0, 1, 0, 0], [0, 0, 0, 9], [0, 0, 7, 7], [0, 0, 6, 0]]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if len(arr) == 1:
            return 1
        
        left = []
        right = []
        
        for i in range(len(arr)):
            while len(left) > 0 and arr[i] >= left[-1][1]:
                left.pop()
            while len(right) > 0 and arr[i] <= right[0][0]:
                right.pop(0)
            left.append([arr[i], i])
            right.insert(0, [arr[i], i])

        res = min(len(left), len(right))
        cur = -1

        for _ in range(res):
            cur += 1
            if left[cur][0] < right[0][0]:
                left.pop(cur)
            elif left[cur][0] > right[0][1]:
                right.pop(0)

        return res + 1
```


###########################################################
Result:
solution: [[1, 0, 0, 0], [9, 0, 0, 0], [7, 7, 0, 0], [6, 0, 0, 0]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

