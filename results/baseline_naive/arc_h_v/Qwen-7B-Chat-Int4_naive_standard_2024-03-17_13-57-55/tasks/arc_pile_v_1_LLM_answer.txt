
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[3, 0, 0, 0, 4, 0], [0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 4, 0], [3, 0, 1, 0, 0, 0], [3, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0]]
output: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0], [3, 0, 1, 0, 4, 0], [3, 0, 1, 8, 4, 0]]

Example_2:
input: [[0, 4, 0, 7], [0, 4, 0, 7], [0, 0, 0, 7], [0, 4, 3, 0]]
output: [[0, 0, 0, 0], [0, 4, 0, 7], [0, 4, 0, 7], [0, 4, 3, 7]]

Example_3:
input: [[0, 0, 2, 5], [0, 0, 0, 5], [0, 0, 2, 0], [0, 0, 0, 5]]
output: [[0, 0, 0, 0], [0, 0, 0, 5], [0, 0, 2, 5], [0, 0, 2, 5]]

Test case:
input: [[0, 0, 0, 0, 0, 0], [8, 0, 0, 2, 0, 0], [0, 0, 0, 0, 3, 0], [0, 0, 0, 2, 0, 1], [0, 7, 6, 0, 3, 0], [0, 7, 0, 2, 0, 0]]



###########################################################
Sample Outputs:
```python
class Solution:
    def maxChunksToSorted(self, arr):
        """
        :type arr: List[int]
        :rtype: int
        """
        if not arr:
            return 0
        
        result = float('inf')
        
        left, right = 0, len(arr) - 1
        while left < right:
            mid = (left + right) // 2
            count = self.countSorted(arr[left:right+1])
            
            if count == len(arr[left:right+1]):
                result = min(result, mid)
            elif count > 0 and arr[mid] <= arr[mid-1]:
                result = min(result, mid)
            else:
                left = mid + 1
                
        return result

    def countSorted(self, nums):
        i = j = k = 0
        res = []
        while i < len(nums):
            if nums[i] < nums[j]:
                res.append(i)
                i += 1
            else:
                while j < len(nums) and nums[i] >= nums[j]:
                    j += 1
                if j == i:
                    break
                res.append(j)
                i = j + 1
        return res
```


###########################################################
Result:
solution: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0], [0, 7, 0, 2, 3, 0], [8, 7, 6, 2, 3, 1]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

