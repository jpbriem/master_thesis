
###########################################################
New Step
###########################################################
prompt_log: Sample Prompt:
Example_1:
input: [[0, 0, 1, 4], [0, 0, 0, 0], [0, 8, 1, 4], [0, 0, 0, 4]]
output: [[0, 0, 0, 0], [0, 0, 0, 4], [0, 0, 1, 4], [0, 8, 1, 4]]

Example_2:
input: [[7, 0, 0, 3], [7, 9, 5, 0], [7, 0, 5, 0], [0, 0, 5, 0]]
output: [[0, 0, 0, 0], [7, 0, 5, 0], [7, 0, 5, 0], [7, 9, 5, 3]]

Example_3:
input: [[8, 0, 9, 0], [0, 6, 0, 0], [8, 0, 0, 0], [8, 0, 9, 0]]
output: [[0, 0, 0, 0], [8, 0, 0, 0], [8, 0, 9, 0], [8, 6, 9, 0]]

Test case:
input: [[7, 0, 3, 0, 0, 0], [0, 9, 0, 0, 0, 0], [0, 0, 0, 4, 2, 8], [7, 0, 0, 0, 2, 0], [0, 0, 0, 4, 0, 8], [7, 0, 3, 4, 0, 0]]



###########################################################
Sample Outputs:
```python
class Solution:
    def restoreMatrix(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        m = len(matrix)
        n = len(matrix[0])
        
        if m == 0 or n == 0:
            return [[] for _ in range(m)]
        
        stack = []
        result = []
        for i in range(m):
            row = []
            for j in range(n):
                while stack and matrix[i][j] < matrix[stack[-1]][j]:
                    row.append(matrix.pop(stack.pop()))
                row.append(matrix[i][j])
            stack.append(i)
            result.append(row)
            
        while stack:
            row = []
            for j in range(n):
                while stack and matrix[stack[-1]][j] > matrix[row[-1]][j]:
                    row.append(matrix.pop(stack.pop()))
                row.append(matrix[stack[-1]][j])
            stack.pop()
            result.insert(0, row)
            
        return result
```


###########################################################
Result:
solution: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [7, 0, 0, 4, 0, 0], [7, 0, 3, 4, 2, 8], [7, 9, 3, 4, 2, 8]]


success: 0

too_long_prompt: False

tries: 1

success_rate: 0.0

cat_success_cnt: 0

cat_success_rate: 0.0

