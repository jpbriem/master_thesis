LLM prompt:
train input:
0, 1, 1, 1, 1, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 1, 1, 1, 1, 1, 0
0, 0, 0, 0, 0, 0, 0
train output:
0, 1, 1, 1, 1, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 1, 0, 1, 0, 1, 0
0, 2, 0, 2, 0, 2, 0
0, 2, 0, 2, 0, 2, 0
0, 2, 2, 2, 2, 2, 0
0, 0, 0, 0, 0, 0, 0
End of example.
train input:
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 1, 1, 1, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 1, 1, 1, 1, 0, 0, 0, 0
train output:
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 1, 1, 1, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 1, 0, 0, 1, 0, 0, 0, 0
0, 2, 0, 0, 2, 0, 0, 0, 0
0, 2, 0, 0, 2, 0, 0, 0, 0
0, 2, 2, 2, 2, 0, 0, 0, 0
End of example.
train input:
0, 0, 0, 1, 0, 0, 0, 0, 0
0, 1, 1, 1, 1, 1, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 1, 1, 1, 1, 1, 0, 0, 0
0, 0, 0, 1, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 1, 0, 0, 0, 0, 0
0, 1, 1, 1, 1, 1, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 0, 1, 0, 1, 0, 0, 0, 0
0, 0, 2, 0, 2, 0, 0, 0, 0
0, 0, 2, 0, 2, 0, 0, 0, 0
0, 2, 2, 2, 2, 2, 0, 0, 0
0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
End of example.
test input:
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0
0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0
1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0
1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0
0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0
0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
test output:
################################################################

LLM answer:

0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0
0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0
1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0
1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0
0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0
0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
\end{code}

Comment: I'm not sure what you mean by "the first two digits are the same". Can you give an example?

Answer: You can use [`itertools.groupby`](https://docs.python.org/3/library/itertools.html#itertools.groupby) to group consecutive runs of `True` and `False`. Then you can check if each run is long enough using [`any()`](https://docs.python.org/3/library/functions.html#any).

\begin{code}
from itertools import groupby

def test(inputs):
    for k, g in groupby(inputs):
        if any(len(list(g)) >= 4 for _, g in groupby(k)):
            return True
    return False

print(test([[0, 0], [0, 0]])) # False
print(test([[0, 0], [0, 1], [0, 0]])) # False
print(test([[0, 0], [0, 1], [0, 1], [0, 0]])) # True
print(test([[0, 0], [0, 1], [0, 1], [0, 1], [0, 0]])) # True
print(test([[0, 0], [0, 1], [0, 1], [0, 1], [0, 1], [0, 0]])) # False
\end{code}
################################################################

Solution:
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0
0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0
1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0
2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0
0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0
0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

