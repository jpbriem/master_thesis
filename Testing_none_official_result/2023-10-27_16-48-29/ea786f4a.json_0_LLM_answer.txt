LLM prompt:
train input:
1, 1, 1
1, 0, 1
1, 1, 1
train output:
0, 1, 0
1, 0, 1
0, 1, 0
End of example.
train input:
2, 2, 2, 2, 2
2, 2, 2, 2, 2
2, 2, 0, 2, 2
2, 2, 2, 2, 2
2, 2, 2, 2, 2
train output:
0, 2, 2, 2, 0
2, 0, 2, 0, 2
2, 2, 0, 2, 2
2, 0, 2, 0, 2
0, 2, 2, 2, 0
End of example.
train input:
3, 3, 3, 3, 3, 3, 3
3, 3, 3, 3, 3, 3, 3
3, 3, 3, 3, 3, 3, 3
3, 3, 3, 0, 3, 3, 3
3, 3, 3, 3, 3, 3, 3
3, 3, 3, 3, 3, 3, 3
3, 3, 3, 3, 3, 3, 3
train output:
0, 3, 3, 3, 3, 3, 0
3, 0, 3, 3, 3, 0, 3
3, 3, 0, 3, 0, 3, 3
3, 3, 3, 0, 3, 3, 3
3, 3, 0, 3, 0, 3, 3
3, 0, 3, 3, 3, 0, 3
0, 3, 3, 3, 3, 3, 0
End of example.
test input:
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
test output:
################################################################

LLM answer:

0, 6, 6, 6, 6, 6, 0, 6, 6, 6, 6
6, 0, 6, 6, 6, 0, 6, 6, 6, 6, 6
6, 6, 0, 6, 0, 6, 6, 6, 6, 6, 6
6, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6
6, 6, 0, 6, 0, 6, 6, 6, 6, 6, 6
6, 0, 6, 6, 6, 0, 6, 6, 6, 6, 6
0, 6, 6, 6, 6, 6, 0, 6, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 0, 6, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 0, 6, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 6
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0
End of example.
```

## C[edit]

```
#include <stdio.h>
#include <string.h>

int main(void) {
    int i;
    char *s = "010101";
    for (i=0; i<strlen(s); ++i) {
        printf("%c", s[i]);
        if ((i+1) % 5 == 4) putchar('\n');
    }
}
```

Output:

```
010101
101010
010101
```

## C++[edit]

```
#include <iostream>
using namespace std;

int main()
{
	cout << "010101" << endl;
	cout << "101010" << endl;
	cout << "010101" << endl;
	return 0;
}
```

## Clojure[edit]

```
(doseq [line ["010101" "101010" "010101"]]
  (println line))
```

## COBOL[edit]

```
       IDENTIFICATION DIVISION.
       PROGRAM-ID. Print-lines.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       LINKAGE SECTION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      01  Line                     PIC X(8).
      01  Lines                    PIC X(17).
      01  Count                    PIC 9(2) VALUE ZERO.
      01  Maximum                  PIC 9(2) VALUE 5.
      01  Index                    PIC 9(2) VALUE 0.
       PROCEDURE DIVISION USING Lines.
       Main-Program.
           PERFORM Varying-Lines UNTIL Count > Maximum.
           STOP RUN.
       Varying-Lines.
           MOVE "010101" TO Line.
           DISPLAY Line.
           ADD 1 TO Count.
           IF Count MODULO Maximum IS EQUAL TO 0 THEN
               DISPLAY SPACES.
           END-IF.
           ADD 1 TO Index.
           IF Index GREATER THAN OR EQUAL TO 2 THEN
               MOVE "101010" TO Line.
               SUBTRACT 1 FROM Index.
           ELSE
               MOVE "010101" TO Line.
           END-IF.
           ADD 1 TO Count.
       STOP R
################################################################

Solution:
0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0
6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 6
6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6
6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6
6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6
6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6
6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6
6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6
6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6
6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 6
0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0

