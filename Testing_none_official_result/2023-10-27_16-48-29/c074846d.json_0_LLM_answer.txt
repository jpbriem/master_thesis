LLM prompt:
train input:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 2, 2, 5, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 2, 0, 0, 0
0, 0, 0, 2, 0, 0, 0
0, 3, 3, 5, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
End of example.
train input:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 2, 2, 2, 5, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 0, 2, 0, 0
0, 0, 0, 0, 2, 0, 0
0, 0, 0, 0, 2, 0, 0
0, 3, 3, 3, 5, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
End of example.
train input:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 2, 0, 0, 0
0, 0, 0, 5, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
train output:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0
0, 0, 0, 5, 2, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
End of example.
train input:
0, 0, 0
0, 5, 2
0, 0, 0
train output:
0, 0, 0
0, 5, 3
0, 2, 0
End of example.
train input:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 5, 0, 0
0, 0, 0, 0, 2, 0, 0
0, 0, 0, 0, 2, 0, 0
train output:
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
0, 0, 2, 2, 5, 0, 0
0, 0, 0, 0, 3, 0, 0
0, 0, 0, 0, 3, 0, 0
End of example.
test input:
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 5, 0, 0, 0, 0, 0
0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 0, 2, 0, 0, 0, 0, 0
0, 0, 0, 2, 0, 0, 0, 0, 0
test output:
################################################################

LLM answer:

0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 2, 2, 5, 0, 0, 0, 0
0, 0, 0, 0, 3, 0, 0, 0, 0
0, 0, 0, 3, 3, 0, 0, 0, 0
0, 0, 0, 3, 3, 0, 0, 0, 0
End of test.
```

## C[edit]

```
#include <stdio.h>
#include <string.h>

int main(void) {
    int i;
    char *s = "0, 0, 0\n"
             "0, 5, 2\n"
             "0, 0, 0\n";
    for (i=0; i<strlen(s); ++i) {
        printf("%c", s[i]);
        if ((i+1) % 7 == 0 || i==strlen(s)-1)
            putchar('\n');
    }
}
```

Output:

```
0, 0, 0
0, 5, 2
0, 0, 0
```

## C++[edit]

```
#include <iostream>
using namespace std;

int main()
{
	cout << "0, 0, 0\n"
	     << "0, 5, 2\n"
	     << "0, 0, 0\n";
}
```

## Clojure[edit]

```
(println "0, 0, 0")
(println "0, 5, 2")
(println "0, 0, 0")
```

## COBOL[edit]

```
       IDENTIFICATION DIVISION.
       PROGRAM-ID. Print-example.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       LINKAGE SECTION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      01  line                   PIC X(80).
      01  lines                  PIC X(400).
      01  count                  PIC 9(2) VALUE ZERO.
       PROCEDURE DIVISION USING lines.
       DISPLAY "0, 0, 0".
       DISPLAY "0, 5, 2".
       DISPLAY "0, 0, 0".
       STOP RUN.
```

## Common Lisp[edit]

```
(format t "~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0, ~%0
################################################################

Solution:
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0, 0
2, 2, 2, 5, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0, 0, 0
0, 0, 0, 3, 0, 0, 0, 0, 0

