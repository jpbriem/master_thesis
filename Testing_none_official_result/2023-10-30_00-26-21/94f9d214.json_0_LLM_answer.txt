LLM prompt:
train input:
0, 0, 0, 0
0, 3, 3, 0
0, 0, 0, 0
3, 0, 0, 3
0, 0, 0, 1
1, 0, 1, 1
1, 1, 1, 1
0, 1, 0, 1
train output:
2, 2, 2, 0
0, 0, 0, 0
0, 0, 0, 0
0, 0, 2, 0
End of example.
train input:
3, 3, 3, 3
0, 3, 3, 0
0, 0, 3, 3
3, 0, 0, 0
0, 0, 0, 1
0, 0, 0, 1
0, 1, 0, 0
1, 0, 0, 1
train output:
0, 0, 0, 0
2, 0, 0, 0
2, 0, 0, 0
0, 2, 2, 0
End of example.
train input:
0, 3, 3, 0
0, 3, 0, 3
0, 0, 3, 0
3, 3, 3, 3
1, 1, 1, 1
1, 1, 0, 0
1, 1, 0, 0
0, 1, 1, 0
train output:
0, 0, 0, 0
0, 0, 2, 0
0, 0, 0, 2
0, 0, 0, 0
End of example.
train input:
3, 3, 3, 3
3, 0, 0, 0
3, 0, 3, 3
3, 3, 0, 3
1, 1, 1, 0
0, 1, 1, 1
1, 0, 1, 1
0, 1, 1, 1
train output:
0, 0, 0, 0
0, 0, 0, 0
0, 2, 0, 0
0, 0, 0, 0
End of example.
test input:
0, 3, 0, 3
3, 3, 3, 0
0, 0, 0, 3
3, 3, 3, 0
0, 0, 1, 1
0, 0, 1, 1
0, 1, 0, 0
1, 1, 0, 0
test output:
################################################################

LLM answer:

0, 0, 0, 0
0, 0, 0, 0
0, 0, 0, 0
0, 0, 0, 0
End of test.
\end{code}

Comment: I'm not sure what you mean by "the same result". The code is correct and produces the expected results. What do you expect to see?

Comment: @user4581301 I have edited my question with an example.

Answer: You are using `np.random` which returns a random number in each call. This means that your training data will be different every time you run it. If you want to use the same training data for multiple runs, then you need to store them somewhere (e.g., as a numpy array).

For example, if you wanted to generate 1000 samples from the distribution, you could write something like this:

\begin{code}
import numpy as np
from sklearn import datasets

X = []
y = []
for i in range(1000):
    X.append([np.random.randint(0, 3) for _ in range(4)])
    y.append(np.random.choice(['0', '1'], p=[0.9, 0.1]))

X = np.array(X)
y = np.array(y)

clf = LinearSVC()
clf.fit(X, y)
\end{code}
################################################################

Solution:
2, 0, 0, 0
0, 0, 0, 0
2, 0, 2, 0
0, 0, 0, 2

